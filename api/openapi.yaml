openapi: 3.0.2
info:
  contact:
    email: support@beamable.com
    name: Beamable Support
    url: https://api.beamable.com
  description: var Beamable = BeamContext.Default; - That one line of code is a gateway
    to everything you need to build custom server logic via microservices along with
    a world of LiveOps tools and live services to build games that players love.
  title: history basic
  version: "1.0"
  x-konfig-ignore:
    object-with-no-properties: true
  x-konfig-has-globally-required-security: true
externalDocs:
  description: Beamable Documentation
  url: https://docs.beamable.com
servers:
- url: https://api.beamable.com
tags:
- name: Payment
- name: Object
- name: Account
- name: Group
- name: Realm
- name: Leaderboard
- name: Mail
- name: Content
- name: Tournament
- name: Trial
- name: Cloudsaving
- name: Announcement
- name: Game
- name: Event
- name: Product
- name: Message
- name: Notification
- name: History
- name: Shard
- name: LegacyPvpDef
- name: Entitlement
- name: Promo
- name: Session
- name: Timer
- name: Campaign
- name: Authentication
- name: Statistic
- name: Template
- name: Plan
- name: SKU
- name: Friend
- name: Block
- name: Update
- name: Registration
- name: Activity
- name: Item
- name: Audit
- name: Subscription
- name: Currency
- name: Order
- name: Price
- name: LegacyEntitlementDef
paths:
  /basic/trials/admin/data:
    get:
      operationId: Trial_adminDataGet
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetS3DataResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-trials-admin-data
      x-accepts: application/json
  /basic/trials/data:
    delete:
      operationId: Trial_deleteData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialDataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-trials-data
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: Trial_postData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadTrialDataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveGameDataResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-trials-data
      x-content-type: application/json
      x-accepts: application/json
  /basic/trials/pause:
    put:
      operationId: Trial_pauseTrial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseTrialRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-trials-pause
      x-content-type: application/json
      x-accepts: application/json
  /basic/trials/schedule:
    put:
      operationId: Trial_schedulePut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleTrialRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-trials-schedule
      x-content-type: application/json
      x-accepts: application/json
  /basic/trials/admin:
    get:
      operationId: Trial_getAdminTrials
      parameters:
      - explode: true
        in: query
        name: dbid
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlayerTrialsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-trials-admin
      x-accepts: application/json
  /basic/trials/start:
    put:
      operationId: Trial_startTrialProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTrialRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-trials-start
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/me/device:
    delete:
      operationId: Account_removeDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDevicesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-accounts-me-device
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/me:
    get:
      operationId: Account_getUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-me
      x-accepts: application/json
    put:
      operationId: Account_updateAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-accounts-me
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/me/third-party:
    delete:
      operationId: Account_deleteThirdParty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyAvailableRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-accounts-me-third-party
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/get-personally-identifiable-information:
    get:
      operationId: Account_getPersonallyIdentifiableInformation
      parameters:
      - explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPersonallyIdentifiableInformationResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-get-personally-identifiable-information
      x-accepts: application/json
  /basic/accounts/search:
    get:
      operationId: Account_searchAccounts
      parameters:
      - explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pagesize
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-search
      x-accepts: application/json
  /basic/accounts/email-update/init:
    post:
      operationId: Mail_updateEmailInit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-email-update-init
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/email-update/confirm:
    post:
      operationId: Mail_updateEmailConfirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdateConfirmation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-email-update-confirm
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/available/third-party:
    get:
      operationId: Account_checkThirdPartyAvailability
      parameters:
      - explode: true
        in: query
        name: thirdParty
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAvailableResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-available-third-party
      x-accepts: application/json
  /basic/accounts/admin/admin-user:
    post:
      operationId: Account_createAdminUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPortalView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-admin-admin-user
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/register:
    post:
      operationId: Account_registerNewAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegistration'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-register
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/admin/me:
    get:
      operationId: Account_getDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPortalView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-admin-me
      x-accepts: application/json
  /basic/accounts/password-update/init:
    post:
      operationId: Account_updatePasswordInit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-password-update-init
      x-content-type: application/json
      x-accepts: application/json
  /basic/accounts/admin/admin-users:
    get:
      operationId: Account_getAdminUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAdminsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-admin-admin-users
      x-accepts: application/json
  /basic/accounts/find:
    get:
      operationId: Account_findAccounts
      parameters:
      - explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-find
      x-accepts: application/json
  /basic/accounts/available/device-id:
    get:
      operationId: Account_checkAvailability
      parameters:
      - explode: true
        in: query
        name: deviceId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAvailableResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-available-device-id
      x-accepts: application/json
  /basic/accounts/available:
    get:
      operationId: Account_checkAvailability
      parameters:
      - explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAvailableResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-accounts-available
      x-accepts: application/json
  /basic/accounts/password-update/confirm:
    post:
      operationId: Account_updatePasswordConfirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateConfirmation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-accounts-password-update-confirm
      x-content-type: application/json
      x-accepts: application/json
  /object/accounts/{objectId}/admin/email:
    put:
      operationId: Mail_updateAdminEmail
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-email
      x-content-type: application/json
      x-accepts: application/json
  /object/accounts/{objectId}/available-roles:
    get:
      operationId: Account_getObjectAvailableRoles
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRolesResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-accounts-objectId-available-roles
      x-accepts: application/json
  /object/accounts/{objectId}/role:
    delete:
      operationId: Account_removeRole
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-role
      x-accepts: application/json
    put:
      operationId: Account_updateRole
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-role
      x-content-type: application/json
      x-accepts: application/json
  /object/accounts/{objectId}/admin/scope:
    delete:
      operationId: Account_deleteAdminScope
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-scope
      x-accepts: application/json
    put:
      operationId: Account_updateAdminScope
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-scope
      x-content-type: application/json
      x-accepts: application/json
  /object/accounts/{objectId}/admin/third-party:
    delete:
      operationId: Account_deleteThirdPartyAdmin
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteThirdPartyAssociation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-third-party
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Account_updateThirdPartyAdmin
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferThirdPartyAssociation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-third-party
      x-content-type: application/json
      x-accepts: application/json
  /object/accounts/{objectId}/admin/forget:
    delete:
      operationId: Account_removeAdminForget
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-forget
      x-accepts: application/json
  /basic/announcements/search:
    get:
      operationId: Announcement_searchOperation
      parameters:
      - explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-announcements-search
      x-accepts: application/json
  /basic/announcements/content:
    get:
      operationId: Content_getAnnouncementContent
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-announcements-content
      x-accepts: application/json
  /basic/announcements/list:
    get:
      operationId: Announcement_getAllAnnouncements
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-announcements-list
      x-accepts: application/json
  /object/announcements/{objectId}/read:
    put:
      operationId: Announcement_markAsRead
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-announcements-objectId-read
      x-content-type: application/json
      x-accepts: application/json
  /object/announcements/{objectId}/claim:
    post:
      operationId: Announcement_claimObjectAnnouncement
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-announcements-objectId-claim
      x-content-type: application/json
      x-accepts: application/json
  /object/announcements/{objectId}/raw:
    get:
      operationId: Announcement_getObjectRaw
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementRawResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-announcements-objectId-raw
      x-accepts: application/json
  /basic/auth/token:
    get:
      operationId: Authentication_getToken
      parameters:
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-auth-token
      x-accepts: application/json
    post:
      operationId: Authentication_requestToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestWrapper'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-auth-token
      x-content-type: application/json
      x-accepts: application/json
  /object/calendars/{objectId}/claim:
    post:
      operationId: Object_claimCalendar
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarClaimRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-calendars-objectId-claim
      x-content-type: application/json
      x-accepts: application/json
  /object/chatV2/{objectId}/rooms:
    delete:
      operationId: Object_deleteRoom
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveRoomRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRoomResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-chatV2-objectId-rooms
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Object_getChatRooms
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-chatV2-objectId-rooms
      x-accepts: application/json
    post:
      operationId: Object_createChatRoom
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoomResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-chatV2-objectId-rooms
      x-content-type: application/json
      x-accepts: application/json
  /object/chatV2/{objectId}/messages:
    post:
      operationId: Message_sendMessage
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-chatV2-objectId-messages
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/replace:
    post:
      operationId: Cloudsaving_replaceData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceObjectsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-replace
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data:
    delete:
      operationId: Cloudsaving_deleteData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectRequests'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-cloudsaving-data
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/downloadURL:
    post:
      operationId: Cloudsaving_getDataDownloadUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectRequests'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLSResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-downloadURL
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/metadata:
    get:
      operationId: Cloudsaving_getDataMetadata
      parameters:
      - explode: true
        in: query
        name: request
        required: false
        schema:
          items:
            description: "WARNING: Missing items property in array schema. Missing\
              \ items property has been filled with this AnyType schema."
          type: array
        style: form
      - explode: true
        in: query
        name: playerId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectsMetadataResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-cloudsaving-data-metadata
      x-accepts: application/json
  /basic/cloudsaving/data/move:
    put:
      operationId: Cloudsaving_moveDataPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerBasicCloudDataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-cloudsaving-data-move
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/uploadURLFromPortal:
    post:
      operationId: Cloudsaving_uploadUrlFromPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequestsFromPortal'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLSResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-uploadURLFromPortal
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/commitManifest:
    put:
      operationId: Cloudsaving_commitManifestPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequests'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-cloudsaving-data-commitManifest
      x-content-type: application/json
      x-accepts: application/json
  /basic/cloudsaving/data/uploadURL:
    post:
      operationId: Cloudsaving_uploadDataUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequests'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URLSResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-uploadURL
      x-content-type: application/json
      x-accepts: application/json
  /basic/commerce/catalog:
    get:
      operationId: Product_getCatalog
      parameters:
      - explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-commerce-catalog
      x-accepts: application/json
  /basic/commerce/skus:
    get:
      operationId: Sku_listSkus
      parameters:
      - explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSKUsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - SKU
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-commerce-skus
      x-accepts: application/json
    post:
      operationId: Sku_createSku
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveSKUsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - SKU
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-commerce-skus
      x-content-type: application/json
      x-accepts: application/json
  /object/commerce/{objectId}/coupons/count:
    get:
      operationId: Object_getCommerceCouponCount
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTotalCouponResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-coupons-count
      x-accepts: application/json
  /object/commerce/{objectId}/offersAdmin:
    get:
      operationId: Object_getOffersAdmin
      parameters:
      - explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stores
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveOffersResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-offersAdmin
      x-accepts: application/json
  /object/commerce/{objectId}/purchase:
    post:
      operationId: Object_purchaseItem
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-purchase
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Object_purchaseById
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-commerce-objectId-purchase
      x-content-type: application/json
      x-accepts: application/json
  /object/commerce/{objectId}/listings:
    get:
      operationId: Object_getCommerceListings
      parameters:
      - explode: true
        in: query
        name: listing
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: store
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveListingResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-listings
      x-accepts: application/json
  /object/commerce/{objectId}/status:
    delete:
      operationId: Object_deleteStatusById
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-commerce-objectId-status
      x-content-type: application/json
      x-accepts: application/json
  /object/commerce/{objectId}/coupons:
    post:
      operationId: Object_createCommerceCoupons
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiveCouponReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-coupons
      x-content-type: application/json
      x-accepts: application/json
  /object/commerce/{objectId}/stats/update:
    post:
      operationId: Object_updateStatObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatSubscriptionNotification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-stats-update
      x-content-type: application/json
      x-accepts: application/json
  /object/commerce/{objectId}/offers:
    get:
      operationId: Object_getCommerceOffers
      parameters:
      - explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: time
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stores
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveOffersResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-offers
      x-accepts: application/json
  /basic/content/manifest/pull:
    post:
      operationId: Content_pullManifestData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullManifestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-content-manifest-pull
      x-content-type: application/json
      x-accepts: application/json
  /basic/content/content:
    get:
      operationId: Content_getContentDetails
      parameters:
      - explode: true
        in: query
        name: contentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentOrText'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-content-content
      x-accepts: application/json
  /basic/content/text:
    post:
      operationId: Content_submitTextContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveTextRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveTextResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-content-text
      x-content-type: application/json
      x-accepts: application/json
  /basic/content/manifest:
    get:
      operationId: Content_getManifestData
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-content-manifest
      x-accepts: application/json
    post:
      operationId: Content_createManifestData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveManifestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-content-manifest
      x-content-type: application/json
      x-accepts: application/json
  /basic/content/manifest/public:
    get:
      operationId: Content_getPublicManifest
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientManifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-public
      x-accepts: application/json
  /basic/content/manifest/private:
    get:
      operationId: Content_getPrivateManifest
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientManifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-private
      x-accepts: application/json
  /basic/content/manifest/checksum:
    get:
      operationId: Content_checkManifestChecksum
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestChecksum'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-checksum
      x-accepts: application/json
  /basic/events/content:
    get:
      operationId: Content_getContentData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-events-content
      x-accepts: application/json
  /basic/events/calendar:
    get:
      operationId: Event_getCalendarEvents
      parameters:
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsInDateRangeResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-events-calendar
      x-accepts: application/json
  /basic/events/applyContent:
    post:
      operationId: Content_applyContentData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventApplyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-events-applyContent
      x-content-type: application/json
      x-accepts: application/json
  /basic/events/running:
    get:
      operationId: Activity_getRunningEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventQueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Activity
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-events-running
      x-accepts: application/json
  /object/events/{objectId}/endPhase:
    put:
      operationId: Event_updateObjectEndPhase
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventPhaseEndRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-events-objectId-endPhase
      x-content-type: application/json
      x-accepts: application/json
  /object/events/{objectId}/ping:
    get:
      operationId: Event_pingObjectEvents
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingRsp'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-events-objectId-ping
      x-accepts: application/json
  /object/events/{objectId}/content:
    delete:
      operationId: Content_deleteEventContent
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-events-objectId-content
      x-accepts: application/json
    put:
      operationId: Content_updateObjectContent
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetContentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-events-objectId-content
      x-content-type: application/json
      x-accepts: application/json
  /object/events/{objectId}/refresh:
    put:
      operationId: Event_refreshObjectEvents
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-events-objectId-refresh
      x-accepts: application/json
  /object/event-players/{objectId}/claim:
    post:
      operationId: Event_claimObjectEventPlayers
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventClaimRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventClaimResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-event-players-objectId-claim
      x-content-type: application/json
      x-accepts: application/json
  /object/event-players/{objectId}/score:
    put:
      operationId: Event_updatePlayerScore
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventScoreRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-event-players-objectId-score
      x-content-type: application/json
      x-accepts: application/json
  /object/gamerelay/{objectId}/sync:
    post:
      operationId: Game_relayObjectSync
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncRsp'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId-sync
      x-content-type: application/json
      x-accepts: application/json
  /object/gamerelay/{objectId}/results:
    post:
      operationId: Game_relayObjectResults
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResultsMessage'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId-results
      x-content-type: application/json
      x-accepts: application/json
  /object/inventory/{objectId}/preview:
    put:
      operationId: Object_updateInventoryPreview
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewVipBonusResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId-preview
      x-content-type: application/json
      x-accepts: application/json
  /object/inventory/{objectId}/multipliers:
    get:
      operationId: Object_getMultipliers
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipliersGetResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-inventory-objectId-multipliers
      x-accepts: application/json
  /object/inventory/{objectId}/transaction:
    delete:
      operationId: Object_removeTransactionById
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndTransactionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-inventory-objectId-transaction
      x-content-type: application/json
      x-accepts: application/json
  /object/inventory/{objectId}/transfer:
    put:
      operationId: Object_transferItemInventory
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId-transfer
      x-content-type: application/json
      x-accepts: application/json
  /basic/inventory/items:
    get:
      operationId: Item_listItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Item
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-inventory-items
      x-accepts: application/json
  /basic/inventory/currency:
    get:
      operationId: Currency_getInventoryCurrency
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Currency
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-inventory-currency
      x-accepts: application/json
  /basic/leaderboards/list:
    get:
      operationId: Leaderboard_listUserScores
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardListResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-list
      x-accepts: application/json
  /basic/leaderboards/player:
    get:
      operationId: Leaderboard_getPlayerScores
      parameters:
      - explode: true
        in: query
        name: dbid
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeaderBoardViewResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-player
      x-accepts: application/json
  /basic/leaderboards/assignment:
    get:
      operationId: Leaderboard_getAssignmentLeaderboard
      parameters:
      - explode: true
        in: query
        name: boardId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: joinBoard
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardAssignmentInfo'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-assignment
      x-accepts: application/json
  /basic/leaderboards/uid:
    get:
      operationId: Leaderboard_getUserScores
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardUidResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-uid
      x-accepts: application/json
  /object/leaderboards/{objectId}/entries:
    delete:
      operationId: Leaderboard_deleteEntries
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-entries
      x-accepts: application/json
  /object/leaderboards/{objectId}/membership:
    get:
      operationId: Leaderboard_getObjectMembership
      parameters:
      - explode: true
        in: query
        name: playerId
        required: true
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardMembershipResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-membership
      x-accepts: application/json
  /object/leaderboards/{objectId}/ranks:
    get:
      operationId: Leaderboard_listObjectRanks
      parameters:
      - explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderBoardViewResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-ranks
      x-accepts: application/json
  /object/leaderboards/{objectId}/partition:
    get:
      operationId: Leaderboard_getObjectPartition
      parameters:
      - explode: true
        in: query
        name: playerId
        required: true
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardPartitionInfo'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-partition
      x-accepts: application/json
  /object/leaderboards/{objectId}/matches:
    get:
      operationId: Leaderboard_getObjectMatches
      parameters:
      - explode: true
        in: query
        name: poolSize
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: windows
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: windowSize
        required: true
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchMakingMatchesPvpResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-matches
      x-accepts: application/json
  /object/leaderboards/{objectId}/assignment:
    delete:
      operationId: Leaderboard_removeAssignment
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardRemoveCacheEntryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-assignment
      x-content-type: application/json
      x-accepts: application/json
  /object/leaderboards/{objectId}/entry:
    delete:
      operationId: Leaderboard_removeEntry
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardRemoveEntryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-entry
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Leaderboard_updateEntry
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardAddRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-entry
      x-content-type: application/json
      x-accepts: application/json
  /object/leaderboards/{objectId}/freeze:
    put:
      operationId: Leaderboard_createFreezeRequest
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-freeze
      x-accepts: application/json
  /object/leaderboards/{objectId}/details:
    get:
      operationId: Leaderboard_getObjectDetails
      parameters:
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardDetails'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-details
      x-accepts: application/json
  /object/leaderboards/{objectId}/view:
    get:
      operationId: Leaderboard_getObjectView
      parameters:
      - explode: true
        in: query
        name: max
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: focus
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: friends
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: outlier
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: guild
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderBoardViewResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-view
      x-accepts: application/json
  /object/leaderboards/{objectId}/swap:
    put:
      operationId: Leaderboard_swapObjectLeaderboard
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardSwapRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-swap
      x-content-type: application/json
      x-accepts: application/json
  /basic/groups/search:
    get:
      operationId: Group_searchGroups
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scoreMin
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: sortField
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userScore
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: hasSlots
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollmentTypes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: scoreMax
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: subGroup
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sortValue
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-groups-search
      x-accepts: application/json
  /object/groups/{objectId}/role:
    put:
      operationId: Group_updateRole
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleChangeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-groups-objectId-role
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/kick:
    post:
      operationId: Group_kickObjectGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KickRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembershipResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-kick
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/apply:
    post:
      operationId: Group_applyObjectGroups
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupApplication'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-apply
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/donations:
    post:
      operationId: Group_createDonation
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDonationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-donations
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Group_updateDonation
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeDonationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-groups-objectId-donations
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/member:
    delete:
      operationId: Group_removeMember
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KickRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembershipResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-groups-objectId-member
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/invite:
    post:
      operationId: Group_inviteObjectGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInvite'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-invite
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}/petition:
    post:
      operationId: Group_createPetition
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupApplication'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-petition
      x-content-type: application/json
      x-accepts: application/json
  /object/group-users/{objectId}/availability:
    get:
      operationId: Group_getUserAvailability
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subGroup
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-availability
      x-accepts: application/json
  /object/group-users/{objectId}/recommended:
    get:
      operationId: Group_getRecommendedUsers
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-recommended
      x-accepts: application/json
  /object/group-users/{objectId}/join:
    delete:
      operationId: Group_joinUserDelete
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembershipRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembershipResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-group-users-objectId-join
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: Group_joinUserToGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembershipRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembershipResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-group-users-objectId-join
      x-content-type: application/json
      x-accepts: application/json
  /object/group-users/{objectId}/group:
    post:
      operationId: Group_assignObjectGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-group-users-objectId-group
      x-content-type: application/json
      x-accepts: application/json
  /object/group-users/{objectId}/search:
    get:
      operationId: Group_searchUsers
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scoreMin
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: sortField
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userScore
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: hasSlots
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: enrollmentTypes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: scoreMax
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: subGroup
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sortValue
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-search
      x-accepts: application/json
  /basic/mail/attachments:
    put:
      operationId: Mail_uploadAttachment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptMultipleAttachments'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-mail-attachments
      x-content-type: application/json
      x-accepts: application/json
  /basic/mail/template:
    get:
      operationId: Mail_getMailTemplate
      parameters:
      - explode: true
        in: query
        name: templateName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: gamerTag
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailTemplate'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-mail-template
      x-accepts: application/json
  /basic/mail/bulk:
    post:
      operationId: Mail_sendBulkEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSendMailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-mail-bulk
      x-content-type: application/json
      x-accepts: application/json
  /object/mail/{objectId}/detail:
    get:
      operationId: Mail_getObjectDetail
      parameters:
      - explode: true
        in: query
        name: mid
        required: true
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-mail-objectId-detail
      x-accepts: application/json
  /object/mail/{objectId}/categories:
    get:
      operationId: Mail_getObjectCategories
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMailCategoriesResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-mail-objectId-categories
      x-accepts: application/json
  /object/mail/{objectId}/search:
    post:
      operationId: Mail_searchMailObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-mail-objectId-search
      x-content-type: application/json
      x-accepts: application/json
  /object/mail/{objectId}/bulk:
    post:
      operationId: Mail_sendBulkItems
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSendMailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-mail-objectId-bulk
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Mail_updateObjectBulk
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateMailObjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-mail-objectId-bulk
      x-content-type: application/json
      x-accepts: application/json
  /object/mail/{objectId}/accept/many:
    put:
      operationId: Mail_acceptMany
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptMultipleAttachments'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-mail-objectId-accept-many
      x-content-type: application/json
      x-accepts: application/json
  /object/matchmaking/{objectId}/tick:
    put:
      operationId: Object_updateMatchmakingTick
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-matchmaking-objectId-tick
      x-accepts: application/json
  /object/matchmaking/{objectId}/match:
    delete:
      operationId: Object_matchmakingDelete
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-matchmaking-objectId-match
      x-accepts: application/json
    get:
      operationId: Object_getMatchmakingData
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchUpdate'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-matchmaking-objectId-match
      x-accepts: application/json
    post:
      operationId: Object_startMatchmakingProcess
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchUpdate'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-matchmaking-objectId-match
      x-accepts: application/json
  /basic/payments/windows/purchase/track:
    post:
      operationId: Payment_windowsPurchaseTrack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/audits:
    get:
      operationId: Audit_getPaymentAudits
      parameters:
      - explode: true
        in: query
        name: providerid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: provider
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: txid
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: player
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuditResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Audit
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-audits
      x-accepts: application/json
  /basic/payments/windows/purchase/complete:
    post:
      operationId: Payment_processComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/test/purchase/begin:
    post:
      operationId: Payment_processBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/update:
    get:
      operationId: Update_facebookPaymentsUpdate
      parameters:
      - explode: true
        in: query
        name: hubMode
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: hubChallenge
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: hubVerifyToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionVerificationResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Update
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-facebook-update
      x-accepts: application/json
    post:
      operationId: Update_facebookPaymentsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookPaymentUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacebookPaymentUpdateResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Update
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-update
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/purchase/fail:
    post:
      operationId: Payment_steamPurchaseFail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/purchase/complete:
    post:
      operationId: Payment_facebookPurchaseComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/purchase/fail:
    post:
      operationId: Payment_facebookPurchaseFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/test/purchase/complete:
    post:
      operationId: Payment_completePurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/itunes/product:
    get:
      operationId: Product_getItunesItem
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-itunes-product
      x-accepts: application/json
  /basic/payments/googleplay/purchase/complete:
    post:
      operationId: Payment_completePurchaseProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/test/purchase/track:
    post:
      operationId: Payment_trackPurchasePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/googleplay/purchase/begin:
    post:
      operationId: Payment_googlePlayPurchaseBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/itunes/purchase/begin:
    post:
      operationId: Payment_itunesPurchaseBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/purchase/cancel:
    post:
      operationId: Payment_facebookPurchaseCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/coupon/purchase/track:
    post:
      operationId: Payment_trackPurchasePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/purchase/complete:
    post:
      operationId: Payment_steamPurchaseComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/purchase/track:
    post:
      operationId: Payment_trackPurchasePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/itunes/purchase/fail:
    post:
      operationId: Payment_processFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/test/purchase/cancel:
    post:
      operationId: Payment_cancelPurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/googleplay/purchase/track:
    post:
      operationId: Payment_trackPurchasePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/prices:
    get:
      operationId: Price_getSteamPrices
      parameters:
      - explode: true
        in: query
        name: steamId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedPriceMap'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Price
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-prices
      x-accepts: application/json
  /basic/payments/test/purchase/fail:
    post:
      operationId: Payment_processFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/coupon/purchase/cancel:
    post:
      operationId: Payment_couponPurchaseCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/itunes/purchase/complete:
    post:
      operationId: Payment_completeItunesPurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/coupon/purchase/begin:
    post:
      operationId: Payment_couponPurchaseBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/purchase/track:
    post:
      operationId: Payment_trackPurchasePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/purchase/begin:
    post:
      operationId: Payment_facebookPurchaseBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/order:
    get:
      operationId: Order_getSteam
      parameters:
      - explode: true
        in: query
        name: orderId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SteamOrderInfoResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Order
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-order
      x-accepts: application/json
  /basic/payments/windows/purchase/begin:
    post:
      operationId: Payment_initializePurchaseProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/windows/product:
    get:
      operationId: Product_listWindowsPayments
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-windows-product
      x-accepts: application/json
  /basic/payments/googleplay/purchase/fail:
    post:
      operationId: Payment_processFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/facebook/product:
    get:
      operationId: Product_getFacebookProduct
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-facebook-product
      x-accepts: application/json
  /basic/payments/googleplay/purchase/cancel:
    post:
      operationId: Payment_googlePlayPurchaseCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/coupon/product:
    get:
      operationId: Product_getCouponDetails
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-coupon-product
      x-accepts: application/json
  /basic/payments/coupon/purchase/fail:
    post:
      operationId: Payment_failPurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/purchase/begin:
    post:
      operationId: Payment_steamPurchaseBegin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginPurchaseResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-begin
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/purchase/cancel:
    post:
      operationId: Payment_steamPurchaseCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/auth:
    post:
      operationId: Authentication_steamPostAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SteamAuthRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-auth
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/steam/product:
    get:
      operationId: Product_getSteamCatalog
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-product
      x-accepts: application/json
  /basic/payments/coupon/purchase/complete:
    post:
      operationId: Payment_completePurchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-complete
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/windows/purchase/cancel:
    post:
      operationId: Payment_windowsPurchaseCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/googleplay/product:
    get:
      operationId: Product_getGooglePlayDetails
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-googleplay-product
      x-accepts: application/json
  /basic/payments/windows/purchase/fail:
    post:
      operationId: Payment_processFailure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-fail
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/itunes/purchase/cancel:
    post:
      operationId: Payment_cancelPurchaseProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-cancel
      x-content-type: application/json
      x-accepts: application/json
  /basic/payments/test/product:
    get:
      operationId: Product_testGetBasicPayments
      parameters:
      - explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Product
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-payments-test-product
      x-accepts: application/json
  /basic/payments/itunes/purchase/track:
    post:
      operationId: Payment_itunesPurchaseTrack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackPurchaseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResultResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-track
      x-content-type: application/json
      x-accepts: application/json
  /basic/push/register:
    post:
      operationId: Registration_pushUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyRsp'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Registration
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-push-register
      x-content-type: application/json
      x-accepts: application/json
  /basic/push/send:
    post:
      operationId: Message_sendPushNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReq'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyRsp'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-push-send
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/project/beamable:
    post:
      operationId: Realm_createBeamable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-project-beamable
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/customer/alias/available:
    get:
      operationId: Realm_checkAliasAvailable
      parameters:
      - explode: true
        in: query
        name: alias
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasAvailableResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-customer-alias-available
      x-accepts: application/json
  /basic/realms/project:
    delete:
      operationId: Realm_deleteProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-realms-project
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Realm_getProjectRealms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-project
      x-accepts: application/json
    post:
      operationId: Realm_createProjectReal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-project
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Realm_updateProjectRealms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnarchiveProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-realms-project
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/games:
    get:
      operationId: Game_getRealmsGames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGameResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-games
      x-accepts: application/json
  /basic/realms/config:
    get:
      operationId: Realm_getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmConfigResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-config
      x-accepts: application/json
    put:
      operationId: Realm_updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmConfigSaveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-realms-config
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/project/rename:
    put:
      operationId: Realm_renameProjectRealms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-realms-project-rename
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/plans:
    get:
      operationId: Plan_getRealmsPlans
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePlansResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Plan
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-plans
      x-accepts: application/json
    post:
      operationId: Plan_createNewPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Plan
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-plans
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/customer:
    get:
      operationId: Realm_getCustomerRealms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerViewResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-customer
      x-accepts: application/json
    post:
      operationId: Realm_createCustomerRealm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCustomerResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-customer
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/launch-message:
    delete:
      operationId: Message_deleteLaunchMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveLaunchMessageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-realms-launch-message
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Message_getLaunchData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchMessageListResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-launch-message
      x-accepts: application/json
    post:
      operationId: Message_createLaunchMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLaunchMessageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-launch-message
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/is-customer:
    get:
      operationId: Realm_checkCustomerStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-is-customer
      x-accepts: application/json
  /basic/realms/admin/customer:
    get:
      operationId: Realm_getCustomerRealms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-admin-customer
      x-accepts: application/json
  /basic/realms/game:
    get:
      operationId: Game_getRealms
      parameters:
      - explode: true
        in: query
        name: rootPID
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGameResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-game
      x-accepts: application/json
    post:
      operationId: Game_createRealm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGameRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-game
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Game_updateRealm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameHierarchyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-realms-game
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/project/promote:
    get:
      operationId: Realm_projectPromoteGet
      parameters:
      - explode: true
        in: query
        name: sourcePid
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: promotions
        required: false
        schema:
          items:
            format: blah
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentManifestIds
        required: false
        schema:
          items:
            format: blah
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRealmResponseOld'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-project-promote
      x-accepts: application/json
    post:
      operationId: Realm_projectPromote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteRealmRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRealmResponseOld'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-project-promote
      x-content-type: application/json
      x-accepts: application/json
  /basic/realms/customers:
    get:
      operationId: Realm_listCustomersRealms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-customers
      x-accepts: application/json
  /basic/realms/promotion:
    get:
      operationId: Realm_getPromotionData
      parameters:
      - explode: true
        in: query
        name: sourcePid
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: promotions
        required: false
        schema:
          items:
            format: blah
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: contentManifestIds
        required: false
        schema:
          items:
            format: blah
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRealmResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-realms-promotion
      x-accepts: application/json
    post:
      operationId: Realm_createPromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteRealmRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRealmResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Realm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-realms-promotion
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/player:
    post:
      operationId: Notification_sendPlayerNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-player
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/global:
    post:
      operationId: Notification_sendGlobalNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-global
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/custom:
    post:
      operationId: Notification_createCustomNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-custom
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/server:
    post:
      operationId: Notification_sendServerNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerEvent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-server
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/generic:
    post:
      operationId: Notification_sendNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-generic
      x-content-type: application/json
      x-accepts: application/json
  /basic/notification/game:
    post:
      operationId: Game_postNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-notification-game
      x-content-type: application/json
      x-accepts: application/json
  /basic/session/history:
    get:
      operationId: Session_getHistory
      parameters:
      - explode: true
        in: query
        name: dbid
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: month
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHistoryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-session-history
      x-accepts: application/json
  /basic/session/status:
    get:
      operationId: Session_getStatus
      parameters:
      - explode: true
        in: query
        name: playerIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: intervalSecs
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: playerIdsSeq
        required: false
        schema:
          items:
            description: "WARNING: Missing items property in array schema. Missing\
              \ items property has been filled with this AnyType schema."
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineStatusResponses'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-session-status
      x-accepts: application/json
  /basic/session/heartbeat:
    post:
      operationId: Session_postHeartbeat
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionHeartbeat'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-session-heartbeat
      x-accepts: application/json
  /basic/stats/client/batch:
    get:
      operationId: Statistic_getClientBatchStats
      parameters:
      - explode: true
        in: query
        name: objectIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stats
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchReadStatsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Statistic
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-stats-client-batch
      x-accepts: application/json
  /basic/stats/batch:
    post:
      operationId: Statistic_batchPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSetStatsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Statistic
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-stats-batch
      x-content-type: application/json
      x-accepts: application/json
  /basic/stats/search:
    post:
      operationId: Statistic_searchData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsSearchResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Statistic
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-stats-search
      x-content-type: application/json
      x-accepts: application/json
  /basic/stats/subscribe:
    put:
      operationId: Subscription_addBasicStatsSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsSubscribeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Subscription
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-stats-subscribe
      x-content-type: application/json
      x-accepts: application/json
  /object/stats/{objectId}/client/stringlist:
    post:
      operationId: Object_postClientStringlist
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatUpdateRequestStringListFormat'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-stats-objectId-client-stringlist
      x-content-type: application/json
      x-accepts: application/json
  /object/stats/{objectId}/client:
    get:
      operationId: Object_getClientStats
      parameters:
      - explode: true
        in: query
        name: stats
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-stats-objectId-client
      x-accepts: application/json
    post:
      operationId: Object_postClientStats
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /basic/tournaments/rewards:
    get:
      operationId: Tournament_getRewards
      parameters:
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-rewards
      x-accepts: application/json
    post:
      operationId: Tournament_createReward
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-tournaments-rewards
      x-content-type: application/json
      x-accepts: application/json
  /basic/tournaments/global:
    get:
      operationId: Tournament_getGlobalTournaments
      parameters:
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: focus
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: cycle
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-global
      x-accepts: application/json
  /basic/tournaments/standings:
    get:
      operationId: Tournament_getStandings
      parameters:
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: focus
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: cycle
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStandingsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-standings
      x-accepts: application/json
  /basic/tournaments/admin/player:
    get:
      operationId: Tournament_adminPlayerDataGet
      parameters:
      - explode: true
        in: query
        name: playerId
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetPlayerStatusResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-admin-player
      x-accepts: application/json
    put:
      operationId: Tournament_updateAdminPlayer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlayerStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminPlayerStatus'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-tournaments-admin-player
      x-content-type: application/json
      x-accepts: application/json
  /basic/tournaments/me:
    get:
      operationId: Tournament_getMyTournament
      parameters:
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlayerStatusResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-me
      x-accepts: application/json
  /basic/tournaments/champions:
    get:
      operationId: Tournament_getChampions
      parameters:
      - explode: true
        in: query
        name: tournamentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cycles
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChampionsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments-champions
      x-accepts: application/json
  /basic/tournaments/score:
    post:
      operationId: Tournament_submitScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-tournaments-score
      x-content-type: application/json
      x-accepts: application/json
  /basic/social/friends:
    delete:
      operationId: Friend_removeFriend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Friend
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-social-friends
      x-content-type: application/json
      x-accepts: application/json
  /basic/social/my:
    get:
      operationId: Message_getMySocialData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Message
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-social-my
      x-accepts: application/json
  /basic/social/friends/import:
    post:
      operationId: Friend_importFriendsData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportFriendsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Friend
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-social-friends-import
      x-content-type: application/json
      x-accepts: application/json
  /basic/social/blocked:
    delete:
      operationId: Block_userSocialUnblock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipStatus'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Block
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-social-blocked
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: Block_userSocialBlocked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipStatus'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Block
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-social-blocked
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-timers/defs:
    get:
      operationId: Timer_getLegacyTimers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTimersResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Timer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-timers-defs
      x-accepts: application/json
  /basic/legacy-promos/codes:
    get:
      operationId: Promo_getPromoCodes
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableCodesResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Promo
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-promos-codes
      x-accepts: application/json
    post:
      operationId: Promo_generatePromoCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCodesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRedemptionResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Promo
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos-codes
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-promos/claim:
    post:
      operationId: Promo_claimLegacyPromo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeClaimRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRedemptionResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Promo
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos-claim
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-entitlement-defs/grant:
    post:
      operationId: Entitlement_createLegacyEntitlementDefs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementGrantMultiRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs-grant
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-entitlement-defs/revoke:
    delete:
      operationId: Entitlement_revokeLegacyEntitlementDefs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeEntitlementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-entitlement-defs-revoke
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-entitlement-defs/upload:
    post:
      operationId: Entitlement_uploadLegacyEntitlementDefs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadEntitlementDefinitionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs-upload
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-entitlement-defs/player:
    get:
      operationId: Entitlement_getPlayerEntitlements
      parameters:
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: symbol
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: icw
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: spec
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: gt
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementListResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-entitlement-defs-player
      x-accepts: application/json
  /basic/legacy-entitlement-defs/claim:
    put:
      operationId: Entitlement_defineEntitlementLegacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimEntitlementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-legacy-entitlement-defs-claim
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-cloud/campaigns/schedule:
    put:
      operationId: Campaign_updateSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMessageCampaignRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Campaign
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-legacy-cloud-campaigns-schedule
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-cloud/templates:
    delete:
      operationId: Template_deleteLegacyCloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-cloud-templates
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Template_getLegacyCloudTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCloudStorageResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-cloud-templates
      x-accepts: application/json
    post:
      operationId: Template_createLegacyCloudTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-cloud-templates
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-cloud/campaigns:
    delete:
      operationId: Campaign_removeLegacyCloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EjectMessageCampaignRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Campaign
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-cloud-campaigns
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Campaign_getLegacyCloudCampaigns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Campaign
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-cloud-campaigns
      x-accepts: application/json
    post:
      operationId: Campaign_createNewLegacyCloudCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageCampaignRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Campaign
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-cloud-campaigns
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-pvp-defs/file:
    post:
      operationId: LegacyPvpDef_submitPvpFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PvpRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-pvp-defs-file
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-shards/accepting:
    get:
      operationId: Shard_getLegacyAccepting
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardListResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards-accepting
      x-accepts: application/json
  /basic/legacy-shards/preferred:
    get:
      operationId: Shard_getPreferredLegacyShards
      parameters:
      - explode: true
        in: query
        name: preference
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards-preferred
      x-accepts: application/json
  /basic/history/apiaccess/url:
    get:
      operationId: History_getApiAccessUrl
      parameters:
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: customerScoped
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUrlResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-history-apiaccess-url
      x-accepts: application/json
  /basic/history/query/url:
    post:
      operationId: History_getQueryData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUrlResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-history-query-url
      x-content-type: application/json
      x-accepts: application/json
  /basic/history/query:
    post:
      operationId: History_getQueryResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-history-query
      x-content-type: application/json
      x-accepts: application/json
  /basic/history/microservices:
    get:
      operationId: History_getMicroservicesHistory
      parameters:
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMicroservicesResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-history-microservices
      x-accepts: application/json
  /basic/history/account/roles:
    get:
      operationId: Account_listRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserRolesView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-history-account-roles
      x-accepts: application/json
  /basic/history/apiaccess:
    get:
      operationId: History_getApiAccessHistory
      parameters:
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessLogResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-history-apiaccess
      x-accepts: application/json
  /basic/history/events:
    get:
      operationId: History_getEventHistory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNamespacesResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - History
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-history-events
      x-accepts: application/json
  /basic/trials:
    delete:
      operationId: Trial_removeTrial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-trials
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Trial_listTrials
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrialsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-trials
      x-accepts: application/json
    post:
      operationId: Trial_createNewTrial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrialRestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Trial
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-trials
      x-content-type: application/json
      x-accepts: application/json
  /basic/announcements:
    delete:
      operationId: Announcement_deleteAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnnouncementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-announcements
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: Announcement_createNewAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-announcements
      x-content-type: application/json
      x-accepts: application/json
  /object/announcements/{objectId}:
    delete:
      operationId: Announcement_removeAnnouncementObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-announcements-objectId
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Announcement_getObjectDetails
      parameters:
      - explode: true
        in: query
        name: include_deleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementQueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Announcement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-announcements-objectId
      x-accepts: application/json
  /object/calendars/{objectId}:
    get:
      operationId: Object_getCalendars
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarQueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-calendars-objectId
      x-accepts: application/json
  /object/chatV2/{objectId}:
    get:
      operationId: Object_getChatV2
      parameters:
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-chatV2-objectId
      x-accepts: application/json
  /basic/cloudsaving:
    get:
      operationId: Cloudsaving_getData
      parameters:
      - explode: true
        in: query
        name: playerId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Cloudsaving
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-cloudsaving
      x-accepts: application/json
  /object/commerce/{objectId}:
    get:
      operationId: Object_getById
      parameters:
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveOffersResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId
      x-accepts: application/json
  /basic/content:
    post:
      operationId: Content_createNewContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveContentRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveContentResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Content
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-content
      x-content-type: application/json
      x-accepts: application/json
  /object/events/{objectId}:
    get:
      operationId: Event_getObjectEvents
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventObjectData'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-events-objectId
      x-accepts: application/json
  /object/event-players/{objectId}:
    get:
      operationId: Event_getPlayersData
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPlayerView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-event-players-objectId
      x-accepts: application/json
  /object/gamerelay/{objectId}:
    post:
      operationId: Game_relayObjectPost
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Game
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId
      x-content-type: application/json
      x-accepts: application/json
  /object/inventory/{objectId}:
    get:
      operationId: Object_getInventoryObjectById
      parameters:
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-inventory-objectId
      x-accepts: application/json
    post:
      operationId: Object_createInventoryObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryQueryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-inventory-objectId
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Object_updateInventoryObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId
      x-content-type: application/json
      x-accepts: application/json
  /object/leaderboards/{objectId}:
    delete:
      operationId: Leaderboard_deleteObjectById
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId
      x-accepts: application/json
    post:
      operationId: Leaderboard_submitObjectScores
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Leaderboard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-leaderboards-objectId
      x-content-type: application/json
      x-accepts: application/json
  /object/groups/{objectId}:
    delete:
      operationId: Group_deleteObjectGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisbandRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-groups-objectId
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Group_getObjectGroups
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-groups-objectId
      x-accepts: application/json
    put:
      operationId: Group_updateObjectGroup
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-groups-objectId
      x-content-type: application/json
      x-accepts: application/json
  /object/group-users/{objectId}:
    get:
      operationId: Group_getGroupUsers
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUser'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Group
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId
      x-accepts: application/json
  /basic/mail:
    get:
      operationId: Mail_getMessages
      parameters:
      - explode: true
        in: query
        name: mid
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-mail
      x-accepts: application/json
    put:
      operationId: Mail_updateMailContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-mail
      x-content-type: application/json
      x-accepts: application/json
  /object/mail/{objectId}:
    get:
      operationId: Mail_getObjectMail
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailQueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-mail-objectId
      x-accepts: application/json
    post:
      operationId: Mail_createObjectMail
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMailObjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMailResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--object-mail-objectId
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Mail_updateObjectMail
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailSuccessResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Mail
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--object-mail-objectId
      x-content-type: application/json
      x-accepts: application/json
  /object/payments/{objectId}:
    get:
      operationId: Object_getPaymentDetails
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-payments-objectId
      x-accepts: application/json
  /basic/notification:
    get:
      operationId: Notification_getUnreadMessages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberDetailsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-notification
      x-accepts: application/json
  /basic/session:
    post:
      operationId: Session_createSessionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSessionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSessionResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-session
      x-content-type: application/json
      x-accepts: application/json
  /object/stats/{objectId}:
    delete:
      operationId: Object_deleteStatsObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--object-stats-objectId
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Object_getObjectStats
      parameters:
      - explode: true
        in: query
        name: stats
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-stats-objectId
      x-accepts: application/json
    post:
      operationId: Object_createObjectStats
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Object
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /basic/tournaments:
    get:
      operationId: Tournament_listTournaments
      parameters:
      - explode: true
        in: query
        name: isRunning
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentQueryResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-tournaments
      x-accepts: application/json
    post:
      operationId: Tournament_createNewTournament
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStatus'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-tournaments
      x-content-type: application/json
      x-accepts: application/json
  /object/tournaments/{objectId}:
    get:
      operationId: Tournament_getTournamentObject
      parameters:
      - explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentClientView'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
      tags:
      - Tournament
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--object-tournaments-objectId
      x-accepts: application/json
  /basic/legacy-timers:
    delete:
      operationId: Timer_deleteLegacyTimers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTimerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Timer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-timers
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Timer_getLegacyTimers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookedTimerResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Timer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-timers
      x-accepts: application/json
    post:
      operationId: Timer_createLegacyTimer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Timer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-timers
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-promos:
    get:
      operationId: Promo_getLegacyPromos
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefinitionsResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Promo
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-promos
      x-accepts: application/json
    post:
      operationId: Promo_createLegacyPromo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeRedemptionResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Promo
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-entitlement-defs:
    delete:
      operationId: LegacyPvpDef_deleteEntitlementDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEntitlementDefinitionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-entitlement-defs
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: LegacyPvpDef_getEntitlementDefs
      parameters:
      - explode: true
        in: query
        name: symbol
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementDefinitions'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-entitlement-defs
      x-accepts: application/json
    post:
      operationId: LegacyEntitlementDef_createDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEntitlementDefinitionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyEntitlementDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Entitlement_createLegacyEntitlementDefs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEntitlementDefinitionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Entitlement
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-legacy-entitlement-defs
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-pvp-defs:
    delete:
      operationId: LegacyPvpDef_deleteDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PvpRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-pvp-defs
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: LegacyPvpDef_getDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvpDefinitions'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-pvp-defs
      x-accepts: application/json
    put:
      operationId: LegacyPvpDef_createOrUpdateDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PvpRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - LegacyPvpDef
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-legacy-pvp-defs
      x-content-type: application/json
      x-accepts: application/json
  /basic/legacy-shards:
    delete:
      operationId: Shard_deleteLegacyShard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShardDeleteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--basic-legacy-shards
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Shard_getLegacyData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardListResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards
      x-accepts: application/json
    post:
      operationId: Shard_postLegacyShard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShardDef'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--basic-legacy-shards
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Shard_updateLegacyShardData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShardUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardResponse'
          description: ""
        "400":
          description: Bad Request
      security:
      - scope: []
        user: []
      tags:
      - Shard
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--basic-legacy-shards
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    ScheduleTrialRequest:
      example:
        name: name
        time: 0
      properties:
        name:
          type: string
        time:
          type: integer
      required:
      - time
      title: Schedule Trial Request
      type: object
    Trial:
      example:
        scheduleStart: 5
        ctype: ctype
        created: 7
        ttype: ttype
        name: name
        active: true
        assigned: 2
        strategy: strategy
        cohorts:
        - pct: 5
          customRule:
          - customAttr: customAttr
            customOp: customOp
            customVal:
            - customVal
            - customVal
          - customAttr: customAttr
            customOp: customOp
            customVal:
            - customVal
            - customVal
          name: name
          assigned: 1
          populationCap: 6
          cloudData:
          - ref: ref
            data: ""
            added: 1
            stype: 5
            retrieved: 6
            expiration: 2
            version: 0
            updated: 5
            gt: 7
            uniqueIdentifier: uniqueIdentifier
            sid: 9
          - ref: ref
            data: ""
            added: 1
            stype: 5
            retrieved: 6
            expiration: 2
            version: 0
            updated: 5
            gt: 7
            uniqueIdentifier: uniqueIdentifier
            sid: 9
        - pct: 5
          customRule:
          - customAttr: customAttr
            customOp: customOp
            customVal:
            - customVal
            - customVal
          - customAttr: customAttr
            customOp: customOp
            customVal:
            - customVal
            - customVal
          name: name
          assigned: 1
          populationCap: 6
          cloudData:
          - ref: ref
            data: ""
            added: 1
            stype: 5
            retrieved: 6
            expiration: 2
            version: 0
            updated: 5
            gt: 7
            uniqueIdentifier: uniqueIdentifier
            sid: 9
          - ref: ref
            data: ""
            added: 1
            stype: 5
            retrieved: 6
            expiration: 2
            version: 0
            updated: 5
            gt: 7
            uniqueIdentifier: uniqueIdentifier
            sid: 9
        activated: 0
      properties:
        name:
          type: string
        activated:
          type: integer
        cohorts:
          items:
            $ref: '#/components/schemas/Cohort'
          type: array
        ctype:
          type: string
        scheduleStart:
          type: integer
        assigned:
          type: integer
        strategy:
          type: string
        ttype:
          type: string
        created:
          type: integer
        active:
          type: boolean
      required:
      - active
      - assigned
      type: object
    CustomCohortRule:
      example:
        customAttr: customAttr
        customOp: customOp
        customVal:
        - customVal
        - customVal
      properties:
        customAttr:
          type: string
        customOp:
          type: string
        customVal:
          items:
            type: string
          type: array
      type: object
    Cohort:
      example:
        pct: 5
        customRule:
        - customAttr: customAttr
          customOp: customOp
          customVal:
          - customVal
          - customVal
        - customAttr: customAttr
          customOp: customOp
          customVal:
          - customVal
          - customVal
        name: name
        assigned: 1
        populationCap: 6
        cloudData:
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
      properties:
        name:
          type: string
        customRule:
          items:
            $ref: '#/components/schemas/CustomCohortRule'
          type: array
        populationCap:
          type: integer
        assigned:
          type: integer
        pct:
          type: integer
        cloudData:
          items:
            $ref: '#/components/schemas/CloudStorage'
          type: array
      required:
      - assigned
      type: object
    DeleteTrialDataRequest:
      example:
        id: 0
      properties:
        id:
          type: integer
      required:
      - id
      title: Delete Trial Data Request
      type: object
    SaveGameDataResponse:
      example:
        result: result
        version: 0
        sid: 6
      properties:
        version:
          type: integer
        result:
          type: string
        sid:
          type: integer
      required:
      - sid
      - version
      title: Save Game Data Response
      type: object
      x-konfig-is-used-in-successful-response: true
    PauseTrialRequest:
      example:
        name: name
      properties:
        name:
          type: string
      title: Pause Trial Request
      type: object
    StartTrialRequest:
      example:
        name: name
      properties:
        name:
          type: string
      title: Start Trial Request
      type: object
    CloudStorage:
      example:
        ref: ref
        data: ""
        added: 1
        stype: 5
        retrieved: 6
        expiration: 2
        version: 0
        updated: 5
        gt: 7
        uniqueIdentifier: uniqueIdentifier
        sid: 9
      properties:
        version:
          type: integer
        retrieved:
          type: integer
        uniqueIdentifier:
          type: string
        data: {}
        ref:
          type: string
        added:
          type: integer
        stype:
          type: integer
        updated:
          type: integer
        expiration:
          type: integer
        gt:
          type: integer
        sid:
          type: integer
      required:
      - sid
      - stype
      type: object
    ListTrialsResponse:
      example:
        result:
        - scheduleStart: 5
          ctype: ctype
          created: 7
          ttype: ttype
          name: name
          active: true
          assigned: 2
          strategy: strategy
          cohorts:
          - pct: 5
            customRule:
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            name: name
            assigned: 1
            populationCap: 6
            cloudData:
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
          - pct: 5
            customRule:
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            name: name
            assigned: 1
            populationCap: 6
            cloudData:
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
          activated: 0
        - scheduleStart: 5
          ctype: ctype
          created: 7
          ttype: ttype
          name: name
          active: true
          assigned: 2
          strategy: strategy
          cohorts:
          - pct: 5
            customRule:
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            name: name
            assigned: 1
            populationCap: 6
            cloudData:
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
          - pct: 5
            customRule:
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            - customAttr: customAttr
              customOp: customOp
              customVal:
              - customVal
              - customVal
            name: name
            assigned: 1
            populationCap: 6
            cloudData:
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
            - ref: ref
              data: ""
              added: 1
              stype: 5
              retrieved: 6
              expiration: 2
              version: 0
              updated: 5
              gt: 7
              uniqueIdentifier: uniqueIdentifier
              sid: 9
          activated: 0
      properties:
        result:
          items:
            $ref: '#/components/schemas/Trial'
          type: array
      title: List Trials Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CohortEntry:
      example:
        cohort: cohort
        trial: trial
      properties:
        trial:
          type: string
        cohort:
          type: string
      type: object
    GetPlayerTrialsResponse:
      example:
        cohortData:
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
        trials:
        - cohort: cohort
          trial: trial
        - cohort: cohort
          trial: trial
      properties:
        trials:
          items:
            $ref: '#/components/schemas/CohortEntry'
          type: array
        cohortData:
          items:
            $ref: '#/components/schemas/CloudStorage'
          type: array
      title: Get Player Trials Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetS3DataResponse:
      example:
        data:
        - 0
        - 0
      properties:
        data:
          items:
            type: integer
          type: array
      title: Get S 3 Data Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateTrialRestRequest:
      example:
        name: name
        cohortType: cohortType
        cohorts: cohorts
        strat: strat
      properties:
        name:
          type: string
        strat:
          type: string
        cohortType:
          type: string
        cohorts:
          type: string
      title: Create Trial Rest Request
      type: object
    UploadTrialDataRequest:
      example:
        cohortName: cohortName
        trialName: trialName
        filePayloadBase64: filePayloadBase64
        dataName: dataName
      properties:
        trialName:
          type: string
        cohortName:
          type: string
        dataName:
          type: string
        filePayloadBase64:
          type: string
      title: Upload Trial Data Request
      type: object
    GetS3DataRequest:
      properties:
        id:
          type: integer
      required:
      - id
      title: Get S 3 Data Request
      type: object
    DeleteTrialRequest:
      example:
        trialType: trialType
        name: name
      properties:
        trialType:
          type: string
        name:
          type: string
      title: Delete Trial Request
      type: object
    GetPlayerTrialsRequest:
      properties:
        dbid:
          type: integer
      required:
      - dbid
      title: Get Player Trials Request
      type: object
    TrialSuccessResponse:
      example:
        result: true
      properties:
        result:
          type: boolean
      required:
      - result
      title: Trial Success Response
      type: object
      x-konfig-is-used-in-successful-response: true
    PasswordUpdateConfirmation:
      example:
        code: code
        newPassword: newPassword
        email: email
      properties:
        code:
          type: string
        newPassword:
          type: string
        email:
          type: string
      required:
      - code
      - newPassword
      title: Password Update Confirmation
      type: object
    DeviceIdAvailableRequest:
      properties:
        deviceId:
          type: string
      required:
      - deviceId
      title: Device Id Available Request
      type: object
    AccountUpdate:
      example:
        thirdParty: thirdParty
        country: country
        hasThirdPartyToken: true
        language: language
        userName: userName
        gamerTagAssoc:
          gamerTag: 0
          projectId: projectId
        deviceId: deviceId
        token: token
      properties:
        thirdParty:
          type: string
        hasThirdPartyToken:
          type: boolean
        country:
          type: string
        language:
          type: string
        gamerTagAssoc:
          $ref: '#/components/schemas/GamerTagAssociation'
        token:
          type: string
        deviceId:
          type: string
        userName:
          type: string
      required:
      - hasThirdPartyToken
      title: Account Update
      type: object
    EmailUpdateRequest:
      example:
        codeType: codeType
        newEmail: newEmail
      properties:
        newEmail:
          type: string
        codeType:
          type: string
      required:
      - newEmail
      title: Email Update Request
      type: object
    ThirdPartyAssociation:
      example:
        userAppId: userAppId
        meta:
          key: ""
        appId: appId
        name: name
        userBusinessId: userBusinessId
        email: email
      properties:
        name:
          type: string
        email:
          type: string
        userBusinessId:
          type: string
        userAppId:
          type: string
        meta:
          additionalProperties: true
          type: object
        appId:
          type: string
      required:
      - appId
      - meta
      - name
      - userAppId
      type: object
    DeleteDevicesRequest:
      example:
        deviceIds:
        - deviceIds
        - deviceIds
      properties:
        deviceIds:
          items:
            type: string
          type: array
      title: Delete Devices Request
      type: object
    ItemCreateRequest:
      example:
        contentId: contentId
        properties:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        contentId:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/ItemProperty'
          type: array
      required:
      - contentId
      - properties
      type: object
    AccountPersonallyIdentifiableInformationResponse:
      example:
        paymentAudits:
          audits:
          - entitlements:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            created: 4
            txid: 3
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            history:
            - data: data
              MAX_FIELD_SIZE: 9
              change: change
              timestamp: timestamp
            - data: data
              MAX_FIELD_SIZE: 9
              change: change
              timestamp: timestamp
            version: version
            providername: providername
            gt: 1
            txstate: txstate
            obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            providerid: providerid
            details:
              reference: reference
              quantity: 6
              price: 7
              name: name
              localCurrency: localCurrency
              sku: sku
              subcategory: subcategory
              category: category
              providerProductId: providerProductId
              gameplace: gameplace
              localPrice: localPrice
            replayGuardValue: replayGuardValue
            updated: 2
          - entitlements:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            created: 4
            txid: 3
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            history:
            - data: data
              MAX_FIELD_SIZE: 9
              change: change
              timestamp: timestamp
            - data: data
              MAX_FIELD_SIZE: 9
              change: change
              timestamp: timestamp
            version: version
            providername: providername
            gt: 1
            txstate: txstate
            obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            providerid: providerid
            details:
              reference: reference
              quantity: 6
              price: 7
              name: name
              localCurrency: localCurrency
              sku: sku
              subcategory: subcategory
              category: category
              providerProductId: providerProductId
              gameplace: gameplace
              localPrice: localPrice
            replayGuardValue: replayGuardValue
            updated: 2
        stats:
        - stats:
            key: ""
          id: 7
        - stats:
            key: ""
          id: 7
        account:
          country: country
          deviceIds:
          - deviceIds
          - deviceIds
          realmId: realmId
          wasMigrated: true
          projects:
          - projects
          - projects
          heartbeat: 5
          created: 2
          roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          language: language
          userName: userName
          privilegedAccount: true
          deviceId: deviceId
          gamerTags:
          - gamerTag: 0
            projectId: projectId
          - gamerTag: 0
            projectId: projectId
          createdTimeMillis: 6
          password: password
          updatedTimeMillis: 5
          thirdParties:
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          id: 1
          user: user
          email: email
      properties:
        account:
          $ref: '#/components/schemas/Account'
        stats:
          items:
            $ref: '#/components/schemas/StatsResponse'
          type: array
        paymentAudits:
          $ref: '#/components/schemas/ListAuditResponse'
      required:
      - account
      - paymentAudits
      - stats
      title: Account Personally Identifiable Information Response
      type: object
      x-konfig-is-used-in-successful-response: true
    InFlightMessage:
      example:
        gamerTag: 0
        path: path
        method: method
        service: service
        shard: shard
        id: id
        body: body
      properties:
        method:
          type: string
        body:
          type: string
        path:
          type: string
        gamerTag:
          format: int64
          type: integer
        shard:
          type: string
        service:
          type: string
        id:
          type: string
      required:
      - body
      - id
      - method
      - path
      - service
      type: object
    AccountPortalView:
      example:
        roles:
        - role: role
          projectId: projectId
        - role: role
          projectId: projectId
        roleString: roleString
        thirdPartyAppAssociations:
        - thirdPartyAppAssociations
        - thirdPartyAppAssociations
        language: language
        scopes:
        - scopes
        - scopes
        id: 0
        email: email
      properties:
        email:
          type: string
        roleString:
          type: string
        scopes:
          items:
            type: string
          type: array
        id:
          format: int64
          type: integer
        language:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/RoleMapping'
          type: array
        thirdPartyAppAssociations:
          items:
            type: string
          type: array
      required:
      - id
      - scopes
      - thirdPartyAppAssociations
      type: object
      x-konfig-is-used-in-successful-response: true
    SearchAccountsRequest:
      properties:
        query:
          type: string
        page:
          format: int32
          type: integer
        pagesize:
          format: int32
          type: integer
      required:
      - page
      - pagesize
      - query
      title: Search Accounts Request
      type: object
    PasswordUpdateRequest:
      example:
        codeType: codeType
        email: email
      properties:
        email:
          type: string
        codeType:
          type: string
      required:
      - email
      title: Password Update Request
      type: object
    PaymentAuditEntryViewModel:
      properties:
        version:
          type: string
        providerid:
          type: string
        history:
          items:
            $ref: '#/components/schemas/PaymentHistoryEntryViewModel'
          type: array
        txid:
          format: int64
          type: integer
        providername:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        txstate:
          type: string
        updated:
          format: int64
          type: integer
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/EntitlementGenerator'
          type: array
        details:
          $ref: '#/components/schemas/PaymentDetailsEntryViewModel'
        replayGuardValue:
          type: string
        gt:
          format: int64
          type: integer
        created:
          format: int64
          type: integer
      required:
      - details
      - entitlements
      - gt
      - history
      - providerid
      - providername
      - txid
      - txstate
      type: object
    AccountPlayerView:
      example:
        deviceIds:
        - deviceIds
        - deviceIds
        thirdPartyAppAssociations:
        - thirdPartyAppAssociations
        - thirdPartyAppAssociations
        language: language
        scopes:
        - scopes
        - scopes
        id: 0
        email: email
      properties:
        email:
          type: string
        deviceIds:
          items:
            type: string
          type: array
        scopes:
          items:
            type: string
          type: array
        id:
          format: int64
          type: integer
        language:
          type: string
        thirdPartyAppAssociations:
          items:
            type: string
          type: array
      required:
      - deviceIds
      - id
      - scopes
      - thirdPartyAppAssociations
      title: Account Player View
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentHistoryEntryViewModel:
      properties:
        change:
          type: string
        data:
          type: string
        timestamp:
          type: string
      required:
      - change
      type: object
    AccountAvailableResponse:
      example:
        available: true
      properties:
        available:
          type: boolean
      required:
      - available
      title: Account Available Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EntitlementGenerator:
      example:
        symbol: symbol
        claimWindow:
          close: 1
          open: 1
        quantity: 1
        specialization: specialization
        action: action
        params:
          key: ""
      properties:
        quantity:
          format: int32
          type: integer
        claimWindow:
          $ref: '#/components/schemas/EntitlementClaimWindow'
        params:
          additionalProperties: true
          type: object
        symbol:
          type: string
        specialization:
          type: string
        action:
          type: string
      required:
      - action
      - symbol
      type: object
    StatsResponse:
      example:
        stats:
          key: ""
        id: 7
      properties:
        id:
          format: int64
          type: integer
        stats:
          additionalProperties: true
          type: object
      required:
      - id
      title: Stats Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RoleMapping:
      example:
        role: role
        projectId: projectId
      properties:
        projectId:
          type: string
        role:
          type: string
      required:
      - projectId
      - role
      type: object
    AccountRegistration:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      title: Account Registration
      type: object
    EmailUpdateConfirmation:
      example:
        password: password
        code: code
      properties:
        code:
          type: string
        password:
          type: string
      required:
      - code
      - password
      title: Email Update Confirmation
      type: object
    GetAdminsResponse:
      example:
        accounts:
        - roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          thirdPartyAppAssociations:
          - thirdPartyAppAssociations
          - thirdPartyAppAssociations
          language: language
          scopes:
          - scopes
          - scopes
          id: 0
          email: email
        - roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          thirdPartyAppAssociations:
          - thirdPartyAppAssociations
          - thirdPartyAppAssociations
          language: language
          scopes:
          - scopes
          - scopes
          id: 0
          email: email
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountPortalView'
          type: array
      required:
      - accounts
      title: Get Admins Response
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentDetailsEntryViewModel:
      properties:
        reference:
          type: string
        name:
          type: string
        quantity:
          format: int32
          type: integer
        sku:
          type: string
        price:
          format: int32
          type: integer
        subcategory:
          type: string
        gameplace:
          type: string
        localPrice:
          type: string
        category:
          type: string
        localCurrency:
          type: string
        providerProductId:
          type: string
      required:
      - gameplace
      - name
      - price
      - providerProductId
      - quantity
      - reference
      - sku
      type: object
    CurrencyChange:
      example:
        symbol: symbol
        amount: 4
        originalAmount: 7
      properties:
        symbol:
          type: string
        amount:
          format: int64
          type: integer
        originalAmount:
          format: int64
          type: integer
      required:
      - amount
      type: object
    AddAccountRequest:
      example:
        role: role
        email: email
      properties:
        email:
          type: string
        role:
          type: string
      required:
      - email
      title: Add Account Request
      type: object
    EntitlementClaimWindow:
      example:
        close: 1
        open: 1
      properties:
        open:
          format: int64
          type: integer
        close:
          format: int64
          type: integer
      required:
      - close
      - open
      type: object
    GamerTagAssociation:
      example:
        gamerTag: 0
        projectId: projectId
      properties:
        projectId:
          type: string
        gamerTag:
          format: int64
          type: integer
      required:
      - gamerTag
      type: object
    EmptyResponse:
      example:
        result: result
      properties:
        result:
          type: string
      required:
      - result
      title: Empty Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ItemProperty:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    ThirdPartyAvailableRequest:
      example:
        thirdParty: thirdParty
        token: token
      properties:
        thirdParty:
          type: string
        token:
          type: string
      required:
      - thirdParty
      - token
      title: Third Party Available Request
      type: object
    AccountSearchResponse:
      example:
        accounts:
        - country: country
          deviceIds:
          - deviceIds
          - deviceIds
          realmId: realmId
          wasMigrated: true
          projects:
          - projects
          - projects
          heartbeat: 5
          created: 2
          roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          language: language
          userName: userName
          privilegedAccount: true
          deviceId: deviceId
          gamerTags:
          - gamerTag: 0
            projectId: projectId
          - gamerTag: 0
            projectId: projectId
          createdTimeMillis: 6
          password: password
          updatedTimeMillis: 5
          thirdParties:
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          id: 1
          user: user
          email: email
        - country: country
          deviceIds:
          - deviceIds
          - deviceIds
          realmId: realmId
          wasMigrated: true
          projects:
          - projects
          - projects
          heartbeat: 5
          created: 2
          roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          language: language
          userName: userName
          privilegedAccount: true
          deviceId: deviceId
          gamerTags:
          - gamerTag: 0
            projectId: projectId
          - gamerTag: 0
            projectId: projectId
          createdTimeMillis: 6
          password: password
          updatedTimeMillis: 5
          thirdParties:
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          id: 1
          user: user
          email: email
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
      required:
      - accounts
      title: Account Search Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ListAuditResponse:
      example:
        audits:
        - entitlements:
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          obtainItems:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          created: 4
          txid: 3
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          history:
          - data: data
            MAX_FIELD_SIZE: 9
            change: change
            timestamp: timestamp
          - data: data
            MAX_FIELD_SIZE: 9
            change: change
            timestamp: timestamp
          version: version
          providername: providername
          gt: 1
          txstate: txstate
          obtainCurrency:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
          providerid: providerid
          details:
            reference: reference
            quantity: 6
            price: 7
            name: name
            localCurrency: localCurrency
            sku: sku
            subcategory: subcategory
            category: category
            providerProductId: providerProductId
            gameplace: gameplace
            localPrice: localPrice
          replayGuardValue: replayGuardValue
          updated: 2
        - entitlements:
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          obtainItems:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          created: 4
          txid: 3
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          history:
          - data: data
            MAX_FIELD_SIZE: 9
            change: change
            timestamp: timestamp
          - data: data
            MAX_FIELD_SIZE: 9
            change: change
            timestamp: timestamp
          version: version
          providername: providername
          gt: 1
          txstate: txstate
          obtainCurrency:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
          providerid: providerid
          details:
            reference: reference
            quantity: 6
            price: 7
            name: name
            localCurrency: localCurrency
            sku: sku
            subcategory: subcategory
            category: category
            providerProductId: providerProductId
            gameplace: gameplace
            localPrice: localPrice
          replayGuardValue: replayGuardValue
          updated: 2
      properties:
        audits:
          items:
            $ref: '#/components/schemas/PaymentAuditEntry'
          type: array
      required:
      - audits
      title: List Audit Response
      type: object
      x-konfig-is-used-in-successful-response: true
    AccountAvailableRequest:
      properties:
        email:
          type: string
      required:
      - email
      title: Account Available Request
      type: object
    FindAccountRequest:
      properties:
        query:
          type: string
      required:
      - query
      title: Find Account Request
      type: object
    Account:
      example:
        country: country
        deviceIds:
        - deviceIds
        - deviceIds
        realmId: realmId
        wasMigrated: true
        projects:
        - projects
        - projects
        heartbeat: 5
        created: 2
        roles:
        - role: role
          projectId: projectId
        - role: role
          projectId: projectId
        roleString: roleString
        inFlight:
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        language: language
        userName: userName
        privilegedAccount: true
        deviceId: deviceId
        gamerTags:
        - gamerTag: 0
          projectId: projectId
        - gamerTag: 0
          projectId: projectId
        createdTimeMillis: 6
        password: password
        updatedTimeMillis: 5
        thirdParties:
        - userAppId: userAppId
          meta:
            key: ""
          appId: appId
          name: name
          userBusinessId: userBusinessId
          email: email
        - userAppId: userAppId
          meta:
            key: ""
          appId: appId
          name: name
          userBusinessId: userBusinessId
          email: email
        id: 1
        user: user
        email: email
      properties:
        inFlight:
          items:
            $ref: '#/components/schemas/InFlightMessage'
          type: array
        createdTimeMillis:
          format: int64
          type: integer
        realmId:
          type: string
        email:
          type: string
        roleString:
          type: string
        deviceIds:
          items:
            type: string
          type: array
        privilegedAccount:
          type: boolean
        country:
          type: string
        wasMigrated:
          type: boolean
        id:
          format: int64
          type: integer
        gamerTags:
          items:
            $ref: '#/components/schemas/GamerTagAssociation'
          type: array
        language:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/RoleMapping'
          type: array
        updatedTimeMillis:
          format: int64
          type: integer
        thirdParties:
          items:
            $ref: '#/components/schemas/ThirdPartyAssociation'
          type: array
        deviceId:
          type: string
        userName:
          type: string
        heartbeat:
          format: int64
          type: integer
        password:
          type: string
        user:
          type: string
        projects:
          items:
            type: string
          type: array
        created:
          format: int64
          type: integer
      required:
      - password
      - projects
      - user
      title: Account
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAccountRequest:
      properties:
        gamerTag:
          type: integer
        email:
          type: string
        thirdPartyAssoc:
          $ref: '#/components/schemas/ThirdPartyAssociation'
        deviceId:
          type: string
      title: Get Account Request
      type: object
    DeleteThirdPartyAssociation:
      example:
        thirdParty: thirdParty
        userAppId: userAppId
      properties:
        thirdParty:
          type: string
        userAppId:
          type: string
      title: Delete Third Party Association
      type: object
    UpdateRole:
      example:
        role: role
        realm: realm
        cid: cid
      properties:
        cid:
          type: string
        realm:
          type: string
        role:
          type: string
      title: Update Role
      type: object
    AvailableRolesResponse:
      example:
        roles:
        - roles
        - roles
      properties:
        roles:
          items:
            type: string
          type: array
      title: Available Roles Response
      type: object
      x-konfig-is-used-in-successful-response: true
    TransferThirdPartyAssociation:
      example:
        thirdParty:
          userAppId: userAppId
          meta:
            key: ""
          appId: appId
          name: name
          userBusinessId: userBusinessId
          email: email
        fromAccountId: 0
      properties:
        fromAccountId:
          type: integer
        thirdParty:
          $ref: '#/components/schemas/ThirdPartyAssociation'
      required:
      - fromAccountId
      title: Transfer Third Party Association
      type: object
    WebhookComet:
      example:
        symbol: symbol
        variables:
          variables:
          - name: name
            typeName: typeName
          - name: name
            typeName: typeName
        route:
          endpoint: endpoint
          service: service
          serviceTypeStr: serviceTypeStr
        method: method
        description: description
        parameters:
          payload: payload
          parameters:
          - name: name
            typeName: typeName
            body: body
            variableRef:
              name: name
          - name: name
            typeName: typeName
            body: body
            variableRef:
              name: name
          objectId: objectId
      properties:
        description:
          type: string
        parameters:
          $ref: '#/components/schemas/RouteParameters'
        method:
          type: string
        variables:
          $ref: '#/components/schemas/RouteVariables'
        symbol:
          type: string
        route:
          $ref: '#/components/schemas/ServiceRoute'
      type: object
    AnnouncementContentResponse:
      example:
        content:
        - summary: summary
          gift:
            callWebhooks:
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            changeCurrencies:
            - symbol: symbol
              amount: 0
            - symbol: symbol
              amount: 0
            addCurrencyMap:
              key: ""
            applyVipBonus: true
            description: description
            addItemRequests:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            addItems:
            - symbol: symbol
              properties:
                key: ""
            - symbol: symbol
              properties:
                key: ""
          stat_requirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          end_date: end_date
          symbol: symbol
          attachments:
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          channel: channel
          mongo_start_date: 6
          title: title
          body: body
          validationErrors:
          - validationErrors
          - validationErrors
          mongo_end_date: 1
          clientData:
            key: ""
          start_date: start_date
        - summary: summary
          gift:
            callWebhooks:
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            changeCurrencies:
            - symbol: symbol
              amount: 0
            - symbol: symbol
              amount: 0
            addCurrencyMap:
              key: ""
            applyVipBonus: true
            description: description
            addItemRequests:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            addItems:
            - symbol: symbol
              properties:
                key: ""
            - symbol: symbol
              properties:
                key: ""
          stat_requirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          end_date: end_date
          symbol: symbol
          attachments:
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          channel: channel
          mongo_start_date: 6
          title: title
          body: body
          validationErrors:
          - validationErrors
          - validationErrors
          mongo_end_date: 1
          clientData:
            key: ""
          start_date: start_date
      properties:
        content:
          items:
            $ref: '#/components/schemas/Announcement'
          type: array
      title: Announcement Content Response
      type: object
      x-konfig-is-used-in-successful-response: true
    AnnouncementAttachment:
      example:
        symbol: symbol
        count: 5
        type: type
        properties:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        symbol:
          type: string
        count:
          type: integer
        type:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/AttachmentProperty'
          type: array
      required:
      - count
      type: object
    RouteVariable:
      example:
        name: name
        typeName: typeName
      properties:
        name:
          type: string
        typeName:
          type: string
      type: object
    WebhookInvocationStrategy:
      example:
        invocationType: invocationType
        retryType: retryType
      properties:
        invocationType:
          type: string
        retryType:
          type: string
      type: object
    Announcement:
      example:
        summary: summary
        gift:
          callWebhooks:
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          changeCurrencies:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          addCurrencyMap:
            key: ""
          applyVipBonus: true
          description: description
          addItemRequests:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          addItems:
          - symbol: symbol
            properties:
              key: ""
          - symbol: symbol
            properties:
              key: ""
        stat_requirements:
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
        end_date: end_date
        symbol: symbol
        attachments:
        - symbol: symbol
          count: 5
          type: type
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - symbol: symbol
          count: 5
          type: type
          properties:
          - name: name
            value: value
          - name: name
            value: value
        channel: channel
        mongo_start_date: 6
        title: title
        body: body
        validationErrors:
        - validationErrors
        - validationErrors
        mongo_end_date: 1
        clientData:
          key: ""
        start_date: start_date
      properties:
        summary:
          type: string
        title:
          type: string
        body:
          type: string
        channel:
          type: string
        start_date:
          type: string
        gift:
          $ref: '#/components/schemas/PlayerReward'
        mongo_start_date:
          type: integer
        stat_requirements:
          items:
            $ref: '#/components/schemas/PlayerStatRequirement'
          type: array
        mongo_end_date:
          type: integer
        symbol:
          type: string
        clientData:
          additionalProperties: true
          type: object
        validationErrors:
          items:
            type: string
          type: array
        end_date:
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/AnnouncementAttachment'
          type: array
      type: object
    RouteParameter:
      example:
        name: name
        typeName: typeName
        body: body
        variableRef:
          name: name
      properties:
        name:
          type: string
        body:
          type: string
        typeName:
          type: string
        variableRef:
          $ref: '#/components/schemas/VariableReference'
      type: object
    RouteVariables:
      example:
        variables:
        - name: name
          typeName: typeName
        - name: name
          typeName: typeName
      properties:
        variables:
          items:
            $ref: '#/components/schemas/RouteVariable'
          type: array
      type: object
    PlayerReward:
      example:
        callWebhooks:
        - webHookComet:
            symbol: symbol
            variables:
              variables:
              - name: name
                typeName: typeName
              - name: name
                typeName: typeName
            route:
              endpoint: endpoint
              service: service
              serviceTypeStr: serviceTypeStr
            method: method
            description: description
            parameters:
              payload: payload
              parameters:
              - name: name
                typeName: typeName
                body: body
                variableRef:
                  name: name
              - name: name
                typeName: typeName
                body: body
                variableRef:
                  name: name
              objectId: objectId
          webhookSymbol: webhookSymbol
          strategy:
            invocationType: invocationType
            retryType: retryType
        - webHookComet:
            symbol: symbol
            variables:
              variables:
              - name: name
                typeName: typeName
              - name: name
                typeName: typeName
            route:
              endpoint: endpoint
              service: service
              serviceTypeStr: serviceTypeStr
            method: method
            description: description
            parameters:
              payload: payload
              parameters:
              - name: name
                typeName: typeName
                body: body
                variableRef:
                  name: name
              - name: name
                typeName: typeName
                body: body
                variableRef:
                  name: name
              objectId: objectId
          webhookSymbol: webhookSymbol
          strategy:
            invocationType: invocationType
            retryType: retryType
        changeCurrencies:
        - symbol: symbol
          amount: 0
        - symbol: symbol
          amount: 0
        addCurrencyMap:
          key: ""
        applyVipBonus: true
        description: description
        addItemRequests:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        addItems:
        - symbol: symbol
          properties:
            key: ""
        - symbol: symbol
          properties:
            key: ""
      properties:
        description:
          type: string
        addItemRequests:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        changeCurrencies:
          items:
            $ref: '#/components/schemas/CurrencyChangeReward'
          type: array
        callWebhooks:
          items:
            $ref: '#/components/schemas/WebhookReward'
          type: array
        addItems:
          items:
            $ref: '#/components/schemas/NewItemReward'
          type: array
        applyVipBonus:
          type: boolean
        addCurrencyMap:
          additionalProperties: true
          type: object
      type: object
    VariableReference:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    AttachmentProperty:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    PlayerStatRequirement:
      example:
        stat: stat
        access: access
        domain: domain
        constraint: constraint
        value: value
      properties:
        domain:
          type: string
        stat:
          type: string
        constraint:
          type: string
        value:
          type: string
        access:
          type: string
      type: object
    RouteParameters:
      example:
        payload: payload
        parameters:
        - name: name
          typeName: typeName
          body: body
          variableRef:
            name: name
        - name: name
          typeName: typeName
          body: body
          variableRef:
            name: name
        objectId: objectId
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/RouteParameter'
          type: array
        payload:
          type: string
        objectId:
          type: string
      type: object
    ServiceRoute:
      example:
        endpoint: endpoint
        service: service
        serviceTypeStr: serviceTypeStr
      properties:
        service:
          type: string
        endpoint:
          type: string
        serviceTypeStr:
          type: string
      type: object
    CurrencyChangeReward:
      example:
        symbol: symbol
        amount: 0
      properties:
        symbol:
          type: string
        amount:
          type: integer
      required:
      - amount
      type: object
    DeleteAnnouncementRequest:
      example:
        symbol: symbol
      properties:
        symbol:
          type: string
      title: Delete Announcement Request
      type: object
    WebhookReward:
      example:
        webHookComet:
          symbol: symbol
          variables:
            variables:
            - name: name
              typeName: typeName
            - name: name
              typeName: typeName
          route:
            endpoint: endpoint
            service: service
            serviceTypeStr: serviceTypeStr
          method: method
          description: description
          parameters:
            payload: payload
            parameters:
            - name: name
              typeName: typeName
              body: body
              variableRef:
                name: name
            - name: name
              typeName: typeName
              body: body
              variableRef:
                name: name
            objectId: objectId
        webhookSymbol: webhookSymbol
        strategy:
          invocationType: invocationType
          retryType: retryType
      properties:
        webhookSymbol:
          type: string
        strategy:
          $ref: '#/components/schemas/WebhookInvocationStrategy'
        webHookComet:
          $ref: '#/components/schemas/WebhookComet'
      type: object
    NewItemReward:
      example:
        symbol: symbol
        properties:
          key: ""
      properties:
        symbol:
          type: string
        properties:
          additionalProperties: true
          type: object
      type: object
    SearchAnnouncementsRequest:
      properties:
        date:
          type: string
      title: Search Announcements Request
      type: object
    AnnouncementRawResponse:
      example:
        announcements:
          key: ""
      properties:
        announcements:
          additionalProperties: true
          type: object
      title: Announcement Raw Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CommonResponse:
      example:
        result: result
        data:
          key: ""
      properties:
        result:
          type: string
        data:
          additionalProperties: true
          type: object
      required:
      - data
      - result
      title: Common Response
      type: object
      x-konfig-is-used-in-successful-response: true
    AnnouncementQuery:
      properties:
        include_deleted:
          type: boolean
      title: Announcement Query
      type: object
    AnnouncementRequest:
      example:
        announcements:
        - announcements
        - announcements
        announcement: announcement
      properties:
        announcement:
          type: string
        announcements:
          items:
            type: string
          type: array
      title: Announcement Request
      type: object
    AnnouncementQueryResponse:
      example:
        announcements:
        - summary: summary
          attachments:
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          endDate: endDate
          channel: channel
          secondsRemaining: 0
          isRead: true
          title: title
          body: body
          isDeleted: true
          id: id
          isClaimed: true
          clientDataList:
          - name: name
            value: value
          - name: name
            value: value
          startDate: startDate
        - summary: summary
          attachments:
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - symbol: symbol
            count: 5
            type: type
            properties:
            - name: name
              value: value
            - name: name
              value: value
          endDate: endDate
          channel: channel
          secondsRemaining: 0
          isRead: true
          title: title
          body: body
          isDeleted: true
          id: id
          isClaimed: true
          clientDataList:
          - name: name
            value: value
          - name: name
            value: value
          startDate: startDate
      properties:
        announcements:
          items:
            $ref: '#/components/schemas/AnnouncementView'
          type: array
      title: Announcement Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    AnnouncementView:
      example:
        summary: summary
        attachments:
        - symbol: symbol
          count: 5
          type: type
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - symbol: symbol
          count: 5
          type: type
          properties:
          - name: name
            value: value
          - name: name
            value: value
        endDate: endDate
        channel: channel
        secondsRemaining: 0
        isRead: true
        title: title
        body: body
        isDeleted: true
        id: id
        isClaimed: true
        clientDataList:
        - name: name
          value: value
        - name: name
          value: value
        startDate: startDate
      properties:
        summary:
          type: string
        title:
          type: string
        body:
          type: string
        isClaimed:
          type: boolean
        channel:
          type: string
        endDate:
          type: string
        clientDataList:
          items:
            $ref: '#/components/schemas/ClientDataEntry'
          type: array
        secondsRemaining:
          type: integer
        id:
          type: string
        isDeleted:
          type: boolean
        isRead:
          type: boolean
        startDate:
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/AnnouncementAttachment'
          type: array
      required:
      - isClaimed
      - isDeleted
      - isRead
      type: object
    ClientDataEntry:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    TokenRequestWrapper:
      example:
        refresh_token: refresh_token
        password: password
        code: code
        grant_type: grant_type
        scope:
        - scope
        - scope
        customerScoped: true
        redirect_uri: redirect_uri
        third_party: third_party
        client_id: client_id
        username: username
        token: token
      properties:
        username:
          type: string
        scope:
          items:
            type: string
          type: array
        refresh_token:
          type: string
        third_party:
          type: string
        redirect_uri:
          type: string
        client_id:
          type: string
        code:
          type: string
        token:
          type: string
        customerScoped:
          type: boolean
        grant_type:
          type: string
        password:
          type: string
      title: Token Request Wrapper
      type: object
    GetTokenRequest:
      properties:
        token:
          type: string
      title: Get Token Request
      type: object
    TokenResponse:
      example:
        access_token: access_token
        refresh_token: refresh_token
        scopes:
        - scopes
        - scopes
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          type: string
        expires_in:
          format: int64
          type: integer
        refresh_token:
          type: string
        scopes:
          items:
            type: string
          type: array
        token_type:
          type: string
      required:
      - access_token
      - expires_in
      - refresh_token
      - token_type
      title: Token Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Token:
      example:
        gamerTag: 0
        accountId: 6
        expiresMs: 5
        created: 5
        pid: pid
        scopes:
        - scopes
        - scopes
        type: type
        cid: 1
        token: token
      properties:
        gamerTag:
          type: integer
        scopes:
          items:
            type: string
          type: array
        accountId:
          type: integer
        cid:
          type: integer
        pid:
          type: string
        expiresMs:
          type: integer
        token:
          type: string
        type:
          type: string
        created:
          type: integer
      required:
      - cid
      - created
      title: Token
      type: object
      x-konfig-is-used-in-successful-response: true
    RewardCalendarDay:
      example:
        obtain:
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
      properties:
        obtain:
          items:
            $ref: '#/components/schemas/EntitlementGenerator'
          type: array
      type: object
    CalendarView:
      example:
        remainingSeconds: 1
        days:
        - obtain:
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
        - obtain:
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          - symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
        nextIndex: 0
        id: id
        nextClaimSeconds: 6
      properties:
        nextIndex:
          type: integer
        nextClaimSeconds:
          type: integer
        id:
          type: string
        remainingSeconds:
          type: integer
        days:
          items:
            $ref: '#/components/schemas/RewardCalendarDay'
          type: array
      required:
      - nextClaimSeconds
      - nextIndex
      - remainingSeconds
      type: object
    CalendarClaimRequest:
      example:
        id: id
      properties:
        id:
          type: string
      title: Calendar Claim Request
      type: object
    CalendarQueryResponse:
      example:
        calendars:
        - remainingSeconds: 1
          days:
          - obtain:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
          - obtain:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
          nextIndex: 0
          id: id
          nextClaimSeconds: 6
        - remainingSeconds: 1
          days:
          - obtain:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
          - obtain:
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            - symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
          nextIndex: 0
          id: id
          nextClaimSeconds: 6
      properties:
        calendars:
          items:
            $ref: '#/components/schemas/CalendarView'
          type: array
      title: Calendar Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateRoomResponse:
      example:
        room:
          players:
          - 0
          - 0
          name: name
          keepSubscribed: true
          id: id
      properties:
        room:
          $ref: '#/components/schemas/RoomInfo'
      title: Create Room Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SendMessageResponse:
      example:
        message:
          gamerTag: 0
          expires: 1
          receiverGamerTag: 5
          attachments:
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          subject: subject
          censoredContent: censoredContent
          messageId: messageId
          senderGamerTag: 2
          body: body
          sent: 7
          roomId: roomId
          content: content
          claimedTimeMs: 4
          timestampMillis: 6
          bodyRef: 9
          reactions:
            key: ""
          state: state
          id: 5
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
      properties:
        message:
          $ref: '#/components/schemas/Message'
      title: Send Message Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaveRoomRequest:
      example:
        roomId: roomId
      properties:
        roomId:
          type: string
      title: Leave Room Request
      type: object
    SendMessageRequest:
      example:
        roomId: roomId
        content: content
      properties:
        roomId:
          type: string
        content:
          type: string
      title: Send Message Request
      type: object
    CreateRoomRequest:
      example:
        gameType: gameType
        dbids:
        - 6
        - 6
        players:
        - 0
        - 0
        keepSubscribed: true
        roomName: roomName
      properties:
        roomName:
          type: string
        keepSubscribed:
          type: boolean
        players:
          items:
            type: integer
          type: array
        gameType:
          type: string
        dbids:
          items:
            type: integer
          type: array
      required:
      - keepSubscribed
      title: Create Room Request
      type: object
    RoomInfo:
      example:
        players:
        - 0
        - 0
        name: name
        keepSubscribed: true
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        keepSubscribed:
          type: boolean
        players:
          items:
            type: integer
          type: array
      required:
      - keepSubscribed
      type: object
    LeaveRoomResponse:
      example:
        removed: removed
      properties:
        removed:
          type: string
      title: Leave Room Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetRoomsResponse:
      example:
        rooms:
        - players:
          - 0
          - 0
          name: name
          keepSubscribed: true
          id: id
        - players:
          - 0
          - 0
          name: name
          keepSubscribed: true
          id: id
      properties:
        rooms:
          items:
            $ref: '#/components/schemas/RoomInfo'
          type: array
      title: Get Rooms Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Message:
      example:
        gamerTag: 0
        expires: 1
        receiverGamerTag: 5
        attachments:
        - id: 3
          state: state
          wrapped:
            symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          target: 2
        - id: 3
          state: state
          wrapped:
            symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          target: 2
        subject: subject
        censoredContent: censoredContent
        messageId: messageId
        senderGamerTag: 2
        body: body
        sent: 7
        roomId: roomId
        content: content
        claimedTimeMs: 4
        timestampMillis: 6
        bodyRef: 9
        reactions:
          key: ""
        state: state
        id: 5
        category: category
        rewards:
          items:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          currencies:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
      properties:
        roomId:
          type: string
        gamerTag:
          type: integer
        reactions:
          additionalProperties: true
          type: object
        timestampMillis:
          type: integer
        censoredContent:
          type: string
        messageId:
          type: string
        content:
          type: string
        body:
          type: string
        expires:
          format: utc-millisec
          type: integer
        receiverGamerTag:
          type: integer
        subject:
          type: string
        state:
          type: string
        id:
          type: integer
        senderGamerTag:
          type: integer
        sent:
          format: utc-millisec
          type: integer
        category:
          type: string
        bodyRef:
          type: integer
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        rewards:
          $ref: '#/components/schemas/MailRewards'
        claimedTimeMs:
          type: integer
      required:
      - id
      - receiverGamerTag
      - senderGamerTag
      type: object
    ChatGetRequest:
      properties:
        scope:
          type: string
      title: Chat Get Request
      type: object
    ObjectRequest:
      example:
        objectKey: objectKey
      properties:
        objectKey:
          type: string
      type: object
    ObjectRequests:
      example:
        request:
        - objectKey: objectKey
        - objectKey: objectKey
        playerId: 0
      properties:
        request:
          items:
            $ref: '#/components/schemas/ObjectRequest'
          type: array
        playerId:
          type: integer
      title: Object Requests
      type: object
    ObjectsMetadataResponse:
      example:
        response:
        - metadata:
            key: ""
          objectKey: objectKey
        - metadata:
            key: ""
          objectKey: objectKey
      properties:
        response:
          items:
            $ref: '#/components/schemas/ObjectMetadataResponse'
          type: array
      title: Objects Metadata Response
      type: object
      x-konfig-is-used-in-successful-response: true
    URLSResponse:
      example:
        response:
        - objectKey: objectKey
          url: url
        - objectKey: objectKey
          url: url
      properties:
        response:
          items:
            $ref: '#/components/schemas/URLResponse'
          type: array
      title: URLS Response
      type: object
      x-konfig-is-used-in-successful-response: true
    URLResponse:
      example:
        objectKey: objectKey
        url: url
      properties:
        url:
          type: string
        objectKey:
          type: string
      type: object
    Reference:
      example:
        contentPrefix: contentPrefix
        visibility: not-available
        type: not-available
      properties:
        contentPrefix:
          type: string
        visibility:
          enum:
          - not-available
          type: string
        type:
          enum:
          - not-available
          type: string
      type: object
    ObjectMetadataResponse:
      example:
        metadata:
          key: ""
        objectKey: objectKey
      properties:
        objectKey:
          type: string
        metadata:
          additionalProperties: true
          type: object
      type: object
    MetadataPair:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    Manifest:
      example:
        references:
        - contentPrefix: contentPrefix
          visibility: not-available
          type: not-available
        - contentPrefix: contentPrefix
          visibility: not-available
          type: not-available
        manifest:
        - contentPrefix: contentPrefix
          visibility: not-available
          type: not-available
        - contentPrefix: contentPrefix
          visibility: not-available
          type: not-available
        created: 0
        checksum: checksum
        id: id
        replacement: true
      properties:
        id:
          type: string
        manifest:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        created:
          type: integer
        replacement:
          type: boolean
        references:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        checksum:
          type: string
      required:
      - created
      title: Manifest
      type: object
      x-konfig-is-used-in-successful-response: true
    PlayerBasicCloudDataRequest:
      example:
        playerId: 0
      properties:
        playerId:
          type: integer
      title: Player Basic Cloud Data Request
      type: object
    UploadRequestsFromPortal:
      example:
        request:
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          sizeInBytes: 0
          objectKey: objectKey
          lastModified: 6
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          sizeInBytes: 0
          objectKey: objectKey
          lastModified: 6
        playerId: 1
      properties:
        request:
          items:
            $ref: '#/components/schemas/UploadRequestFromPortal'
          type: array
        playerId:
          type: integer
      title: Upload Requests From Portal
      type: object
    UploadRequests:
      example:
        request:
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          sizeInBytes: 6
          objectKey: objectKey
          checksum: checksum
          lastModified: 0
        - metadata:
          - value: value
            key: key
          - value: value
            key: key
          sizeInBytes: 6
          objectKey: objectKey
          checksum: checksum
          lastModified: 0
        playerId: 1
      properties:
        request:
          items:
            $ref: '#/components/schemas/UploadRequest'
          type: array
        playerId:
          type: integer
      title: Upload Requests
      type: object
    ReplaceObjectsRequest:
      example:
        targetPlayerId: 6
        sourcePlayerId: 0
      properties:
        sourcePlayerId:
          type: integer
        targetPlayerId:
          type: integer
      required:
      - sourcePlayerId
      - targetPlayerId
      title: Replace Objects Request
      type: object
    UploadRequest:
      example:
        metadata:
        - value: value
          key: key
        - value: value
          key: key
        sizeInBytes: 6
        objectKey: objectKey
        checksum: checksum
        lastModified: 0
      properties:
        objectKey:
          type: string
        lastModified:
          type: integer
        checksum:
          type: string
        sizeInBytes:
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/MetadataPair'
          type: array
      required:
      - sizeInBytes
      type: object
    UploadRequestFromPortal:
      example:
        metadata:
        - value: value
          key: key
        - value: value
          key: key
        sizeInBytes: 0
        objectKey: objectKey
        lastModified: 6
      properties:
        objectKey:
          type: string
        sizeInBytes:
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/MetadataPair'
          type: array
        lastModified:
          type: integer
      required:
      - sizeInBytes
      type: object
    OfferDefinition:
      example:
        obtainCurrency:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
        obtain:
        - obtain
        - obtain
        symbol: symbol
        obtainItems:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        metadata: metadata
        images:
        - images
        - images
        lootRoll:
          externalTables:
          - externalTables
          - externalTables
          preroll: true
        titles:
        - titles
        - titles
        descriptions:
        - descriptions
        - descriptions
      properties:
        titles:
          items:
            type: string
          type: array
        symbol:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        lootRoll:
          $ref: '#/components/schemas/CommerceLootRoll'
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        metadata:
          type: string
        images:
          items:
            type: string
          type: array
        descriptions:
          items:
            type: string
          type: array
        obtain:
          items:
            type: string
          type: array
      type: object
    EntitlementRequirement:
      example:
        symbol: symbol
        specialization: specialization
        constraint: constraint
        state: state
      properties:
        symbol:
          type: string
        constraint:
          type: string
        state:
          type: string
        specialization:
          type: string
      type: object
    GetSkusReq:
      properties:
        version:
          type: integer
      title: Get Skus Req
      type: object
    Listing:
      example:
        buttonText:
          key: ""
        symbol: symbol
        activeDurationCoolDownSeconds: 7
        offerRequirements:
        - purchases:
            constraint: constraint
            value: 2
          offerSymbol: offerSymbol
        - purchases:
            constraint: constraint
            value: 2
          offerSymbol: offerSymbol
        activePeriod:
          start: start
          end: end
        activeDurationPurchaseLimit: 3
        activeDurationSeconds: 9
        entitlementRequirements:
        - symbol: symbol
          specialization: specialization
          constraint: constraint
          state: state
        - symbol: symbol
          specialization: specialization
          constraint: constraint
          state: state
        playerStatRequirements:
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
        cohortRequirements:
        - cohort: cohort
          constraint: constraint
          trial: trial
        - cohort: cohort
          constraint: constraint
          trial: trial
        price:
          symbol: symbol
          schedule:
          - 2
          - 2
          amount: 5
          type: type
        offerSymbol: offerSymbol
        clientData:
          key: ""
        purchaseLimit: 5
      properties:
        cohortRequirements:
          items:
            $ref: '#/components/schemas/CohortRequirement'
          type: array
        offerSymbol:
          type: string
        purchaseLimit:
          type: integer
        price:
          $ref: '#/components/schemas/Price'
        playerStatRequirements:
          items:
            $ref: '#/components/schemas/PlayerStatRequirement'
          type: array
        buttonText:
          additionalProperties: true
          type: object
        entitlementRequirements:
          items:
            $ref: '#/components/schemas/EntitlementRequirement'
          type: array
        symbol:
          type: string
        clientData:
          additionalProperties: true
          type: object
        activeDurationCoolDownSeconds:
          type: integer
        activeDurationSeconds:
          type: integer
        activeDurationPurchaseLimit:
          type: integer
        offerRequirements:
          items:
            $ref: '#/components/schemas/OfferRequirement'
          type: array
        activePeriod:
          $ref: '#/components/schemas/Period'
      type: object
    Function1:
      properties: {}
      type: object
    ResultResponse:
      example:
        result: true
      properties:
        result:
          type: boolean
      required:
      - result
      title: Result Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SKU:
      example:
        productIds:
          key: ""
        name: name
        description: description
        realPrice: 5
      properties:
        description:
          type: string
        name:
          type: string
        realPrice:
          type: integer
        productIds:
          additionalProperties: true
          type: object
      required:
      - realPrice
      type: object
    GetCatalogResponse:
      example:
        catalog:
          stores:
          - listings:
            - buttonText:
                key: ""
              symbol: symbol
              activeDurationCoolDownSeconds: 7
              offerRequirements:
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              activePeriod:
                start: start
                end: end
              activeDurationPurchaseLimit: 3
              activeDurationSeconds: 9
              entitlementRequirements:
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              playerStatRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              cohortRequirements:
              - cohort: cohort
                constraint: constraint
                trial: trial
              - cohort: cohort
                constraint: constraint
                trial: trial
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              offerSymbol: offerSymbol
              clientData:
                key: ""
              purchaseLimit: 5
            - buttonText:
                key: ""
              symbol: symbol
              activeDurationCoolDownSeconds: 7
              offerRequirements:
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              activePeriod:
                start: start
                end: end
              activeDurationPurchaseLimit: 3
              activeDurationSeconds: 9
              entitlementRequirements:
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              playerStatRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              cohortRequirements:
              - cohort: cohort
                constraint: constraint
                trial: trial
              - cohort: cohort
                constraint: constraint
                trial: trial
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              offerSymbol: offerSymbol
              clientData:
                key: ""
              purchaseLimit: 5
            showInactiveListings: true
            symbol: symbol
            storeWithAnnotations$default$2:
              dayOfYear: 7
              year: 1
              equalNow: true
              weekyear: 2
              chronology:
                zone:
                  fixed: true
                  id: id
              weekOfWeekyear: 1
              secondOfMinute: 9
              millisOfDay: 3
              monthOfYear: 9
              dayOfWeek: 1
              beforeNow: true
              minuteOfDay: 9
              dayOfMonth: 6
              era: 6
              zone:
                fixed: true
                id: id
              yearOfCentury: 5
              hourOfDay: 1
              centuryOfEra: 8
              secondOfDay: 4
              yearOfEra: 7
              millis: 6
              minuteOfHour: 1
              afterNow: true
              millisOfSecond: 6
            refreshTime: 4
            storeWithAnnotations$default$3: true
            choose: 1
            title: title
            activeListingLimit: 6
          - listings:
            - buttonText:
                key: ""
              symbol: symbol
              activeDurationCoolDownSeconds: 7
              offerRequirements:
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              activePeriod:
                start: start
                end: end
              activeDurationPurchaseLimit: 3
              activeDurationSeconds: 9
              entitlementRequirements:
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              playerStatRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              cohortRequirements:
              - cohort: cohort
                constraint: constraint
                trial: trial
              - cohort: cohort
                constraint: constraint
                trial: trial
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              offerSymbol: offerSymbol
              clientData:
                key: ""
              purchaseLimit: 5
            - buttonText:
                key: ""
              symbol: symbol
              activeDurationCoolDownSeconds: 7
              offerRequirements:
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              - purchases:
                  constraint: constraint
                  value: 2
                offerSymbol: offerSymbol
              activePeriod:
                start: start
                end: end
              activeDurationPurchaseLimit: 3
              activeDurationSeconds: 9
              entitlementRequirements:
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              - symbol: symbol
                specialization: specialization
                constraint: constraint
                state: state
              playerStatRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              cohortRequirements:
              - cohort: cohort
                constraint: constraint
                trial: trial
              - cohort: cohort
                constraint: constraint
                trial: trial
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              offerSymbol: offerSymbol
              clientData:
                key: ""
              purchaseLimit: 5
            showInactiveListings: true
            symbol: symbol
            storeWithAnnotations$default$2:
              dayOfYear: 7
              year: 1
              equalNow: true
              weekyear: 2
              chronology:
                zone:
                  fixed: true
                  id: id
              weekOfWeekyear: 1
              secondOfMinute: 9
              millisOfDay: 3
              monthOfYear: 9
              dayOfWeek: 1
              beforeNow: true
              minuteOfDay: 9
              dayOfMonth: 6
              era: 6
              zone:
                fixed: true
                id: id
              yearOfCentury: 5
              hourOfDay: 1
              centuryOfEra: 8
              secondOfDay: 4
              yearOfEra: 7
              millis: 6
              minuteOfHour: 1
              afterNow: true
              millisOfSecond: 6
            refreshTime: 4
            storeWithAnnotations$default$3: true
            choose: 1
            title: title
            activeListingLimit: 6
          created: 6
          listingInfo$default$2: "{}"
          offerDefinitions:
          - obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            obtain:
            - obtain
            - obtain
            symbol: symbol
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            metadata: metadata
            images:
            - images
            - images
            lootRoll:
              externalTables:
              - externalTables
              - externalTables
              preroll: true
            titles:
            - titles
            - titles
            descriptions:
            - descriptions
            - descriptions
          - obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            obtain:
            - obtain
            - obtain
            symbol: symbol
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            metadata: metadata
            images:
            - images
            - images
            lootRoll:
              externalTables:
              - externalTables
              - externalTables
              preroll: true
            titles:
            - titles
            - titles
            descriptions:
            - descriptions
            - descriptions
          listingInfo$default$3:
            created: 6
            version: 6
            definitions:
            - productIds:
                key: ""
              name: name
              description: description
              realPrice: 5
            - productIds:
                key: ""
              name: name
              description: description
              realPrice: 5
          version: 0
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
      title: Get Catalog Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SKUDefinitions:
      example:
        created: 6
        version: 6
        definitions:
        - productIds:
            key: ""
          name: name
          description: description
          realPrice: 5
        - productIds:
            key: ""
          name: name
          description: description
          realPrice: 5
      properties:
        version:
          type: integer
        created:
          format: utc-millisec
          type: integer
        definitions:
          items:
            $ref: '#/components/schemas/SKU'
          type: array
      required:
      - version
      type: object
    Price:
      example:
        symbol: symbol
        schedule:
        - 2
        - 2
        amount: 5
        type: type
      properties:
        type:
          type: string
        symbol:
          type: string
        amount:
          type: integer
        schedule:
          items:
            type: integer
          type: array
      type: object
    CommerceLootRoll:
      example:
        externalTables:
        - externalTables
        - externalTables
        preroll: true
      properties:
        preroll:
          type: boolean
        externalTables:
          items:
            type: string
          type: array
      required:
      - preroll
      type: object
    DateTime:
      example:
        dayOfYear: 7
        year: 1
        equalNow: true
        weekyear: 2
        chronology:
          zone:
            fixed: true
            id: id
        weekOfWeekyear: 1
        secondOfMinute: 9
        millisOfDay: 3
        monthOfYear: 9
        dayOfWeek: 1
        beforeNow: true
        minuteOfDay: 9
        dayOfMonth: 6
        era: 6
        zone:
          fixed: true
          id: id
        yearOfCentury: 5
        hourOfDay: 1
        centuryOfEra: 8
        secondOfDay: 4
        yearOfEra: 7
        millis: 6
        minuteOfHour: 1
        afterNow: true
        millisOfSecond: 6
      properties:
        dayOfYear:
          type: integer
        minuteOfHour:
          type: integer
        chronology:
          $ref: '#/components/schemas/Chronology'
        dayOfWeek:
          type: integer
        hourOfDay:
          type: integer
        dayOfMonth:
          type: integer
        yearOfEra:
          type: integer
        year:
          type: integer
        secondOfDay:
          type: integer
        yearOfCentury:
          type: integer
        equalNow:
          type: boolean
        afterNow:
          type: boolean
        secondOfMinute:
          type: integer
        monthOfYear:
          type: integer
        millis:
          type: integer
        beforeNow:
          type: boolean
        centuryOfEra:
          type: integer
        minuteOfDay:
          type: integer
        era:
          type: integer
        millisOfDay:
          type: integer
        zone:
          $ref: '#/components/schemas/DateTimeZone'
        millisOfSecond:
          type: integer
        weekOfWeekyear:
          type: integer
        weekyear:
          type: integer
      required:
      - afterNow
      - beforeNow
      - centuryOfEra
      - dayOfMonth
      - dayOfWeek
      - dayOfYear
      - equalNow
      - era
      - hourOfDay
      - millis
      - millisOfDay
      - millisOfSecond
      - minuteOfDay
      - minuteOfHour
      - monthOfYear
      - secondOfDay
      - secondOfMinute
      - weekOfWeekyear
      - weekyear
      - year
      - yearOfCentury
      - yearOfEra
      type: object
    Period:
      example:
        start: start
        end: end
      properties:
        start:
          type: string
        end:
          type: string
      type: object
    DateTimeZone:
      example:
        fixed: true
        id: id
      properties:
        fixed:
          type: boolean
        id:
          type: string
      required:
      - fixed
      type: object
    OfferConstraint:
      example:
        constraint: constraint
        value: 2
      properties:
        constraint:
          type: string
        value:
          type: integer
      required:
      - value
      type: object
    GetSKUsResponse:
      example:
        skus:
          created: 6
          version: 6
          definitions:
          - productIds:
              key: ""
            name: name
            description: description
            realPrice: 5
          - productIds:
              key: ""
            name: name
            description: description
            realPrice: 5
      properties:
        skus:
          $ref: '#/components/schemas/SKUDefinitions'
      title: Get SK Us Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCatalogReq:
      properties:
        version:
          type: integer
      title: Get Catalog Req
      type: object
    Chronology:
      example:
        zone:
          fixed: true
          id: id
      properties:
        zone:
          $ref: '#/components/schemas/DateTimeZone'
      type: object
    SaveSKUsRequest:
      example:
        definitions:
        - productIds:
            key: ""
          name: name
          description: description
          realPrice: 5
        - productIds:
            key: ""
          name: name
          description: description
          realPrice: 5
      properties:
        definitions:
          items:
            $ref: '#/components/schemas/SKU'
          type: array
      title: Save SK Us Request
      type: object
    OfferRequirement:
      example:
        purchases:
          constraint: constraint
          value: 2
        offerSymbol: offerSymbol
      properties:
        offerSymbol:
          type: string
        purchases:
          $ref: '#/components/schemas/OfferConstraint'
      type: object
    CohortRequirement:
      example:
        cohort: cohort
        constraint: constraint
        trial: trial
      properties:
        trial:
          type: string
        cohort:
          type: string
        constraint:
          type: string
      type: object
    Catalog:
      example:
        stores:
        - listings:
          - buttonText:
              key: ""
            symbol: symbol
            activeDurationCoolDownSeconds: 7
            offerRequirements:
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            activePeriod:
              start: start
              end: end
            activeDurationPurchaseLimit: 3
            activeDurationSeconds: 9
            entitlementRequirements:
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            playerStatRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            cohortRequirements:
            - cohort: cohort
              constraint: constraint
              trial: trial
            - cohort: cohort
              constraint: constraint
              trial: trial
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            offerSymbol: offerSymbol
            clientData:
              key: ""
            purchaseLimit: 5
          - buttonText:
              key: ""
            symbol: symbol
            activeDurationCoolDownSeconds: 7
            offerRequirements:
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            activePeriod:
              start: start
              end: end
            activeDurationPurchaseLimit: 3
            activeDurationSeconds: 9
            entitlementRequirements:
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            playerStatRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            cohortRequirements:
            - cohort: cohort
              constraint: constraint
              trial: trial
            - cohort: cohort
              constraint: constraint
              trial: trial
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            offerSymbol: offerSymbol
            clientData:
              key: ""
            purchaseLimit: 5
          showInactiveListings: true
          symbol: symbol
          storeWithAnnotations$default$2:
            dayOfYear: 7
            year: 1
            equalNow: true
            weekyear: 2
            chronology:
              zone:
                fixed: true
                id: id
            weekOfWeekyear: 1
            secondOfMinute: 9
            millisOfDay: 3
            monthOfYear: 9
            dayOfWeek: 1
            beforeNow: true
            minuteOfDay: 9
            dayOfMonth: 6
            era: 6
            zone:
              fixed: true
              id: id
            yearOfCentury: 5
            hourOfDay: 1
            centuryOfEra: 8
            secondOfDay: 4
            yearOfEra: 7
            millis: 6
            minuteOfHour: 1
            afterNow: true
            millisOfSecond: 6
          refreshTime: 4
          storeWithAnnotations$default$3: true
          choose: 1
          title: title
          activeListingLimit: 6
        - listings:
          - buttonText:
              key: ""
            symbol: symbol
            activeDurationCoolDownSeconds: 7
            offerRequirements:
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            activePeriod:
              start: start
              end: end
            activeDurationPurchaseLimit: 3
            activeDurationSeconds: 9
            entitlementRequirements:
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            playerStatRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            cohortRequirements:
            - cohort: cohort
              constraint: constraint
              trial: trial
            - cohort: cohort
              constraint: constraint
              trial: trial
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            offerSymbol: offerSymbol
            clientData:
              key: ""
            purchaseLimit: 5
          - buttonText:
              key: ""
            symbol: symbol
            activeDurationCoolDownSeconds: 7
            offerRequirements:
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            - purchases:
                constraint: constraint
                value: 2
              offerSymbol: offerSymbol
            activePeriod:
              start: start
              end: end
            activeDurationPurchaseLimit: 3
            activeDurationSeconds: 9
            entitlementRequirements:
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            - symbol: symbol
              specialization: specialization
              constraint: constraint
              state: state
            playerStatRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            cohortRequirements:
            - cohort: cohort
              constraint: constraint
              trial: trial
            - cohort: cohort
              constraint: constraint
              trial: trial
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            offerSymbol: offerSymbol
            clientData:
              key: ""
            purchaseLimit: 5
          showInactiveListings: true
          symbol: symbol
          storeWithAnnotations$default$2:
            dayOfYear: 7
            year: 1
            equalNow: true
            weekyear: 2
            chronology:
              zone:
                fixed: true
                id: id
            weekOfWeekyear: 1
            secondOfMinute: 9
            millisOfDay: 3
            monthOfYear: 9
            dayOfWeek: 1
            beforeNow: true
            minuteOfDay: 9
            dayOfMonth: 6
            era: 6
            zone:
              fixed: true
              id: id
            yearOfCentury: 5
            hourOfDay: 1
            centuryOfEra: 8
            secondOfDay: 4
            yearOfEra: 7
            millis: 6
            minuteOfHour: 1
            afterNow: true
            millisOfSecond: 6
          refreshTime: 4
          storeWithAnnotations$default$3: true
          choose: 1
          title: title
          activeListingLimit: 6
        created: 6
        listingInfo$default$2: "{}"
        offerDefinitions:
        - obtainCurrency:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
          obtain:
          - obtain
          - obtain
          symbol: symbol
          obtainItems:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          metadata: metadata
          images:
          - images
          - images
          lootRoll:
            externalTables:
            - externalTables
            - externalTables
            preroll: true
          titles:
          - titles
          - titles
          descriptions:
          - descriptions
          - descriptions
        - obtainCurrency:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
          obtain:
          - obtain
          - obtain
          symbol: symbol
          obtainItems:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          metadata: metadata
          images:
          - images
          - images
          lootRoll:
            externalTables:
            - externalTables
            - externalTables
            preroll: true
          titles:
          - titles
          - titles
          descriptions:
          - descriptions
          - descriptions
        listingInfo$default$3:
          created: 6
          version: 6
          definitions:
          - productIds:
              key: ""
            name: name
            description: description
            realPrice: 5
          - productIds:
              key: ""
            name: name
            description: description
            realPrice: 5
        version: 0
      properties:
        version:
          type: integer
        listingInfo$default$2:
          properties: {}
          type: object
        offerDefinitions:
          items:
            $ref: '#/components/schemas/OfferDefinition'
          type: array
        stores:
          items:
            $ref: '#/components/schemas/Store'
          type: array
        listingInfo$default$3:
          $ref: '#/components/schemas/SKUDefinitions'
        created:
          format: utc-millisec
          type: integer
      required:
      - version
      type: object
    Store:
      example:
        listings:
        - buttonText:
            key: ""
          symbol: symbol
          activeDurationCoolDownSeconds: 7
          offerRequirements:
          - purchases:
              constraint: constraint
              value: 2
            offerSymbol: offerSymbol
          - purchases:
              constraint: constraint
              value: 2
            offerSymbol: offerSymbol
          activePeriod:
            start: start
            end: end
          activeDurationPurchaseLimit: 3
          activeDurationSeconds: 9
          entitlementRequirements:
          - symbol: symbol
            specialization: specialization
            constraint: constraint
            state: state
          - symbol: symbol
            specialization: specialization
            constraint: constraint
            state: state
          playerStatRequirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          cohortRequirements:
          - cohort: cohort
            constraint: constraint
            trial: trial
          - cohort: cohort
            constraint: constraint
            trial: trial
          price:
            symbol: symbol
            schedule:
            - 2
            - 2
            amount: 5
            type: type
          offerSymbol: offerSymbol
          clientData:
            key: ""
          purchaseLimit: 5
        - buttonText:
            key: ""
          symbol: symbol
          activeDurationCoolDownSeconds: 7
          offerRequirements:
          - purchases:
              constraint: constraint
              value: 2
            offerSymbol: offerSymbol
          - purchases:
              constraint: constraint
              value: 2
            offerSymbol: offerSymbol
          activePeriod:
            start: start
            end: end
          activeDurationPurchaseLimit: 3
          activeDurationSeconds: 9
          entitlementRequirements:
          - symbol: symbol
            specialization: specialization
            constraint: constraint
            state: state
          - symbol: symbol
            specialization: specialization
            constraint: constraint
            state: state
          playerStatRequirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          cohortRequirements:
          - cohort: cohort
            constraint: constraint
            trial: trial
          - cohort: cohort
            constraint: constraint
            trial: trial
          price:
            symbol: symbol
            schedule:
            - 2
            - 2
            amount: 5
            type: type
          offerSymbol: offerSymbol
          clientData:
            key: ""
          purchaseLimit: 5
        showInactiveListings: true
        symbol: symbol
        storeWithAnnotations$default$2:
          dayOfYear: 7
          year: 1
          equalNow: true
          weekyear: 2
          chronology:
            zone:
              fixed: true
              id: id
          weekOfWeekyear: 1
          secondOfMinute: 9
          millisOfDay: 3
          monthOfYear: 9
          dayOfWeek: 1
          beforeNow: true
          minuteOfDay: 9
          dayOfMonth: 6
          era: 6
          zone:
            fixed: true
            id: id
          yearOfCentury: 5
          hourOfDay: 1
          centuryOfEra: 8
          secondOfDay: 4
          yearOfEra: 7
          millis: 6
          minuteOfHour: 1
          afterNow: true
          millisOfSecond: 6
        refreshTime: 4
        storeWithAnnotations$default$3: true
        choose: 1
        title: title
        activeListingLimit: 6
      properties:
        title:
          type: string
        activeListingLimit:
          type: integer
        choose:
          type: integer
        listings:
          items:
            $ref: '#/components/schemas/Listing'
          type: array
        showInactiveListings:
          type: boolean
        symbol:
          type: string
        refreshTime:
          type: integer
        storeWithAnnotations$default$3:
          type: boolean
        storeWithAnnotations$default$2:
          $ref: '#/components/schemas/DateTime'
      required:
      - storeWithAnnotations$default$3
      type: object
    ReportPurchaseRequest:
      example:
        listingId: listingId
        free: true
      properties:
        listingId:
          type: string
        free:
          type: boolean
      title: Report Purchase Request
      type: object
    GetActiveListingRequest:
      properties:
        listing:
          type: string
        store:
          type: string
        time:
          type: string
      title: Get Active Listing Request
      type: object
    GetOffersReq:
      properties:
        language:
          type: string
        time:
          type: string
        stores:
          type: string
      title: Get Offers Req
      type: object
    ClearStatusRequest:
      example:
        store: store
      properties:
        store:
          type: string
      title: Clear Status Request
      type: object
    PlayerListingView:
      example:
        offer:
          obtainCurrency:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
          obtain:
          - obtain
          - obtain
          buttonText: buttonText
          symbol: symbol
          obtainItems:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          images:
          - images
          - images
          coupons: 1
          price:
            symbol: symbol
            schedule:
            - 2
            - 2
            amount: 5
            type: type
          titles:
          - titles
          - titles
          descriptions:
          - descriptions
          - descriptions
        symbol: symbol
        queryAfterPurchase: true
        cooldown: 0
        active: true
        purchasesRemain: 5
        clientData:
          key: ""
        secondsActive: 6
        clientDataList:
        - name: name
          value: value
        - name: name
          value: value
        secondsRemain: 5
      properties:
        clientDataList:
          items:
            $ref: '#/components/schemas/ClientDataEntry'
          type: array
        symbol:
          type: string
        clientData:
          additionalProperties: true
          type: object
        cooldown:
          type: integer
        secondsActive:
          type: integer
        offer:
          $ref: '#/components/schemas/PlayerOfferView'
        queryAfterPurchase:
          type: boolean
        purchasesRemain:
          type: integer
        secondsRemain:
          type: integer
        active:
          type: boolean
      required:
      - active
      - queryAfterPurchase
      - secondsActive
      type: object
    StatSubscriptionNotification:
      example:
        statsBefore:
          key: ""
        statsAfter:
          key: ""
      properties:
        statsBefore:
          additionalProperties: true
          type: object
        statsAfter:
          additionalProperties: true
          type: object
      title: Stat Subscription Notification
      type: object
    GetTotalCouponResponse:
      example:
        count: 0
      properties:
        count:
          type: integer
      required:
      - count
      title: Get Total Coupon Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GiveCouponReq:
      example:
        listing: listing
      properties:
        listing:
          type: string
      title: Give Coupon Req
      type: object
    GetStoresReq:
      properties:
        scope:
          type: string
      title: Get Stores Req
      type: object
    PlayerStoreView:
      example:
        listings:
        - offer:
            obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            obtain:
            - obtain
            - obtain
            buttonText: buttonText
            symbol: symbol
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            images:
            - images
            - images
            coupons: 1
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            titles:
            - titles
            - titles
            descriptions:
            - descriptions
            - descriptions
          symbol: symbol
          queryAfterPurchase: true
          cooldown: 0
          active: true
          purchasesRemain: 5
          clientData:
            key: ""
          secondsActive: 6
          clientDataList:
          - name: name
            value: value
          - name: name
            value: value
          secondsRemain: 5
        - offer:
            obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            obtain:
            - obtain
            - obtain
            buttonText: buttonText
            symbol: symbol
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            images:
            - images
            - images
            coupons: 1
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            titles:
            - titles
            - titles
            descriptions:
            - descriptions
            - descriptions
          symbol: symbol
          queryAfterPurchase: true
          cooldown: 0
          active: true
          purchasesRemain: 5
          clientData:
            key: ""
          secondsActive: 6
          clientDataList:
          - name: name
            value: value
          - name: name
            value: value
          secondsRemain: 5
        symbol: symbol
        title: title
        nextDeltaSeconds: 2
        secondsRemain: 7
      properties:
        title:
          type: string
        listings:
          items:
            $ref: '#/components/schemas/PlayerListingView'
          type: array
        symbol:
          type: string
        nextDeltaSeconds:
          type: integer
        secondsRemain:
          type: integer
      type: object
    PurchaseRequest:
      example:
        purchaseId: purchaseId
      properties:
        purchaseId:
          type: string
      title: Purchase Request
      type: object
    PlayerOfferView:
      example:
        obtainCurrency:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
        obtain:
        - obtain
        - obtain
        buttonText: buttonText
        symbol: symbol
        obtainItems:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        images:
        - images
        - images
        coupons: 1
        price:
          symbol: symbol
          schedule:
          - 2
          - 2
          amount: 5
          type: type
        titles:
        - titles
        - titles
        descriptions:
        - descriptions
        - descriptions
      properties:
        coupons:
          type: integer
        price:
          $ref: '#/components/schemas/Price'
        buttonText:
          type: string
        titles:
          items:
            type: string
          type: array
        symbol:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        images:
          items:
            type: string
          type: array
        descriptions:
          items:
            type: string
          type: array
        obtain:
          items:
            type: string
          type: array
      required:
      - coupons
      type: object
    ActiveListingResponse:
      example:
        storeSymbol: storeSymbol
        listing:
          offer:
            obtainCurrency:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
            obtain:
            - obtain
            - obtain
            buttonText: buttonText
            symbol: symbol
            obtainItems:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            images:
            - images
            - images
            coupons: 1
            price:
              symbol: symbol
              schedule:
              - 2
              - 2
              amount: 5
              type: type
            titles:
            - titles
            - titles
            descriptions:
            - descriptions
            - descriptions
          symbol: symbol
          queryAfterPurchase: true
          cooldown: 0
          active: true
          purchasesRemain: 5
          clientData:
            key: ""
          secondsActive: 6
          clientDataList:
          - name: name
            value: value
          - name: name
            value: value
          secondsRemain: 5
      properties:
        storeSymbol:
          type: string
        listing:
          $ref: '#/components/schemas/PlayerListingView'
      title: Active Listing Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetActiveOffersResponse:
      example:
        stores:
        - listings:
          - offer:
              obtainCurrency:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
              obtain:
              - obtain
              - obtain
              buttonText: buttonText
              symbol: symbol
              obtainItems:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              images:
              - images
              - images
              coupons: 1
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              titles:
              - titles
              - titles
              descriptions:
              - descriptions
              - descriptions
            symbol: symbol
            queryAfterPurchase: true
            cooldown: 0
            active: true
            purchasesRemain: 5
            clientData:
              key: ""
            secondsActive: 6
            clientDataList:
            - name: name
              value: value
            - name: name
              value: value
            secondsRemain: 5
          - offer:
              obtainCurrency:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
              obtain:
              - obtain
              - obtain
              buttonText: buttonText
              symbol: symbol
              obtainItems:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              images:
              - images
              - images
              coupons: 1
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              titles:
              - titles
              - titles
              descriptions:
              - descriptions
              - descriptions
            symbol: symbol
            queryAfterPurchase: true
            cooldown: 0
            active: true
            purchasesRemain: 5
            clientData:
              key: ""
            secondsActive: 6
            clientDataList:
            - name: name
              value: value
            - name: name
              value: value
            secondsRemain: 5
          symbol: symbol
          title: title
          nextDeltaSeconds: 2
          secondsRemain: 7
        - listings:
          - offer:
              obtainCurrency:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
              obtain:
              - obtain
              - obtain
              buttonText: buttonText
              symbol: symbol
              obtainItems:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              images:
              - images
              - images
              coupons: 1
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              titles:
              - titles
              - titles
              descriptions:
              - descriptions
              - descriptions
            symbol: symbol
            queryAfterPurchase: true
            cooldown: 0
            active: true
            purchasesRemain: 5
            clientData:
              key: ""
            secondsActive: 6
            clientDataList:
            - name: name
              value: value
            - name: name
              value: value
            secondsRemain: 5
          - offer:
              obtainCurrency:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
              obtain:
              - obtain
              - obtain
              buttonText: buttonText
              symbol: symbol
              obtainItems:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              images:
              - images
              - images
              coupons: 1
              price:
                symbol: symbol
                schedule:
                - 2
                - 2
                amount: 5
                type: type
              titles:
              - titles
              - titles
              descriptions:
              - descriptions
              - descriptions
            symbol: symbol
            queryAfterPurchase: true
            cooldown: 0
            active: true
            purchasesRemain: 5
            clientData:
              key: ""
            secondsActive: 6
            clientDataList:
            - name: name
              value: value
            - name: name
              value: value
            secondsRemain: 5
          symbol: symbol
          title: title
          nextDeltaSeconds: 2
          secondsRemain: 7
      properties:
        stores:
          items:
            $ref: '#/components/schemas/PlayerStoreView'
          type: array
      title: Get Active Offers Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ReferenceSuperset:
      example:
        visibility: visibility
        checksum: checksum
        id: id
        type: type
        version: version
        uri: uri
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        version:
          type: string
        uri:
          type: string
        id:
          type: string
        checksum:
          type: string
        type:
          type: string
        visibility:
          type: string
      type: object
    PullManifestRequest:
      example:
        sourceRealmPid: sourceRealmPid
        id: id
      properties:
        sourceRealmPid:
          type: string
        id:
          type: string
      title: Pull Manifest Request
      type: object
    TextReference:
      example:
        contentPrefix: contentPrefix
        visibility: not-available
        checksum: checksum
        id: id
        type: not-available
        version: version
        uri: uri
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        version:
          type: string
        contentPrefix:
          type: string
        uri:
          type: string
        id:
          type: string
        checksum:
          type: string
        type:
          enum:
          - not-available
          type: string
        visibility:
          enum:
          - not-available
          type: string
      type: object
    SaveTextRequest:
      example:
        text:
        - checksum: checksum
          id: id
          properties:
            key: ""
          tags:
          - tags
          - tags
        - checksum: checksum
          id: id
          properties:
            key: ""
          tags:
          - tags
          - tags
      properties:
        text:
          items:
            $ref: '#/components/schemas/TextDefinition'
          type: array
      title: Save Text Request
      type: object
    TextDefinition:
      example:
        checksum: checksum
        id: id
        properties:
          key: ""
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        id:
          type: string
        checksum:
          type: string
        properties:
          additionalProperties: true
          type: object
      type: object
    ContentOrText:
      example:
        id: id
        version: version
        properties:
          key: ""
      properties:
        version:
          type: string
        id:
          type: string
        properties:
          additionalProperties: true
          type: object
      title: Content Or Text
      type: object
      x-konfig-is-used-in-successful-response: true
    ClientManifest:
      example:
        entries:
        - contentId: contentId
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
        - contentId: contentId
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
        contentType: contentType
      properties:
        entries:
          items:
            $ref: '#/components/schemas/ClientContentInfo'
          type: array
        contentType:
          type: string
      title: Client Manifest
      type: object
      x-konfig-is-used-in-successful-response: true
    GetManifestRequest:
      properties:
        id:
          type: string
      title: Get Manifest Request
      type: object
    ContentDefinition:
      example:
        prefix: prefix
        checksum: checksum
        id: id
        variants:
        - key: ""
        - key: ""
        properties:
          key: ""
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        prefix:
          type: string
        id:
          type: string
        checksum:
          type: string
        properties:
          additionalProperties: true
          type: object
        variants:
          items:
            additionalProperties: true
            type: object
          type: array
      type: object
    ManifestChecksum:
      example:
        createdAt: 0
        checksum: checksum
        id: id
      properties:
        id:
          type: string
        checksum:
          type: string
        createdAt:
          type: integer
      required:
      - createdAt
      title: Manifest Checksum
      type: object
      x-konfig-is-used-in-successful-response: true
    SaveContentRequest:
      example:
        content:
        - prefix: prefix
          checksum: checksum
          id: id
          variants:
          - key: ""
          - key: ""
          properties:
            key: ""
          tags:
          - tags
          - tags
        - prefix: prefix
          checksum: checksum
          id: id
          variants:
          - key: ""
          - key: ""
          properties:
            key: ""
          tags:
          - tags
          - tags
      properties:
        content:
          items:
            $ref: '#/components/schemas/ContentDefinition'
          type: array
      title: Save Content Request
      type: object
    SaveManifestRequest:
      example:
        references:
        - visibility: visibility
          checksum: checksum
          id: id
          type: type
          version: version
          uri: uri
          tags:
          - tags
          - tags
        - visibility: visibility
          checksum: checksum
          id: id
          type: type
          version: version
          uri: uri
          tags:
          - tags
          - tags
        id: id
      properties:
        id:
          type: string
        references:
          items:
            $ref: '#/components/schemas/ReferenceSuperset'
          type: array
      title: Save Manifest Request
      type: object
    GetContentRequest:
      properties:
        version:
          type: string
        contentId:
          type: string
      title: Get Content Request
      type: object
    SaveTextResponse:
      example:
        text:
        - contentPrefix: contentPrefix
          visibility: not-available
          checksum: checksum
          id: id
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
        - contentPrefix: contentPrefix
          visibility: not-available
          checksum: checksum
          id: id
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
      properties:
        text:
          items:
            $ref: '#/components/schemas/TextReference'
          type: array
      title: Save Text Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ClientContentInfo:
      example:
        contentId: contentId
        type: not-available
        version: version
        uri: uri
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        version:
          type: string
        uri:
          type: string
        contentId:
          type: string
        type:
          enum:
          - not-available
          type: string
      type: object
    SaveContentResponse:
      example:
        content:
        - contentPrefix: contentPrefix
          visibility: not-available
          checksum: checksum
          tag: tag
          id: id
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
        - contentPrefix: contentPrefix
          visibility: not-available
          checksum: checksum
          tag: tag
          id: id
          type: not-available
          version: version
          uri: uri
          tags:
          - tags
          - tags
      properties:
        content:
          items:
            $ref: '#/components/schemas/ContentReference'
          type: array
      title: Save Content Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ContentReference:
      example:
        contentPrefix: contentPrefix
        visibility: not-available
        checksum: checksum
        tag: tag
        id: id
        type: not-available
        version: version
        uri: uri
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
        version:
          type: string
        contentPrefix:
          type: string
        tag:
          type: string
        uri:
          type: string
        id:
          type: string
        checksum:
          type: string
        type:
          enum:
          - not-available
          type: string
        visibility:
          enum:
          - not-available
          type: string
      type: object
    EventInventoryRewardItem:
      example:
        id: id
        properties:
          key: ""
      properties:
        id:
          type: string
        properties:
          additionalProperties: true
          type: object
      type: object
    LeaderboardCohort:
      example:
        description: description
        id: id
        statRequirements:
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
        - stat: stat
          access: access
          domain: domain
          constraint: constraint
          value: value
      properties:
        description:
          type: string
        id:
          type: string
        statRequirements:
          items:
            $ref: '#/components/schemas/PlayerStatRequirement'
          type: array
      type: object
    LeaderboardCohortSettings:
      example:
        cohorts:
        - description: description
          id: id
          statRequirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
        - description: description
          id: id
          statRequirements:
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
          - stat: stat
            access: access
            domain: domain
            constraint: constraint
            value: value
      properties:
        cohorts:
          items:
            $ref: '#/components/schemas/LeaderboardCohort'
          type: array
      type: object
    Event:
      example:
        symbol: symbol
        score_rewards:
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 3.616076749251911
          max: 2.027123023002322
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 3.616076749251911
          max: 2.027123023002322
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        schedule:
          description: description
          activeTo: activeTo
          crons:
          - crons
          - crons
          definitions:
          - dayOfWeek:
            - dayOfWeek
            - dayOfWeek
            hour:
            - hour
            - hour
            month:
            - month
            - month
            dayOfMonth:
            - dayOfMonth
            - dayOfMonth
            year:
            - year
            - year
            minute:
            - minute
            - minute
            second:
            - second
            - second
          - dayOfWeek:
            - dayOfWeek
            - dayOfWeek
            hour:
            - hour
            - hour
            month:
            - month
            - month
            dayOfMonth:
            - dayOfMonth
            - dayOfMonth
            year:
            - year
            - year
            minute:
            - minute
            - minute
            second:
            - second
            - second
          activeFrom: activeFrom
        cohortSettings:
          cohorts:
          - description: description
            id: id
            statRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
          - description: description
            id: id
            statRequirements:
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
            - stat: stat
              access: access
              domain: domain
              constraint: constraint
              value: value
        partition_size: 5
        permissions:
          write_self: true
        stores:
        - stores
        - stores
        rank_rewards:
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 3.616076749251911
          max: 2.027123023002322
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 3.616076749251911
          max: 2.027123023002322
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        name: name
        group_rewards:
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 2.3021358869347655
            max: 7.061401241503109
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 2.3021358869347655
            max: 7.061401241503109
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
        phases:
        - duration_minutes: 0
          durationSeconds: 1
          name: name
          durationMillis: 6
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
        - duration_minutes: 0
          durationSeconds: 1
          name: name
          durationMillis: 6
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
        start_date: start_date
      properties:
        name:
          type: string
        start_date:
          type: string
        phases:
          items:
            $ref: '#/components/schemas/EventPhase'
          type: array
        partition_size:
          type: integer
        group_rewards:
          $ref: '#/components/schemas/EventGroupRewards'
        cohortSettings:
          $ref: '#/components/schemas/LeaderboardCohortSettings'
        permissions:
          $ref: '#/components/schemas/ClientPermission'
        stores:
          items:
            type: string
          type: array
        symbol:
          type: string
        score_rewards:
          items:
            $ref: '#/components/schemas/EventRewardItem'
          type: array
        schedule:
          $ref: '#/components/schemas/Schedule'
        rank_rewards:
          items:
            $ref: '#/components/schemas/EventRewardItem'
          type: array
      type: object
    EventQueryResponse:
      example:
        events:
        - phase:
            name: name
            startTime: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
            endTime: 1
          rootEventId: rootEventId
          origin: origin
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          leaderboardId: leaderboardId
          done: true
          content:
            symbol: symbol
            score_rewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            schedule:
              description: description
              activeTo: activeTo
              crons:
              - crons
              - crons
              definitions:
              - dayOfWeek:
                - dayOfWeek
                - dayOfWeek
                hour:
                - hour
                - hour
                month:
                - month
                - month
                dayOfMonth:
                - dayOfMonth
                - dayOfMonth
                year:
                - year
                - year
                minute:
                - minute
                - minute
                second:
                - second
                - second
              - dayOfWeek:
                - dayOfWeek
                - dayOfWeek
                hour:
                - hour
                - hour
                month:
                - month
                - month
                dayOfMonth:
                - dayOfMonth
                - dayOfMonth
                year:
                - year
                - year
                minute:
                - minute
                - minute
                second:
                - second
                - second
              activeFrom: activeFrom
            cohortSettings:
              cohorts:
              - description: description
                id: id
                statRequirements:
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
              - description: description
                id: id
                statRequirements:
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
            partition_size: 5
            permissions:
              write_self: true
            stores:
            - stores
            - stores
            rank_rewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            name: name
            group_rewards:
              scoreRewards:
              - obtain:
                - symbol: symbol
                  count: 9
                - symbol: symbol
                  count: 9
                min: 2.3021358869347655
                max: 7.061401241503109
                items:
                - id: id
                  properties:
                    key: ""
                - id: id
                  properties:
                    key: ""
                currencies:
                - amount: 5
                  id: id
                - amount: 5
                  id: id
              - obtain:
                - symbol: symbol
                  count: 9
                - symbol: symbol
                  count: 9
                min: 2.3021358869347655
                max: 7.061401241503109
                items:
                - id: id
                  properties:
                    key: ""
                - id: id
                  properties:
                    key: ""
                currencies:
                - amount: 5
                  id: id
                - amount: 5
                  id: id
            phases:
            - duration_minutes: 0
              durationSeconds: 1
              name: name
              durationMillis: 6
              rules:
              - rule: rule
                value: value
              - rule: rule
                value: value
            - duration_minutes: 0
              durationSeconds: 1
              name: name
              durationMillis: 6
              rules:
              - rule: rule
                value: value
              - rule: rule
                value: value
            start_date: start_date
          running: true
          permissions:
            write_self: true
          startTime: 0
          state: not-available
          lastChildEventId: lastChildEventId
          id: id
        - phase:
            name: name
            startTime: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
            endTime: 1
          rootEventId: rootEventId
          origin: origin
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          leaderboardId: leaderboardId
          done: true
          content:
            symbol: symbol
            score_rewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            schedule:
              description: description
              activeTo: activeTo
              crons:
              - crons
              - crons
              definitions:
              - dayOfWeek:
                - dayOfWeek
                - dayOfWeek
                hour:
                - hour
                - hour
                month:
                - month
                - month
                dayOfMonth:
                - dayOfMonth
                - dayOfMonth
                year:
                - year
                - year
                minute:
                - minute
                - minute
                second:
                - second
                - second
              - dayOfWeek:
                - dayOfWeek
                - dayOfWeek
                hour:
                - hour
                - hour
                month:
                - month
                - month
                dayOfMonth:
                - dayOfMonth
                - dayOfMonth
                year:
                - year
                - year
                minute:
                - minute
                - minute
                second:
                - second
                - second
              activeFrom: activeFrom
            cohortSettings:
              cohorts:
              - description: description
                id: id
                statRequirements:
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
              - description: description
                id: id
                statRequirements:
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
                - stat: stat
                  access: access
                  domain: domain
                  constraint: constraint
                  value: value
            partition_size: 5
            permissions:
              write_self: true
            stores:
            - stores
            - stores
            rank_rewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 3.616076749251911
              max: 2.027123023002322
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            name: name
            group_rewards:
              scoreRewards:
              - obtain:
                - symbol: symbol
                  count: 9
                - symbol: symbol
                  count: 9
                min: 2.3021358869347655
                max: 7.061401241503109
                items:
                - id: id
                  properties:
                    key: ""
                - id: id
                  properties:
                    key: ""
                currencies:
                - amount: 5
                  id: id
                - amount: 5
                  id: id
              - obtain:
                - symbol: symbol
                  count: 9
                - symbol: symbol
                  count: 9
                min: 2.3021358869347655
                max: 7.061401241503109
                items:
                - id: id
                  properties:
                    key: ""
                - id: id
                  properties:
                    key: ""
                currencies:
                - amount: 5
                  id: id
                - amount: 5
                  id: id
            phases:
            - duration_minutes: 0
              durationSeconds: 1
              name: name
              durationMillis: 6
              rules:
              - rule: rule
                value: value
              - rule: rule
                value: value
            - duration_minutes: 0
              durationSeconds: 1
              name: name
              durationMillis: 6
              rules:
              - rule: rule
                value: value
              - rule: rule
                value: value
            start_date: start_date
          running: true
          permissions:
            write_self: true
          startTime: 0
          state: not-available
          lastChildEventId: lastChildEventId
          id: id
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventObjectData'
          type: array
      title: Event Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EventRewardObtain:
      example:
        symbol: symbol
        count: 9
      properties:
        symbol:
          type: string
        count:
          type: integer
      required:
      - count
      type: object
    EventGroupRewards:
      example:
        scoreRewards:
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 2.3021358869347655
          max: 7.061401241503109
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          min: 2.3021358869347655
          max: 7.061401241503109
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
      properties:
        scoreRewards:
          items:
            $ref: '#/components/schemas/EventRewardContent'
          type: array
      type: object
    EventsWithinDateRangeRequest:
      properties:
        from:
          type: string
        to:
          type: string
        query:
          type: string
        limit:
          type: integer
      title: Events Within Date Range Request
      type: object
    ClientPermission:
      example:
        write_self: true
      properties:
        write_self:
          type: boolean
      required:
      - write_self
      type: object
    EventRewardContent:
      example:
        obtain:
        - symbol: symbol
          count: 9
        - symbol: symbol
          count: 9
        min: 2.3021358869347655
        max: 7.061401241503109
        items:
        - id: id
          properties:
            key: ""
        - id: id
          properties:
            key: ""
        currencies:
        - amount: 5
          id: id
        - amount: 5
          id: id
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/EventInventoryRewardCurrency'
          type: array
        items:
          items:
            $ref: '#/components/schemas/EventInventoryRewardItem'
          type: array
        min:
          type: number
        max:
          type: number
        obtain:
          items:
            $ref: '#/components/schemas/EventRewardObtain'
          type: array
      required:
      - min
      type: object
    EventPhaseRuntime:
      example:
        name: name
        startTime: 6
        rules:
        - rule: rule
          value: value
        - rule: rule
          value: value
        endTime: 1
      properties:
        name:
          type: string
        startTime:
          type: integer
        endTime:
          type: integer
        rules:
          items:
            $ref: '#/components/schemas/EventRule'
          type: array
      required:
      - endTime
      - startTime
      type: object
    EventDateRanges:
      example:
        name: name
        dates:
        - from: from
          to: to
        - from: from
          to: to
        id: id
        state: state
      properties:
        id:
          type: string
        name:
          type: string
        state:
          type: string
        dates:
          items:
            $ref: '#/components/schemas/DateRange'
          type: array
      type: object
    EventObjectData:
      example:
        phase:
          name: name
          startTime: 6
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
          endTime: 1
        rootEventId: rootEventId
        origin: origin
        inFlight:
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        leaderboardId: leaderboardId
        done: true
        content:
          symbol: symbol
          score_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          schedule:
            description: description
            activeTo: activeTo
            crons:
            - crons
            - crons
            definitions:
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            activeFrom: activeFrom
          cohortSettings:
            cohorts:
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
          partition_size: 5
          permissions:
            write_self: true
          stores:
          - stores
          - stores
          rank_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          name: name
          group_rewards:
            scoreRewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
          phases:
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          start_date: start_date
        running: true
        permissions:
          write_self: true
        startTime: 0
        state: not-available
        lastChildEventId: lastChildEventId
        id: id
      properties:
        inFlight:
          items:
            $ref: '#/components/schemas/InFlightMessage'
          type: array
        startTime:
          type: integer
        rootEventId:
          type: string
        state:
          enum:
          - not-available
          type: string
        running:
          type: boolean
        phase:
          $ref: '#/components/schemas/EventPhaseRuntime'
        permissions:
          $ref: '#/components/schemas/ClientPermission'
        lastChildEventId:
          type: string
        id:
          type: string
        origin:
          type: string
        content:
          $ref: '#/components/schemas/Event'
        done:
          type: boolean
        leaderboardId:
          type: string
      required:
      - done
      - running
      title: Event Object Data
      type: object
      x-konfig-is-used-in-successful-response: true
    EventInventoryRewardCurrency:
      example:
        amount: 5
        id: id
      properties:
        id:
          type: string
        amount:
          type: integer
      required:
      - amount
      type: object
    DateRange:
      example:
        from: from
        to: to
      properties:
        from:
          type: string
        to:
          type: string
      type: object
    EventsInDateRangeResponse:
      example:
        eventInDateRange:
        - name: name
          dates:
          - from: from
            to: to
          - from: from
            to: to
          id: id
          state: state
        - name: name
          dates:
          - from: from
            to: to
          - from: from
            to: to
          id: id
          state: state
      properties:
        eventInDateRange:
          items:
            $ref: '#/components/schemas/EventDateRanges'
          type: array
      title: Events In Date Range Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EventApplyRequest:
      example:
        content:
          symbol: symbol
          score_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          schedule:
            description: description
            activeTo: activeTo
            crons:
            - crons
            - crons
            definitions:
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            activeFrom: activeFrom
          cohortSettings:
            cohorts:
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
          partition_size: 5
          permissions:
            write_self: true
          stores:
          - stores
          - stores
          rank_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          name: name
          group_rewards:
            scoreRewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
          phases:
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          start_date: start_date
      properties:
        content:
          $ref: '#/components/schemas/Event'
      title: Event Apply Request
      type: object
    EventRule:
      example:
        rule: rule
        value: value
      properties:
        rule:
          type: string
        value:
          type: string
      type: object
    Schedule:
      example:
        description: description
        activeTo: activeTo
        crons:
        - crons
        - crons
        definitions:
        - dayOfWeek:
          - dayOfWeek
          - dayOfWeek
          hour:
          - hour
          - hour
          month:
          - month
          - month
          dayOfMonth:
          - dayOfMonth
          - dayOfMonth
          year:
          - year
          - year
          minute:
          - minute
          - minute
          second:
          - second
          - second
        - dayOfWeek:
          - dayOfWeek
          - dayOfWeek
          hour:
          - hour
          - hour
          month:
          - month
          - month
          dayOfMonth:
          - dayOfMonth
          - dayOfMonth
          year:
          - year
          - year
          minute:
          - minute
          - minute
          second:
          - second
          - second
        activeFrom: activeFrom
      properties:
        description:
          type: string
        crons:
          items:
            type: string
          type: array
        activeTo:
          type: string
        activeFrom:
          type: string
        definitions:
          items:
            $ref: '#/components/schemas/ScheduleDefinition'
          type: array
      type: object
    ScheduleDefinition:
      example:
        dayOfWeek:
        - dayOfWeek
        - dayOfWeek
        hour:
        - hour
        - hour
        month:
        - month
        - month
        dayOfMonth:
        - dayOfMonth
        - dayOfMonth
        year:
        - year
        - year
        minute:
        - minute
        - minute
        second:
        - second
        - second
      properties:
        dayOfWeek:
          items:
            type: string
          type: array
        minute:
          items:
            type: string
          type: array
        dayOfMonth:
          items:
            type: string
          type: array
        year:
          items:
            type: string
          type: array
        hour:
          items:
            type: string
          type: array
        second:
          items:
            type: string
          type: array
        month:
          items:
            type: string
          type: array
      type: object
    EventPhase:
      example:
        duration_minutes: 0
        durationSeconds: 1
        name: name
        durationMillis: 6
        rules:
        - rule: rule
          value: value
        - rule: rule
          value: value
      properties:
        name:
          type: string
        duration_minutes:
          type: integer
        durationMillis:
          type: integer
        rules:
          items:
            $ref: '#/components/schemas/EventRule'
          type: array
        durationSeconds:
          type: integer
      required:
      - durationMillis
      - durationSeconds
      - duration_minutes
      type: object
    EventContentResponse:
      example:
        content:
        - symbol: symbol
          score_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          schedule:
            description: description
            activeTo: activeTo
            crons:
            - crons
            - crons
            definitions:
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            activeFrom: activeFrom
          cohortSettings:
            cohorts:
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
          partition_size: 5
          permissions:
            write_self: true
          stores:
          - stores
          - stores
          rank_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          name: name
          group_rewards:
            scoreRewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
          phases:
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          start_date: start_date
        - symbol: symbol
          score_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          schedule:
            description: description
            activeTo: activeTo
            crons:
            - crons
            - crons
            definitions:
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            activeFrom: activeFrom
          cohortSettings:
            cohorts:
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
          partition_size: 5
          permissions:
            write_self: true
          stores:
          - stores
          - stores
          rank_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          name: name
          group_rewards:
            scoreRewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
          phases:
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          start_date: start_date
      properties:
        content:
          items:
            $ref: '#/components/schemas/Event'
          type: array
      title: Event Content Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EventPhaseEndRequest:
      example:
        time: time
      properties:
        time:
          type: string
      title: Event Phase End Request
      type: object
    PingRsp:
      example:
        keepAlive: true
      properties:
        keepAlive:
          type: boolean
      required:
      - keepAlive
      title: Ping Rsp
      type: object
      x-konfig-is-used-in-successful-response: true
    EventRewardItem:
      example:
        obtain:
        - symbol: symbol
          count: 9
        - symbol: symbol
          count: 9
        min: 3.616076749251911
        max: 2.027123023002322
        items:
        - id: id
          properties:
            key: ""
        - id: id
          properties:
            key: ""
        currencies:
        - amount: 5
          id: id
        - amount: 5
          id: id
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/EventInventoryRewardCurrency'
          type: array
        items:
          items:
            $ref: '#/components/schemas/EventInventoryRewardItem'
          type: array
        min:
          type: number
        max:
          type: number
        obtain:
          items:
            $ref: '#/components/schemas/EventRewardObtain'
          type: array
      required:
      - min
      type: object
    SetContentRequest:
      example:
        origin: origin
        event:
          symbol: symbol
          score_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          schedule:
            description: description
            activeTo: activeTo
            crons:
            - crons
            - crons
            definitions:
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            - dayOfWeek:
              - dayOfWeek
              - dayOfWeek
              hour:
              - hour
              - hour
              month:
              - month
              - month
              dayOfMonth:
              - dayOfMonth
              - dayOfMonth
              year:
              - year
              - year
              minute:
              - minute
              - minute
              second:
              - second
              - second
            activeFrom: activeFrom
          cohortSettings:
            cohorts:
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
            - description: description
              id: id
              statRequirements:
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
              - stat: stat
                access: access
                domain: domain
                constraint: constraint
                value: value
          partition_size: 5
          permissions:
            write_self: true
          stores:
          - stores
          - stores
          rank_rewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            min: 3.616076749251911
            max: 2.027123023002322
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          name: name
          group_rewards:
            scoreRewards:
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
            - obtain:
              - symbol: symbol
                count: 9
              - symbol: symbol
                count: 9
              min: 2.3021358869347655
              max: 7.061401241503109
              items:
              - id: id
                properties:
                  key: ""
              - id: id
                properties:
                  key: ""
              currencies:
              - amount: 5
                id: id
              - amount: 5
                id: id
          phases:
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - duration_minutes: 0
            durationSeconds: 1
            name: name
            durationMillis: 6
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          start_date: start_date
      properties:
        event:
          $ref: '#/components/schemas/Event'
        origin:
          type: string
      title: Set Content Request
      type: object
    EventClaimResponse:
      example:
        view:
          running: true
          allPhases:
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          score: 1.4658129805029452
          currentPhase:
            durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          name: name
          secondsRemaining: 5
          rank: 6
          id: id
          leaderboardId: leaderboardId
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          rankRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
        gameRspJson: gameRspJson
      properties:
        view:
          $ref: '#/components/schemas/EventPlayerStateView'
        gameRspJson:
          type: string
      title: Event Claim Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EventPlayerView:
      example:
        running:
        - running: true
          allPhases:
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          score: 1.4658129805029452
          currentPhase:
            durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          name: name
          secondsRemaining: 5
          rank: 6
          id: id
          leaderboardId: leaderboardId
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          rankRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
        - running: true
          allPhases:
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          score: 1.4658129805029452
          currentPhase:
            durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          name: name
          secondsRemaining: 5
          rank: 6
          id: id
          leaderboardId: leaderboardId
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          rankRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
        done:
        - running: true
          allPhases:
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          score: 1.4658129805029452
          currentPhase:
            durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          name: name
          secondsRemaining: 5
          rank: 6
          id: id
          leaderboardId: leaderboardId
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          rankRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
        - running: true
          allPhases:
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          - durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          score: 1.4658129805029452
          currentPhase:
            durationSeconds: 0
            name: name
            rules:
            - rule: rule
              value: value
            - rule: rule
              value: value
          name: name
          secondsRemaining: 5
          rank: 6
          id: id
          leaderboardId: leaderboardId
          scoreRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          rankRewards:
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
          - obtain:
            - symbol: symbol
              count: 9
            - symbol: symbol
              count: 9
            pendingEntitlementRewards:
              key: ""
            earned: true
            pendingItemRewards:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            min: 5.637376656633329
            max: 2.3021358869347655
            claimed: true
            pendingInventoryRewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
                key: ""
              empty: true
            pendingCurrencyRewards:
              key: ""
            items:
            - id: id
              properties:
                key: ""
            - id: id
              properties:
                key: ""
            currencies:
            - amount: 5
              id: id
            - amount: 5
              id: id
      properties:
        running:
          items:
            $ref: '#/components/schemas/EventPlayerStateView'
          type: array
        done:
          items:
            $ref: '#/components/schemas/EventPlayerStateView'
          type: array
      title: Event Player View
      type: object
      x-konfig-is-used-in-successful-response: true
    EventPlayerReward:
      example:
        obtain:
        - symbol: symbol
          count: 9
        - symbol: symbol
          count: 9
        pendingEntitlementRewards:
          key: ""
        earned: true
        pendingItemRewards:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        min: 5.637376656633329
        max: 2.3021358869347655
        claimed: true
        pendingInventoryRewards:
          items:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          currencies:
            key: ""
          empty: true
        pendingCurrencyRewards:
          key: ""
        items:
        - id: id
          properties:
            key: ""
        - id: id
          properties:
            key: ""
        currencies:
        - amount: 5
          id: id
        - amount: 5
          id: id
      properties:
        pendingInventoryRewards:
          $ref: '#/components/schemas/EventInventoryPendingRewards'
        currencies:
          items:
            $ref: '#/components/schemas/EventInventoryRewardCurrency'
          type: array
        pendingCurrencyRewards:
          additionalProperties: true
          type: object
        pendingItemRewards:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        items:
          items:
            $ref: '#/components/schemas/EventInventoryRewardItem'
          type: array
        min:
          type: number
        max:
          type: number
        earned:
          type: boolean
        claimed:
          type: boolean
        pendingEntitlementRewards:
          additionalProperties: true
          type: object
        obtain:
          items:
            $ref: '#/components/schemas/EventRewardObtain'
          type: array
      required:
      - claimed
      - earned
      - min
      type: object
    EventScoreRequest:
      example:
        eventId: eventId
        score: 0.8008281904610115
        stats:
          key: ""
        increment: true
      properties:
        eventId:
          type: string
        score:
          type: number
        increment:
          type: boolean
        stats:
          additionalProperties: true
          type: object
      required:
      - score
      title: Event Score Request
      type: object
    EventClaimRequest:
      example:
        eventId: eventId
      properties:
        eventId:
          type: string
      title: Event Claim Request
      type: object
    EventInventoryPendingRewards:
      example:
        items:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        currencies:
          key: ""
        empty: true
      properties:
        currencies:
          additionalProperties: true
          type: object
        items:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        empty:
          type: boolean
      required:
      - empty
      type: object
    EventPlayerStateView:
      example:
        running: true
        allPhases:
        - durationSeconds: 0
          name: name
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
        - durationSeconds: 0
          name: name
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
        score: 1.4658129805029452
        currentPhase:
          durationSeconds: 0
          name: name
          rules:
          - rule: rule
            value: value
          - rule: rule
            value: value
        name: name
        secondsRemaining: 5
        rank: 6
        id: id
        leaderboardId: leaderboardId
        scoreRewards:
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          pendingEntitlementRewards:
            key: ""
          earned: true
          pendingItemRewards:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          min: 5.637376656633329
          max: 2.3021358869347655
          claimed: true
          pendingInventoryRewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
              key: ""
            empty: true
          pendingCurrencyRewards:
            key: ""
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          pendingEntitlementRewards:
            key: ""
          earned: true
          pendingItemRewards:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          min: 5.637376656633329
          max: 2.3021358869347655
          claimed: true
          pendingInventoryRewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
              key: ""
            empty: true
          pendingCurrencyRewards:
            key: ""
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        rankRewards:
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          pendingEntitlementRewards:
            key: ""
          earned: true
          pendingItemRewards:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          min: 5.637376656633329
          max: 2.3021358869347655
          claimed: true
          pendingInventoryRewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
              key: ""
            empty: true
          pendingCurrencyRewards:
            key: ""
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
        - obtain:
          - symbol: symbol
            count: 9
          - symbol: symbol
            count: 9
          pendingEntitlementRewards:
            key: ""
          earned: true
          pendingItemRewards:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          min: 5.637376656633329
          max: 2.3021358869347655
          claimed: true
          pendingInventoryRewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
              key: ""
            empty: true
          pendingCurrencyRewards:
            key: ""
          items:
          - id: id
            properties:
              key: ""
          - id: id
            properties:
              key: ""
          currencies:
          - amount: 5
            id: id
          - amount: 5
            id: id
      properties:
        name:
          type: string
        running:
          type: boolean
        allPhases:
          items:
            $ref: '#/components/schemas/EventPlayerPhaseView'
          type: array
        rank:
          type: integer
        score:
          type: number
        currentPhase:
          $ref: '#/components/schemas/EventPlayerPhaseView'
        secondsRemaining:
          type: integer
        id:
          type: string
        leaderboardId:
          type: string
        rankRewards:
          items:
            $ref: '#/components/schemas/EventPlayerReward'
          type: array
        scoreRewards:
          items:
            $ref: '#/components/schemas/EventPlayerReward'
          type: array
      required:
      - rank
      - running
      - score
      - secondsRemaining
      type: object
    EventPlayerPhaseView:
      example:
        durationSeconds: 0
        name: name
        rules:
        - rule: rule
          value: value
        - rule: rule
          value: value
      properties:
        name:
          type: string
        durationSeconds:
          type: integer
        rules:
          items:
            $ref: '#/components/schemas/EventRule'
          type: array
      required:
      - durationSeconds
      type: object
    SyncRsp:
      example:
        t: 0
        events:
        - t: 6
          origin: 1
          type: type
          body: body
        - t: 6
          origin: 1
          type: type
          body: body
      properties:
        t:
          type: integer
        events:
          items:
            $ref: '#/components/schemas/SimEvent'
          type: array
      required:
      - t
      title: Sync Rsp
      type: object
      x-konfig-is-used-in-successful-response: true
    GameResultsMessage:
      example:
        itemsGranted:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        deltaScores:
        - scoreDelta: 0.8008281904610115
          leaderBoardId: leaderBoardId
        - scoreDelta: 0.8008281904610115
          leaderBoardId: leaderBoardId
        cheatingDetected: true
        currenciesGranted:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
      properties:
        cheatingDetected:
          type: boolean
        deltaScores:
          items:
            $ref: '#/components/schemas/DeltaScoreByLeaderBoardId'
          type: array
        currenciesGranted:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        itemsGranted:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
      required:
      - cheatingDetected
      title: Game Results Message
      type: object
      x-konfig-is-used-in-successful-response: true
    DeltaScoreByLeaderBoardId:
      example:
        scoreDelta: 0.8008281904610115
        leaderBoardId: leaderBoardId
      properties:
        leaderBoardId:
          type: string
        scoreDelta:
          type: number
      required:
      - scoreDelta
      type: object
    ResultsRequest:
      example:
        results:
        - score: 1.4658129805029452
          rank: 6
          playerId: 0
        - score: 1.4658129805029452
          rank: 6
          playerId: 0
      properties:
        results:
          items:
            $ref: '#/components/schemas/PlayerResult'
          type: array
      title: Results Request
      type: object
    PlayerResult:
      example:
        score: 1.4658129805029452
        rank: 6
        playerId: 0
      properties:
        playerId:
          type: integer
        rank:
          type: integer
        score:
          type: number
      required:
      - playerId
      - rank
      - score
      type: object
    SyncReq:
      example:
        t: 0
        events:
        - t: 6
          origin: 1
          type: type
          body: body
        - t: 6
          origin: 1
          type: type
          body: body
      properties:
        t:
          type: integer
        events:
          items:
            $ref: '#/components/schemas/SimEvent'
          type: array
      required:
      - t
      title: Sync Req
      type: object
    SimEvent:
      example:
        t: 6
        origin: 1
        type: type
        body: body
      properties:
        t:
          type: integer
        type:
          type: string
        origin:
          type: integer
        body:
          type: string
      required:
      - origin
      - t
      type: object
    ItemGroup:
      example:
        id: id
        items:
        - createdAt: 5
          id: 1
          properties:
          - name: name
            value: value
          - name: name
            value: value
          updatedAt: 6
          proxyId: proxyId
        - createdAt: 5
          id: 1
          properties:
          - name: name
            value: value
          - name: name
            value: value
          updatedAt: 6
          proxyId: proxyId
      properties:
        id:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
      required:
      - id
      - items
      type: object
    ItemUpdateRequest:
      example:
        contentId: contentId
        id: 6
        properties:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        contentId:
          type: string
        id:
          format: int64
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/ItemProperty'
          type: array
      required:
      - contentId
      - id
      - properties
      type: object
    CurrencyPreview:
      example:
        amount: 0
        originalAmount: 6
        id: id
      properties:
        id:
          type: string
        amount:
          format: int64
          type: integer
        originalAmount:
          format: int64
          type: integer
      required:
      - amount
      - id
      - originalAmount
      type: object
    CurrencyView:
      example:
        amount: 0
        id: id
        properties:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        id:
          type: string
        amount:
          format: int64
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/CurrencyProperty'
          type: array
      required:
      - amount
      - id
      - properties
      type: object
    InventoryView:
      example:
        scope: scope
        items:
        - id: id
          items:
          - createdAt: 5
            id: 1
            properties:
            - name: name
              value: value
            - name: name
              value: value
            updatedAt: 6
            proxyId: proxyId
          - createdAt: 5
            id: 1
            properties:
            - name: name
              value: value
            - name: name
              value: value
            updatedAt: 6
            proxyId: proxyId
        - id: id
          items:
          - createdAt: 5
            id: 1
            properties:
            - name: name
              value: value
            - name: name
              value: value
            updatedAt: 6
            proxyId: proxyId
          - createdAt: 5
            id: 1
            properties:
            - name: name
              value: value
            - name: name
              value: value
            updatedAt: 6
            proxyId: proxyId
        currencies:
        - amount: 0
          id: id
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - amount: 0
          id: id
          properties:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/CurrencyView'
          type: array
        items:
          items:
            $ref: '#/components/schemas/ItemGroup'
          type: array
        scope:
          type: string
      required:
      - currencies
      - items
      title: Inventory View
      type: object
      x-konfig-is-used-in-successful-response: true
    InventoryGetRequest:
      properties:
        scope:
          type: string
      title: Inventory Get Request
      type: object
    MultipliersGetResponse:
      example:
        multipliers:
        - multiplier: 0.8008281904610115
          currency: currency
          roundToNearest: 6
        - multiplier: 0.8008281904610115
          currency: currency
          roundToNearest: 6
      properties:
        multipliers:
          items:
            $ref: '#/components/schemas/VipBonus'
          type: array
      required:
      - multipliers
      title: Multipliers Get Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CurrencyProperty:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    EndTransactionRequest:
      example:
        transaction: transaction
      properties:
        transaction:
          type: string
      required:
      - transaction
      title: End Transaction Request
      type: object
    InventoryUpdateRequest:
      example:
        itemContentIds:
        - itemContentIds
        - itemContentIds
        newItems:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        currencyContentIds:
        - currencyContentIds
        - currencyContentIds
        applyVipBonus: true
        deleteItems:
        - contentId: contentId
          id: 1
        - contentId: contentId
          id: 1
        currencyProperties:
          key:
          - name: name
            value: value
          - name: name
            value: value
        updateItems:
        - contentId: contentId
          id: 6
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          id: 6
          properties:
          - name: name
            value: value
          - name: name
            value: value
        transaction: transaction
        currencies:
          key: 0
        empty: true
      properties:
        currencies:
          additionalProperties:
            format: int64
            type: integer
          type: object
        empty:
          type: boolean
        currencyProperties:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CurrencyProperty'
            type: array
          type: object
        currencyContentIds:
          items:
            type: string
          type: array
        applyVipBonus:
          type: boolean
        itemContentIds:
          items:
            type: string
          type: array
        updateItems:
          items:
            $ref: '#/components/schemas/ItemUpdateRequest'
          type: array
        newItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        transaction:
          type: string
        deleteItems:
          items:
            $ref: '#/components/schemas/ItemDeleteRequest'
          type: array
      required:
      - currencyContentIds
      - empty
      - itemContentIds
      title: Inventory Update Request
      type: object
    Item:
      example:
        createdAt: 5
        id: 1
        properties:
        - name: name
          value: value
        - name: name
          value: value
        updatedAt: 6
        proxyId: proxyId
      properties:
        updatedAt:
          format: int64
          type: integer
        proxyId:
          type: string
        id:
          format: int64
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/ItemProperty'
          type: array
        createdAt:
          format: int64
          type: integer
      required:
      - id
      - properties
      type: object
    InventoryQueryRequest:
      example:
        scopes:
        - scopes
        - scopes
      properties:
        scopes:
          items:
            type: string
          type: array
      title: Inventory Query Request
      type: object
    ItemDeleteRequest:
      example:
        contentId: contentId
        id: 1
      properties:
        contentId:
          type: string
        id:
          format: int64
          type: integer
      required:
      - contentId
      - id
      type: object
    VipBonus:
      example:
        multiplier: 0.8008281904610115
        currency: currency
        roundToNearest: 6
      properties:
        currency:
          type: string
        multiplier:
          format: double
          type: number
        roundToNearest:
          format: int32
          type: integer
      required:
      - currency
      - multiplier
      - roundToNearest
      type: object
    PreviewVipBonusResponse:
      example:
        currencies:
        - amount: 0
          originalAmount: 6
          id: id
        - amount: 0
          originalAmount: 6
          id: id
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/CurrencyPreview'
          type: array
      required:
      - currencies
      title: Preview Vip Bonus Response
      type: object
      x-konfig-is-used-in-successful-response: true
    TransferRequest:
      example:
        recipientPlayer: 0
        transaction: transaction
        currencies:
          key: 6
      properties:
        transaction:
          type: string
        recipientPlayer:
          format: int64
          type: integer
        currencies:
          additionalProperties:
            format: int64
            type: integer
          type: object
      required:
      - recipientPlayer
      title: Transfer Request
      type: object
    CurrencyContentResponse:
      example:
        content:
        - symbol: symbol
          proxy:
            service: service
          clientPermission:
            write_self: true
          startingAmount: 0
        - symbol: symbol
          proxy:
            service: service
          clientPermission:
            write_self: true
          startingAmount: 0
      properties:
        content:
          items:
            $ref: '#/components/schemas/CurrencyArchetype'
          type: array
      required:
      - content
      title: Currency Content Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CurrencyArchetype:
      example:
        symbol: symbol
        proxy:
          service: service
        clientPermission:
          write_self: true
        startingAmount: 0
      properties:
        symbol:
          type: string
        proxy:
          $ref: '#/components/schemas/InventoryProxySettings'
        clientPermission:
          $ref: '#/components/schemas/ClientPermission'
        startingAmount:
          format: int64
          type: integer
      required:
      - symbol
      type: object
    InventoryProxySettings:
      example:
        service: service
      properties:
        service:
          type: string
      required:
      - service
      type: object
    ItemArchetype:
      example:
        symbol: symbol
        proxy:
          service: service
        clientPermission:
          write_self: true
      properties:
        symbol:
          type: string
        proxy:
          $ref: '#/components/schemas/InventoryProxySettings'
        clientPermission:
          $ref: '#/components/schemas/ClientPermission'
      required:
      - symbol
      type: object
    ItemContentResponse:
      example:
        content:
        - symbol: symbol
          proxy:
            service: service
          clientPermission:
            write_self: true
        - symbol: symbol
          proxy:
            service: service
          clientPermission:
            write_self: true
      properties:
        content:
          items:
            $ref: '#/components/schemas/ItemArchetype'
          type: array
      required:
      - content
      title: Item Content Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RankEntryStat:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    LeaderboardUidResponse:
      example:
        id: 0
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
      title: Leaderboard Uid Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ListLeaderBoardViewResponse:
      example:
        result: result
        lbs:
        - rankings:
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          lbId: lbId
          boardSize: 0
          rankgt:
            score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
        - rankings:
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          lbId: lbId
          boardSize: 0
          rankgt:
            score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
      properties:
        result:
          type: string
        lbs:
          items:
            $ref: '#/components/schemas/LeaderBoardView'
          type: array
      required:
      - lbs
      - result
      title: List Leader Board View Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RankEntry:
      example:
        score: 1.4658129805029452
        stats:
        - name: name
          value: value
        - name: name
          value: value
        columns:
          key: ""
        rank: 6
        gt: 5
      properties:
        stats:
          items:
            $ref: '#/components/schemas/RankEntryStat'
          type: array
        rank:
          format: int64
          type: integer
        score:
          format: double
          type: number
        columns:
          additionalProperties: true
          type: object
        gt:
          format: int64
          type: integer
      required:
      - gt
      - rank
      type: object
    LeaderboardPlayerAssignmentRequest:
      properties:
        boardId:
          type: string
        joinBoard:
          type: boolean
      required:
      - boardId
      title: Leaderboard Player Assignment Request
      type: object
    LeaderboardPlayerRequest:
      properties:
        dbid:
          format: int64
          type: integer
      required:
      - dbid
      title: Leaderboard Player Request
      type: object
    LeaderboardListRequest:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
      title: Leaderboard List Request
      type: object
    LeaderboardAssignmentInfo:
      example:
        leaderboardId: leaderboardId
        playerId: 0
      properties:
        playerId:
          format: int64
          type: integer
        leaderboardId:
          type: string
      required:
      - leaderboardId
      - playerId
      title: Leaderboard Assignment Info
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaderboardListResponse:
      example:
        total: 0
        offset: 6
        nameList:
        - nameList
        - nameList
      properties:
        total:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        nameList:
          items:
            type: string
          type: array
      required:
      - nameList
      - offset
      - total
      title: Leaderboard List Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaderBoardView:
      example:
        rankings:
        - score: 1.4658129805029452
          stats:
          - name: name
            value: value
          - name: name
            value: value
          columns:
            key: ""
          rank: 6
          gt: 5
        - score: 1.4658129805029452
          stats:
          - name: name
            value: value
          - name: name
            value: value
          columns:
            key: ""
          rank: 6
          gt: 5
        lbId: lbId
        boardSize: 0
        rankgt:
          score: 1.4658129805029452
          stats:
          - name: name
            value: value
          - name: name
            value: value
          columns:
            key: ""
          rank: 6
          gt: 5
      properties:
        lbId:
          type: string
        boardSize:
          format: int64
          type: integer
        rankgt:
          $ref: '#/components/schemas/RankEntry'
        rankings:
          items:
            $ref: '#/components/schemas/RankEntry'
          type: array
      required:
      - boardSize
      type: object
    LeaderboardPartitionInfo:
      example:
        partition: ""
        leaderboardId: leaderboardId
        playerId: 0
      properties:
        playerId:
          type: integer
        leaderboardId:
          type: string
        partition: {}
      required:
      - playerId
      title: Leaderboard Partition Info
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaderboardPartitionRequest:
      properties:
        playerId:
          type: integer
      required:
      - playerId
      title: Leaderboard Partition Request
      type: object
    OrderRule:
      example:
        v: v
        o: 0
      properties:
        v:
          type: string
        o:
          type: integer
      required:
      - o
      type: object
    LeaderboardMembershipRequest:
      properties:
        playerId:
          type: integer
      required:
      - playerId
      title: Leaderboard Membership Request
      type: object
    LeaderboardRemoveCacheEntryRequest:
      example:
        playerId: 0
      properties:
        playerId:
          type: integer
      required:
      - playerId
      title: Leaderboard Remove Cache Entry Request
      type: object
    LeaderboardGetRanksRequest:
      properties:
        ids:
          type: string
      title: Leaderboard Get Ranks Request
      type: object
    LeaderboardApiViewRequest:
      properties:
        max:
          type: integer
        focus:
          type: integer
        friends:
          type: boolean
        from:
          type: integer
        outlier:
          type: integer
        guild:
          type: boolean
      title: Leaderboard Api View Request
      type: object
    MatchMakingRanking:
      example:
        variables:
          key: ""
        rank: 1
        gt: 6
        isUnranked: true
      properties:
        gt:
          type: integer
        rank:
          type: integer
        isUnranked:
          type: boolean
        variables:
          additionalProperties: true
          type: object
      required:
      - gt
      - isUnranked
      - rank
      type: object
    LeaderBoardViewResponse:
      example:
        result: result
        lb:
          rankings:
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          lbId: lbId
          boardSize: 0
          rankgt:
            score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
      properties:
        result:
          type: string
        lb:
          $ref: '#/components/schemas/LeaderBoardView'
      title: Leader Board View Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaderboardDetails:
      example:
        numberOfEntries: 6
        view:
          rankings:
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          - score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
          lbId: lbId
          boardSize: 0
          rankgt:
            score: 1.4658129805029452
            stats:
            - name: name
              value: value
            - name: name
              value: value
            columns:
              key: ""
            rank: 6
            gt: 5
        lbid: lbid
        fullName: fullName
        orules:
          orules:
          - v: v
            o: 0
          - v: v
            o: 0
      properties:
        lbid:
          type: string
        orules:
          $ref: '#/components/schemas/OrderRules'
        numberOfEntries:
          type: integer
        fullName:
          type: string
        view:
          $ref: '#/components/schemas/LeaderBoardView'
      required:
      - numberOfEntries
      title: Leaderboard Details
      type: object
      x-konfig-is-used-in-successful-response: true
    OrderRules:
      example:
        orules:
        - v: v
          o: 0
        - v: v
          o: 0
      properties:
        orules:
          items:
            $ref: '#/components/schemas/OrderRule'
          type: array
      type: object
    LeaderboardRemoveEntryRequest:
      example:
        id: 0
      properties:
        id:
          type: integer
      required:
      - id
      title: Leaderboard Remove Entry Request
      type: object
    MatchMakingMatchesPvpResponse:
      example:
        result: result
        playerRank:
          variables:
            key: ""
          rank: 1
          gt: 6
          isUnranked: true
        totalEntries: 0
        windows:
        - difficulty: 5
          matches:
          - variables:
              key: ""
            rank: 1
            gt: 6
            isUnranked: true
          - variables:
              key: ""
            rank: 1
            gt: 6
            isUnranked: true
        - difficulty: 5
          matches:
          - variables:
              key: ""
            rank: 1
            gt: 6
            isUnranked: true
          - variables:
              key: ""
            rank: 1
            gt: 6
            isUnranked: true
      properties:
        result:
          type: string
        totalEntries:
          type: integer
        playerRank:
          $ref: '#/components/schemas/MatchMakingRanking'
        windows:
          items:
            $ref: '#/components/schemas/MatchMakingWindowResp'
          type: array
      required:
      - totalEntries
      title: Match Making Matches Pvp Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaderboardGetMatchRequest:
      properties:
        poolSize:
          type: integer
        windows:
          type: integer
        windowSize:
          type: integer
      required:
      - poolSize
      - windowSize
      - windows
      title: Leaderboard Get Match Request
      type: object
    LeaderboardCreateRequest:
      example:
        derivatives:
        - derivatives
        - derivatives
        permissions:
          write_self: true
        maxEntries: 6
        partitioned: true
        freezeTime: 0
        sharded: true
        ttl: 1
        scoreName: scoreName
      properties:
        freezeTime:
          type: integer
        derivatives:
          items:
            type: string
          type: array
        scoreName:
          type: string
        permissions:
          $ref: '#/components/schemas/ClientPermission'
        maxEntries:
          type: integer
        partitioned:
          type: boolean
        sharded:
          type: boolean
        ttl:
          type: integer
      required:
      - sharded
      title: Leaderboard Create Request
      type: object
    LeaderboardDetailsRequest:
      properties:
        from:
          type: integer
        max:
          type: integer
      title: Leaderboard Details Request
      type: object
    MatchMakingWindowResp:
      example:
        difficulty: 5
        matches:
        - variables:
            key: ""
          rank: 1
          gt: 6
          isUnranked: true
        - variables:
            key: ""
          rank: 1
          gt: 6
          isUnranked: true
      properties:
        difficulty:
          type: integer
        matches:
          items:
            $ref: '#/components/schemas/MatchMakingRanking'
          type: array
      required:
      - difficulty
      type: object
    LeaderboardSwapRequest:
      example:
        winnerId: 0
        loserId: 6
        swapBase: 1
        delta: 5
      properties:
        winnerId:
          type: integer
        loserId:
          type: integer
        swapBase:
          type: integer
        delta:
          type: integer
      required:
      - delta
      - swapBase
      title: Leaderboard Swap Request
      type: object
    LeaderboardAddRequest:
      example:
        score: 6.027456183070403
        minScore: 1.4658129805029452
        stats:
          key: ""
        increment: true
        id: 5
        maxScore: 0.8008281904610115
      properties:
        maxScore:
          type: number
        stats:
          additionalProperties: true
          type: object
        score:
          type: number
        minScore:
          type: number
        id:
          type: integer
        increment:
          type: boolean
      required:
      - id
      - score
      title: Leaderboard Add Request
      type: object
    LeaderboardMembershipResponse:
      example:
        result: true
      properties:
        result:
          type: boolean
      required:
      - result
      title: Leaderboard Membership Response
      type: object
      x-konfig-is-used-in-successful-response: true
    DonationEntry:
      example:
        amount: 5
        time: 5
        playerId: 1
      properties:
        playerId:
          type: integer
        amount:
          type: integer
        time:
          type: integer
      required:
      - amount
      - playerId
      - time
      type: object
    Member:
      example:
        gamerTag: 7
        canPromote: true
        role: role
        scores:
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        canDemote: true
        canKick: true
      properties:
        canDemote:
          type: boolean
        canKick:
          type: boolean
        role:
          type: string
        gamerTag:
          type: integer
        canPromote:
          type: boolean
        scores:
          items:
            $ref: '#/components/schemas/GroupScoreBinding'
          type: array
      required:
      - gamerTag
      type: object
    GroupRole:
      example:
        permissions:
        - permissions
        - permissions
        name: name
      properties:
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
      type: object
    DonationRequest:
      example:
        timeRequested: 6
        satisfied: true
        progress:
        - amount: 5
          time: 5
          playerId: 1
        - amount: 5
          time: 5
          playerId: 1
        currency:
          amount: 7
          id: id
        playerId: 2
      properties:
        timeRequested:
          type: integer
        progress:
          items:
            $ref: '#/components/schemas/DonationEntry'
          type: array
        satisfied:
          type: boolean
        playerId:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
      required:
      - playerId
      - satisfied
      - timeRequested
      type: object
    GroupSearchResponse:
      example:
        groups:
        - leader: 3
          donations:
          - timeRequested: 6
            satisfied: true
            progress:
            - amount: 5
              time: 5
              playerId: 1
            - amount: 5
              time: 5
              playerId: 1
            currency:
              amount: 7
              id: id
            playerId: 2
          - timeRequested: 6
            satisfied: true
            progress:
            - amount: 5
              time: 5
              playerId: 1
            - amount: 5
              time: 5
              playerId: 1
            currency:
              amount: 7
              id: id
            playerId: 2
          scores:
            key: ""
          roles:
          - permissions:
            - permissions
            - permissions
            name: name
          - permissions:
            - permissions
            - permissions
            name: name
          canUpdateSlogan: true
          maxSize: 1
          type: not-available
          canUpdateEnrollment: true
          freeSlots: 9
          members:
          - gamerTag: 7
            canPromote: true
            role: role
            scores:
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            canDemote: true
            canKick: true
          - gamerTag: 7
            canPromote: true
            role: role
            scores:
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            canDemote: true
            canKick: true
          subGroups:
          - null
          - null
          tag: tag
          shard: shard
          id: 4
          canUpdateMOTD: true
          motd: motd
          created: 1
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          requirement: 2
          version: 0
          maybeDonations:
            key: ""
          name: name
          clientData: clientData
          enrollmentType: enrollmentType
          slogan: slogan
          canDisband: true
        - leader: 3
          donations:
          - timeRequested: 6
            satisfied: true
            progress:
            - amount: 5
              time: 5
              playerId: 1
            - amount: 5
              time: 5
              playerId: 1
            currency:
              amount: 7
              id: id
            playerId: 2
          - timeRequested: 6
            satisfied: true
            progress:
            - amount: 5
              time: 5
              playerId: 1
            - amount: 5
              time: 5
              playerId: 1
            currency:
              amount: 7
              id: id
            playerId: 2
          scores:
            key: ""
          roles:
          - permissions:
            - permissions
            - permissions
            name: name
          - permissions:
            - permissions
            - permissions
            name: name
          canUpdateSlogan: true
          maxSize: 1
          type: not-available
          canUpdateEnrollment: true
          freeSlots: 9
          members:
          - gamerTag: 7
            canPromote: true
            role: role
            scores:
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            canDemote: true
            canKick: true
          - gamerTag: 7
            canPromote: true
            role: role
            scores:
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            - derivatives:
              - derivatives
              - derivatives
              score: 1
              board: board
            canDemote: true
            canKick: true
          subGroups:
          - null
          - null
          tag: tag
          shard: shard
          id: 4
          canUpdateMOTD: true
          motd: motd
          created: 1
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          requirement: 2
          version: 0
          maybeDonations:
            key: ""
          name: name
          clientData: clientData
          enrollmentType: enrollmentType
          slogan: slogan
          canDisband: true
      properties:
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
      title: Group Search Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Group:
      example:
        leader: 3
        donations:
        - timeRequested: 6
          satisfied: true
          progress:
          - amount: 5
            time: 5
            playerId: 1
          - amount: 5
            time: 5
            playerId: 1
          currency:
            amount: 7
            id: id
          playerId: 2
        - timeRequested: 6
          satisfied: true
          progress:
          - amount: 5
            time: 5
            playerId: 1
          - amount: 5
            time: 5
            playerId: 1
          currency:
            amount: 7
            id: id
          playerId: 2
        scores:
          key: ""
        roles:
        - permissions:
          - permissions
          - permissions
          name: name
        - permissions:
          - permissions
          - permissions
          name: name
        canUpdateSlogan: true
        maxSize: 1
        type: not-available
        canUpdateEnrollment: true
        freeSlots: 9
        members:
        - gamerTag: 7
          canPromote: true
          role: role
          scores:
          - derivatives:
            - derivatives
            - derivatives
            score: 1
            board: board
          - derivatives:
            - derivatives
            - derivatives
            score: 1
            board: board
          canDemote: true
          canKick: true
        - gamerTag: 7
          canPromote: true
          role: role
          scores:
          - derivatives:
            - derivatives
            - derivatives
            score: 1
            board: board
          - derivatives:
            - derivatives
            - derivatives
            score: 1
            board: board
          canDemote: true
          canKick: true
        subGroups:
        - null
        - null
        tag: tag
        shard: shard
        id: 4
        canUpdateMOTD: true
        motd: motd
        created: 1
        inFlight:
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        requirement: 2
        version: 0
        maybeDonations:
          key: ""
        name: name
        clientData: clientData
        enrollmentType: enrollmentType
        slogan: slogan
        canDisband: true
      properties:
        version:
          type: integer
        inFlight:
          items:
            $ref: '#/components/schemas/InFlightMessage'
          type: array
        name:
          type: string
        enrollmentType:
          type: string
        donations:
          items:
            $ref: '#/components/schemas/DonationRequest'
          type: array
        freeSlots:
          type: integer
        maybeDonations:
          additionalProperties: true
          type: object
        tag:
          type: string
        canUpdateMOTD:
          type: boolean
        shard:
          type: string
        canUpdateSlogan:
          type: boolean
        leader:
          type: integer
        slogan:
          type: string
        requirement:
          type: integer
        motd:
          type: string
        id:
          type: integer
        clientData:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/GroupRole'
          type: array
        scores:
          additionalProperties: true
          type: object
        canUpdateEnrollment:
          type: boolean
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        canDisband:
          type: boolean
        type:
          enum:
          - not-available
          type: string
        maxSize:
          type: integer
        subGroups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        created:
          format: utc-millisec
          type: integer
      required:
      - freeSlots
      - id
      - leader
      - maxSize
      - requirement
      type: object
      x-konfig-is-used-in-successful-response: true
    Currency:
      example:
        amount: 7
        id: id
      properties:
        id:
          type: string
        amount:
          type: integer
      required:
      - amount
      type: object
    GroupScoreBinding:
      example:
        derivatives:
        - derivatives
        - derivatives
        score: 1
        board: board
      properties:
        board:
          type: string
        derivatives:
          items:
            type: string
          type: array
        score:
          type: integer
      required:
      - score
      type: object
    GroupSearchRequest:
      properties:
        name:
          type: string
        scoreMin:
          type: integer
        sortField:
          type: string
        userScore:
          type: integer
        hasSlots:
          type: boolean
        enrollmentTypes:
          type: string
        offset:
          type: integer
        scoreMax:
          type: integer
        subGroup:
          type: boolean
        sortValue:
          type: integer
        type:
          enum:
          - not-available
          type: string
        limit:
          type: integer
      title: Group Search Request
      type: object
    GroupInvite:
      example:
        gamerTag: 0
        subGroup: 6
      properties:
        gamerTag:
          type: integer
        subGroup:
          type: integer
      required:
      - gamerTag
      title: Group Invite
      type: object
    CreateDonationRequest:
      example:
        amount: 0
        currencyId: currencyId
        config: config
      properties:
        currencyId:
          type: string
        amount:
          type: integer
        config:
          type: string
      required:
      - amount
      title: Create Donation Request
      type: object
    KickRequest:
      example:
        gamerTag: 0
        subGroup: 6
      properties:
        gamerTag:
          type: integer
        subGroup:
          type: integer
      required:
      - gamerTag
      title: Kick Request
      type: object
    GroupMembershipResponse:
      example:
        gamerTag: 0
        member: true
        subGroups:
        - 6
        - 6
        type: not-available
        group:
          name: name
          id: 1
          tag: tag
      properties:
        gamerTag:
          type: integer
        member:
          type: boolean
        type:
          enum:
          - not-available
          type: string
        subGroups:
          items:
            type: integer
          type: array
        group:
          $ref: '#/components/schemas/GroupMetaData'
      required:
      - member
      title: Group Membership Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupUpdate:
      example:
        motd: motd
        subGroup: 6
        name: name
        tag: tag
        requirement: 0
        clientData: clientData
        enrollmentType: enrollmentType
        slogan: slogan
      properties:
        name:
          type: string
        enrollmentType:
          type: string
        tag:
          type: string
        slogan:
          type: string
        requirement:
          type: integer
        motd:
          type: string
        clientData:
          type: string
        subGroup:
          type: integer
      title: Group Update
      type: object
    GroupApplication:
      example:
        subGroup: 0
      properties:
        subGroup:
          type: integer
      title: Group Application
      type: object
    GroupMetaData:
      example:
        name: name
        id: 1
        tag: tag
      properties:
        id:
          type: integer
        name:
          type: string
        tag:
          type: string
      required:
      - id
      type: object
    MakeDonationRequest:
      example:
        amount: 6
        recipientId: 0
      properties:
        recipientId:
          type: integer
        amount:
          type: integer
      required:
      - amount
      - recipientId
      title: Make Donation Request
      type: object
    RoleChangeRequest:
      example:
        gamerTag: 0
        role: role
        subGroup: 6
      properties:
        gamerTag:
          type: integer
        role:
          type: string
        subGroup:
          type: integer
      required:
      - gamerTag
      title: Role Change Request
      type: object
    DisbandRequest:
      example:
        subGroup: 0
      properties:
        subGroup:
          type: integer
      title: Disband Request
      type: object
    GroupCreate:
      example:
        scores:
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        name: name
        maxSize: 1
        tag: tag
        requirement: 0
        clientData: clientData
        time: 6
        enrollmentType: enrollmentType
        type: not-available
        group: 5
      properties:
        name:
          type: string
        enrollmentType:
          type: string
        tag:
          type: string
        requirement:
          type: integer
        clientData:
          type: string
        scores:
          items:
            $ref: '#/components/schemas/GroupScoreBinding'
          type: array
        time:
          format: utc-millisec
          type: integer
        type:
          enum:
          - not-available
          type: string
        maxSize:
          type: integer
        group:
          type: integer
      required:
      - maxSize
      - requirement
      title: Group Create
      type: object
    AvailabilityResponse:
      example:
        name: true
        tag: true
      properties:
        name:
          type: boolean
        tag:
          type: boolean
      required:
      - name
      - tag
      title: Availability Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupCreateResponse:
      example:
        group:
          name: name
          id: 1
          tag: tag
      properties:
        group:
          $ref: '#/components/schemas/GroupMetaData'
      title: Group Create Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupUserMember:
      example:
        joined: 1
        subGroups:
        - null
        - null
        id: 6
      properties:
        id:
          type: integer
        subGroups:
          items:
            $ref: '#/components/schemas/GroupUserMember'
          type: array
        joined:
          type: integer
      required:
      - id
      type: object
    GroupMembershipRequest:
      example:
        score: 6
        successor: 0
        subGroup: 1
        type: not-available
        group: 5
      properties:
        successor:
          type: integer
        score:
          type: integer
        subGroup:
          type: integer
        type:
          enum:
          - not-available
          type: string
        group:
          type: integer
      required:
      - group
      title: Group Membership Request
      type: object
    AvailabilityRequest:
      properties:
        name:
          type: string
        tag:
          type: string
        type:
          enum:
          - not-available
          type: string
        subGroup:
          type: boolean
      title: Availability Request
      type: object
    GroupUser:
      example:
        gamerTag: 0
        allGroups:
        - joined: 1
          subGroups:
          - null
          - null
          id: 6
        - joined: 1
          subGroups:
          - null
          - null
          id: 6
        scores:
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        - derivatives:
          - derivatives
          - derivatives
          score: 1
          board: board
        member:
          key: ""
        inFlight:
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        updated: 5
      properties:
        inFlight:
          items:
            $ref: '#/components/schemas/InFlightMessage'
          type: array
        gamerTag:
          type: integer
        allGroups:
          items:
            $ref: '#/components/schemas/GroupUserMember'
          type: array
        updated:
          format: utc-millisec
          type: integer
        member:
          additionalProperties: true
          type: object
        scores:
          items:
            $ref: '#/components/schemas/GroupScoreBinding'
          type: array
      required:
      - gamerTag
      title: Group User
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateMailRequest:
      example:
        expires: expires
        subject: subject
        acceptAttachments: true
        mailId: 6
        state: state
        body: body
        category: category
      properties:
        body:
          type: string
        expires:
          type: string
        subject:
          type: string
        state:
          type: string
        mailId:
          type: integer
        category:
          type: string
        acceptAttachments:
          type: boolean
      required:
      - mailId
      title: Update Mail Request
      type: object
    GetTemplateRequest:
      properties:
        templateName:
          type: string
        gamerTag:
          type: integer
      required:
      - gamerTag
      title: Get Template Request
      type: object
    AttachmentRequest:
      example:
        symbol: symbol
        quantity: 5
        specialization: specialization
        action: action
        target: 2
      properties:
        quantity:
          type: integer
        symbol:
          type: string
        specialization:
          type: string
        target:
          type: integer
        action:
          type: string
      type: object
    MailResponse:
      example:
        result:
          gamerTag: 0
          expires: 1
          receiverGamerTag: 5
          attachments:
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          subject: subject
          censoredContent: censoredContent
          messageId: messageId
          senderGamerTag: 2
          body: body
          sent: 7
          roomId: roomId
          content: content
          claimedTimeMs: 4
          timestampMillis: 6
          bodyRef: 9
          reactions:
            key: ""
          state: state
          id: 5
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
      properties:
        result:
          $ref: '#/components/schemas/Message'
      title: Mail Response
      type: object
      x-konfig-is-used-in-successful-response: true
    MailTemplate:
      example:
        subject: subject
        body: body
      properties:
        subject:
          type: string
        body:
          type: string
      title: Mail Template
      type: object
      x-konfig-is-used-in-successful-response: true
    SendMailRequest:
      example:
        expires: expires
        receiverGamerTag: 0
        attachments:
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        subject: subject
        bodyRef: 5
        senderGamerTag: 1
        id: 6
        body: body
        category: category
        rewards:
          items:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          currencies:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
      properties:
        body:
          type: string
        expires:
          type: string
        receiverGamerTag:
          type: integer
        subject:
          type: string
        id:
          type: integer
        senderGamerTag:
          type: integer
        category:
          type: string
        bodyRef:
          type: integer
        attachments:
          items:
            $ref: '#/components/schemas/AttachmentRequest'
          type: array
        rewards:
          $ref: '#/components/schemas/MailRewards'
      required:
      - receiverGamerTag
      - senderGamerTag
      type: object
    Attachment:
      example:
        id: 3
        state: state
        wrapped:
          symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        target: 2
      properties:
        id:
          type: integer
        wrapped:
          $ref: '#/components/schemas/EntitlementGenerator'
        state:
          type: string
        target:
          type: integer
      required:
      - id
      type: object
    AcceptMultipleAttachments:
      example:
        mailIds:
        - 0
        - 0
      properties:
        mailIds:
          items:
            type: integer
          type: array
      title: Accept Multiple Attachments
      type: object
    GetMailDetailsRequest:
      properties:
        mid:
          type: integer
      required:
      - mid
      title: Get Mail Details Request
      type: object
    MailSuccessResponse:
      example:
        result: true
      properties:
        result:
          type: boolean
      required:
      - result
      title: Mail Success Response
      type: object
      x-konfig-is-used-in-successful-response: true
    BulkSendMailRequest:
      example:
        sendMailRequests:
        - expires: expires
          receiverGamerTag: 0
          attachments:
          - symbol: symbol
            quantity: 5
            specialization: specialization
            action: action
            target: 2
          - symbol: symbol
            quantity: 5
            specialization: specialization
            action: action
            target: 2
          subject: subject
          bodyRef: 5
          senderGamerTag: 1
          id: 6
          body: body
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
        - expires: expires
          receiverGamerTag: 0
          attachments:
          - symbol: symbol
            quantity: 5
            specialization: specialization
            action: action
            target: 2
          - symbol: symbol
            quantity: 5
            specialization: specialization
            action: action
            target: 2
          subject: subject
          bodyRef: 5
          senderGamerTag: 1
          id: 6
          body: body
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
      properties:
        sendMailRequests:
          items:
            $ref: '#/components/schemas/SendMailRequest'
          type: array
      title: Bulk Send Mail Request
      type: object
    MailSearchClause:
      example:
        name: name
        start: 6
        limit: 1
        categories:
        - categories
        - categories
        forSender: 0
        onlyCount: true
        states:
        - states
        - states
      properties:
        forSender:
          type: integer
        name:
          type: string
        onlyCount:
          type: boolean
        categories:
          items:
            type: string
          type: array
        start:
          type: integer
        limit:
          type: integer
        states:
          items:
            type: string
          type: array
      required:
      - onlyCount
      type: object
    MailSearchRequest:
      example:
        clauses:
        - name: name
          start: 6
          limit: 1
          categories:
          - categories
          - categories
          forSender: 0
          onlyCount: true
          states:
          - states
          - states
        - name: name
          start: 6
          limit: 1
          categories:
          - categories
          - categories
          forSender: 0
          onlyCount: true
          states:
          - states
          - states
      properties:
        clauses:
          items:
            $ref: '#/components/schemas/MailSearchClause'
          type: array
      title: Mail Search Request
      type: object
    MailSearchResponse:
      example:
        results:
        - name: name
          count: 0
          content:
          - gamerTag: 0
            expires: 1
            receiverGamerTag: 5
            attachments:
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            subject: subject
            censoredContent: censoredContent
            messageId: messageId
            senderGamerTag: 2
            body: body
            sent: 7
            roomId: roomId
            content: content
            claimedTimeMs: 4
            timestampMillis: 6
            bodyRef: 9
            reactions:
              key: ""
            state: state
            id: 5
            category: category
            rewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
          - gamerTag: 0
            expires: 1
            receiverGamerTag: 5
            attachments:
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            subject: subject
            censoredContent: censoredContent
            messageId: messageId
            senderGamerTag: 2
            body: body
            sent: 7
            roomId: roomId
            content: content
            claimedTimeMs: 4
            timestampMillis: 6
            bodyRef: 9
            reactions:
              key: ""
            state: state
            id: 5
            category: category
            rewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
        - name: name
          count: 0
          content:
          - gamerTag: 0
            expires: 1
            receiverGamerTag: 5
            attachments:
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            subject: subject
            censoredContent: censoredContent
            messageId: messageId
            senderGamerTag: 2
            body: body
            sent: 7
            roomId: roomId
            content: content
            claimedTimeMs: 4
            timestampMillis: 6
            bodyRef: 9
            reactions:
              key: ""
            state: state
            id: 5
            category: category
            rewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
          - gamerTag: 0
            expires: 1
            receiverGamerTag: 5
            attachments:
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            - id: 3
              state: state
              wrapped:
                symbol: symbol
                claimWindow:
                  close: 1
                  open: 1
                quantity: 1
                specialization: specialization
                action: action
                params:
                  key: ""
              target: 2
            subject: subject
            censoredContent: censoredContent
            messageId: messageId
            senderGamerTag: 2
            body: body
            sent: 7
            roomId: roomId
            content: content
            claimedTimeMs: 4
            timestampMillis: 6
            bodyRef: 9
            reactions:
              key: ""
            state: state
            id: 5
            category: category
            rewards:
              items:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              currencies:
              - symbol: symbol
                amount: 4
                originalAmount: 7
              - symbol: symbol
                amount: 4
                originalAmount: 7
      properties:
        results:
          items:
            $ref: '#/components/schemas/MailSearchResponseClause'
          type: array
      title: Mail Search Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SendMailObjectRequest:
      example:
        expires: expires
        attachments:
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        subject: subject
        bodyRef: 1
        senderGamerTag: 6
        id: 0
        body: body
        category: category
        rewards:
          items:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          currencies:
          - symbol: symbol
            amount: 4
            originalAmount: 7
          - symbol: symbol
            amount: 4
            originalAmount: 7
      properties:
        body:
          type: string
        expires:
          type: string
        subject:
          type: string
        rewards:
          $ref: '#/components/schemas/MailRewards'
        id:
          type: integer
        senderGamerTag:
          type: integer
        category:
          type: string
        bodyRef:
          type: integer
        attachments:
          items:
            $ref: '#/components/schemas/AttachmentRequest'
          type: array
      required:
      - senderGamerTag
      title: Send Mail Object Request
      type: object
    SendMailResponse:
      example:
        mailId: 0
      properties:
        mailId:
          type: integer
      title: Send Mail Response
      type: object
      x-konfig-is-used-in-successful-response: true
    MyMailUpdate:
      example:
        update:
          expires: expires
          subject: subject
          acceptAttachments: true
          mailId: 6
          state: state
          body: body
          category: category
        id: 0
      properties:
        id:
          type: integer
        update:
          $ref: '#/components/schemas/UpdateMailRequest'
      required:
      - id
      type: object
    MailQueryResponse:
      example:
        unreadCount: 0
      properties:
        unreadCount:
          type: integer
      required:
      - unreadCount
      title: Mail Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    BulkUpdateMailObjectRequest:
      example:
        updateMailRequests:
        - update:
            expires: expires
            subject: subject
            acceptAttachments: true
            mailId: 6
            state: state
            body: body
            category: category
          id: 0
        - update:
            expires: expires
            subject: subject
            acceptAttachments: true
            mailId: 6
            state: state
            body: body
            category: category
          id: 0
      properties:
        updateMailRequests:
          items:
            $ref: '#/components/schemas/MyMailUpdate'
          type: array
      title: Bulk Update Mail Object Request
      type: object
    MailRewards:
      example:
        items:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        currencies:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
      properties:
        currencies:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        items:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
      type: object
    ListMailCategoriesResponse:
      example:
        result:
        - result
        - result
      properties:
        result:
          items:
            type: string
          type: array
      title: List Mail Categories Response
      type: object
      x-konfig-is-used-in-successful-response: true
    MailSearchResponseClause:
      example:
        name: name
        count: 0
        content:
        - gamerTag: 0
          expires: 1
          receiverGamerTag: 5
          attachments:
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          subject: subject
          censoredContent: censoredContent
          messageId: messageId
          senderGamerTag: 2
          body: body
          sent: 7
          roomId: roomId
          content: content
          claimedTimeMs: 4
          timestampMillis: 6
          bodyRef: 9
          reactions:
            key: ""
          state: state
          id: 5
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
        - gamerTag: 0
          expires: 1
          receiverGamerTag: 5
          attachments:
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          - id: 3
            state: state
            wrapped:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            target: 2
          subject: subject
          censoredContent: censoredContent
          messageId: messageId
          senderGamerTag: 2
          body: body
          sent: 7
          roomId: roomId
          content: content
          claimedTimeMs: 4
          timestampMillis: 6
          bodyRef: 9
          reactions:
            key: ""
          state: state
          id: 5
          category: category
          rewards:
            items:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            currencies:
            - symbol: symbol
              amount: 4
              originalAmount: 7
            - symbol: symbol
              amount: 4
              originalAmount: 7
      properties:
        name:
          type: string
        count:
          type: integer
        content:
          items:
            $ref: '#/components/schemas/Message'
          type: array
      required:
      - count
      type: object
    MatchUpdate:
      example:
        game: game
        players:
        - 0
        - 0
        minPlayersReached: true
        secondsRemaining: 6
        gameStarted: true
      properties:
        players:
          items:
            type: integer
          type: array
        secondsRemaining:
          type: integer
        minPlayersReached:
          type: boolean
        gameStarted:
          type: boolean
        game:
          type: string
      required:
      - gameStarted
      - minPlayersReached
      title: Match Update
      type: object
      x-konfig-is-used-in-successful-response: true
    CompletePurchaseRequest:
      example:
        isoCurrencySymbol: isoCurrencySymbol
        txid: 0
        receipt: receipt
        priceInLocalCurrency: priceInLocalCurrency
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      title: Complete Purchase Request
      type: object
    TrackPurchaseRequest:
      example:
        skuName: skuName
        obtainCurrency:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
        obtainItems:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        isoCurrencySymbol: isoCurrencySymbol
        purchaseId: purchaseId
        skuProductId: skuProductId
        priceInLocalCurrency: 0.8008281904610115
        store: store
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      title: Track Purchase Request
      type: object
    FacebookUpdatedEntry:
      example:
        id: id
        time: 0
        changed_fields:
        - changed_fields
        - changed_fields
      properties:
        id:
          type: string
        time:
          type: integer
        changed_fields:
          items:
            type: string
          type: array
      required:
      - time
      type: object
    GetPricesRequest:
      properties:
        steamId:
          type: integer
      required:
      - steamId
      title: Get Prices Request
      type: object
    PaymentAuditEntry:
      example:
        entitlements:
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        obtainItems:
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        - contentId: contentId
          properties:
          - name: name
            value: value
          - name: name
            value: value
        created: 4
        txid: 3
        inFlight:
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        - gamerTag: 0
          path: path
          method: method
          service: service
          shard: shard
          id: id
          body: body
        history:
        - data: data
          MAX_FIELD_SIZE: 9
          change: change
          timestamp: timestamp
        - data: data
          MAX_FIELD_SIZE: 9
          change: change
          timestamp: timestamp
        version: version
        providername: providername
        gt: 1
        txstate: txstate
        obtainCurrency:
        - symbol: symbol
          amount: 4
          originalAmount: 7
        - symbol: symbol
          amount: 4
          originalAmount: 7
        providerid: providerid
        details:
          reference: reference
          quantity: 6
          price: 7
          name: name
          localCurrency: localCurrency
          sku: sku
          subcategory: subcategory
          category: category
          providerProductId: providerProductId
          gameplace: gameplace
          localPrice: localPrice
        replayGuardValue: replayGuardValue
        updated: 2
      properties:
        version:
          type: string
        inFlight:
          items:
            $ref: '#/components/schemas/InFlightMessage'
          type: array
        providerid:
          type: string
        history:
          items:
            $ref: '#/components/schemas/PaymentHistoryEntry'
          type: array
        txid:
          type: integer
        providername:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        txstate:
          type: string
        updated:
          type: integer
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/EntitlementGenerator'
          type: array
        details:
          $ref: '#/components/schemas/PaymentDetailsEntry'
        replayGuardValue:
          type: string
        gt:
          type: integer
        created:
          type: integer
      required:
      - gt
      - txid
      type: object
    FacebookPaymentUpdateRequest:
      example:
        entry:
        - id: id
          time: 0
          changed_fields:
          - changed_fields
          - changed_fields
        - id: id
          time: 0
          changed_fields:
          - changed_fields
          - changed_fields
        object: object
      properties:
        object:
          type: string
        entry:
          items:
            $ref: '#/components/schemas/FacebookUpdatedEntry'
          type: array
      title: Facebook Payment Update Request
      type: object
    GetOrderInfoRequest:
      properties:
        orderId:
          type: string
      title: Get Order Info Request
      type: object
    ListAuditRequest:
      properties:
        providerid:
          type: string
        provider:
          type: string
        state:
          type: string
        txid:
          type: integer
        player:
          type: integer
        start:
          type: integer
        limit:
          type: integer
      title: List Audit Request
      type: object
    FailPurchaseRequest:
      example:
        reason: reason
        txid: 0
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      title: Fail Purchase Request
      type: object
    BeginPurchaseRequest:
      example:
        purchaseId: purchaseId
        language: language
        time: time
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      title: Begin Purchase Request
      type: object
    SteamOrderInfoItem:
      example:
        itemid: 1
        amount: 6
        qty: 5
        vat: 0
        itemstatus: itemstatus
      properties:
        vat:
          type: integer
        amount:
          type: integer
        itemid:
          type: integer
        qty:
          type: integer
        itemstatus:
          type: string
      required:
      - amount
      - itemid
      - qty
      - vat
      type: object
    SubscriptionVerificationRequest:
      properties:
        hubMode:
          type: string
        hubChallenge:
          type: string
        hubVerifyToken:
          type: string
      title: Subscription Verification Request
      type: object
    GetProductResponse:
      example:
        price: 0
        name: name
        description: description
        id: id
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        price:
          type: integer
      required:
      - price
      title: Get Product Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LocalizedPriceMap:
      example:
        currency: currency
        prices:
        - price: 6
          to: 0
        - price: 6
          to: 0
      properties:
        currency:
          type: string
        prices:
          items:
            $ref: '#/components/schemas/LocalizedPrice'
          type: array
      title: Localized Price Map
      type: object
      x-konfig-is-used-in-successful-response: true
    LocalizedPrice:
      example:
        price: 6
        to: 0
      properties:
        to:
          type: integer
        price:
          type: integer
      required:
      - price
      - to
      type: object
    PaymentResultResponse:
      example:
        result: result
      properties:
        result:
          type: string
      title: Payment Result Response
      type: object
      x-konfig-is-used-in-successful-response: true
    BeginPurchaseResponse:
      example:
        access_token: access_token
        txid: 0
      properties:
        txid:
          type: integer
        access_token:
          type: string
      required:
      - txid
      title: Begin Purchase Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SteamOrderInfoResponse:
      example:
        steamid: 7
        country: country
        usstate: usstate
        timecreated: timecreated
        orderid: 2
        transid: 5
        currency: currency
        time: time
        items:
        - itemid: 1
          amount: 6
          qty: 5
          vat: 0
          itemstatus: itemstatus
        - itemid: 1
          amount: 6
          qty: 5
          vat: 0
          itemstatus: itemstatus
        status: status
      properties:
        usstate:
          type: string
        items:
          items:
            $ref: '#/components/schemas/SteamOrderInfoItem'
          type: array
        country:
          type: string
        timecreated:
          type: string
        transid:
          type: integer
        status:
          type: string
        orderid:
          type: integer
        steamid:
          type: integer
        currency:
          type: string
        time:
          type: string
      required:
      - orderid
      - steamid
      - transid
      title: Steam Order Info Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetProductRequest:
      properties:
        sku:
          type: string
      title: Get Product Request
      type: object
    PaymentHistoryEntry:
      example:
        data: data
        MAX_FIELD_SIZE: 9
        change: change
        timestamp: timestamp
      properties:
        change:
          type: string
        data:
          type: string
        timestamp:
          type: string
        MAX_FIELD_SIZE:
          type: integer
      required:
      - MAX_FIELD_SIZE
      type: object
    CancelPurchaseRequest:
      example:
        txid: 0
      properties:
        txid:
          type: integer
      required:
      - txid
      title: Cancel Purchase Request
      type: object
    PaymentDetailsEntry:
      example:
        reference: reference
        quantity: 6
        price: 7
        name: name
        localCurrency: localCurrency
        sku: sku
        subcategory: subcategory
        category: category
        providerProductId: providerProductId
        gameplace: gameplace
        localPrice: localPrice
      properties:
        reference:
          type: string
        name:
          type: string
        quantity:
          type: integer
        sku:
          type: string
        price:
          type: integer
        subcategory:
          type: string
        gameplace:
          type: string
        localPrice:
          type: string
        category:
          type: string
        localCurrency:
          type: string
        providerProductId:
          type: string
      required:
      - price
      - quantity
      type: object
    SteamAuthRequest:
      example:
        ticket: ticket
      properties:
        ticket:
          type: string
      title: Steam Auth Request
      type: object
    FacebookPaymentUpdateResponse:
      example:
        result: result
        contentType: contentType
      properties:
        result:
          type: string
        contentType:
          type: string
      title: Facebook Payment Update Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SubscriptionVerificationResponse:
      example:
        hubChallenge: hubChallenge
        contentType: contentType
      properties:
        hubChallenge:
          type: string
        contentType:
          type: string
      title: Subscription Verification Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EmptyRsp:
      properties: {}
      title: Empty Rsp
      type: object
      x-konfig-is-used-in-successful-response: true
    SendNotification:
      example:
        title: title
        body: body
      properties:
        title:
          type: string
        body:
          type: string
      type: object
    RegisterReq:
      example:
        provider: provider
        token: token
      properties:
        provider:
          type: string
        token:
          type: string
      title: Register Req
      type: object
    SendReq:
      example:
        msgs:
        - notification:
            title: title
            body: body
          data:
            key: ""
          to:
          - 0
          - 0
        - notification:
            title: title
            body: body
          data:
            key: ""
          to:
          - 0
          - 0
      properties:
        msgs:
          items:
            $ref: '#/components/schemas/SendMsg'
          type: array
      title: Send Req
      type: object
    SendMsg:
      example:
        notification:
          title: title
          body: body
        data:
          key: ""
        to:
        - 0
        - 0
      properties:
        to:
          items:
            type: integer
          type: array
        notification:
          $ref: '#/components/schemas/SendNotification'
        data:
          additionalProperties: true
          type: object
      type: object
    Promotable:
      example:
        createdAt: 0
        checksum: checksum
      properties:
        checksum:
          type: string
        createdAt:
          format: int64
          type: integer
      required:
      - checksum
      - createdAt
      type: object
    ArchiveProjectRequest:
      example:
        pid: pid
      properties:
        pid:
          type: string
      required:
      - pid
      title: Archive Project Request
      type: object
    UpdateGameHierarchyRequest:
      example:
        projects:
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
        rootPID: rootPID
      properties:
        rootPID:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectView'
          type: array
      required:
      - projects
      - rootPID
      title: Update Game Hierarchy Request
      type: object
    LaunchMessageListResponse:
      example:
        files:
        - files
        - files
      properties:
        files:
          items:
            type: string
          type: array
      required:
      - files
      title: Launch Message List Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomerResponse:
      example:
        customer:
          image: image
          crm_link: crm_link
          projects:
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          created: 5
          contact: contact
          name: name
          alias: alias
          accounts:
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          updated: 6
          paymentStatus: paymentStatus
          cid: 0
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
      required:
      - customer
      title: Customer Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomersResponse:
      example:
        result:
        - image: image
          crm_link: crm_link
          projects:
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          created: 5
          contact: contact
          name: name
          alias: alias
          accounts:
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          updated: 6
          paymentStatus: paymentStatus
          cid: 0
        - image: image
          crm_link: crm_link
          projects:
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          - parent: parent
            sigval: true
            displayName: displayName
            created: 1
            secret: secret
            sharded: true
            archived: true
            children:
            - children
            - children
            root: true
            name: name
            customCharts:
              key: customCharts
            config:
              key: config
            plan: plan
            status: status
          created: 5
          contact: contact
          name: name
          alias: alias
          accounts:
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          - country: country
            deviceIds:
            - deviceIds
            - deviceIds
            realmId: realmId
            wasMigrated: true
            projects:
            - projects
            - projects
            heartbeat: 5
            created: 2
            roles:
            - role: role
              projectId: projectId
            - role: role
              projectId: projectId
            roleString: roleString
            inFlight:
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            - gamerTag: 0
              path: path
              method: method
              service: service
              shard: shard
              id: id
              body: body
            language: language
            userName: userName
            privilegedAccount: true
            deviceId: deviceId
            gamerTags:
            - gamerTag: 0
              projectId: projectId
            - gamerTag: 0
              projectId: projectId
            createdTimeMillis: 6
            password: password
            updatedTimeMillis: 5
            thirdParties:
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            - userAppId: userAppId
              meta:
                key: ""
              appId: appId
              name: name
              userBusinessId: userBusinessId
              email: email
            id: 1
            user: user
            email: email
          updated: 6
          paymentStatus: paymentStatus
          cid: 0
      properties:
        result:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
      required:
      - result
      title: Customers Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CreatePlanRequest:
      example:
        mongoSSL: true
        messageBusCommon:
        - messageBusCommon
        - messageBusCommon
        messageBusAnalytics:
        - messageBusAnalytics
        - messageBusAnalytics
        name: name
        memcachedHosts: memcachedHosts
        platformJBDC: platformJBDC
        sharded: true
        mongoHosts: mongoHosts
        redisShards:
        - masterHost: masterHost
          slaveHosts: slaveHosts
          shardId: 0
        - masterHost: masterHost
          slaveHosts: slaveHosts
          shardId: 0
      properties:
        name:
          type: string
        messageBusAnalytics:
          items:
            type: string
          type: array
        memcachedHosts:
          type: string
        mongoSSL:
          type: boolean
        platformJBDC:
          type: string
        sharded:
          type: boolean
        mongoHosts:
          type: string
        messageBusCommon:
          items:
            type: string
          type: array
        redisShards:
          items:
            $ref: '#/components/schemas/RedisShardRequest'
          type: array
      required:
      - memcachedHosts
      - mongoHosts
      - mongoSSL
      - name
      - platformJBDC
      - redisShards
      - sharded
      title: Create Plan Request
      type: object
    ContentLimits:
      example:
        maxDistinctContentIds: 1
      properties:
        maxDistinctContentIds:
          format: int32
          type: integer
      type: object
    ServiceLimits:
      example:
        beamo:
          maxRunningContainersPerService: 6
          maxContainerSize: maxContainerSize
        content:
          maxDistinctContentIds: 1
        gateway:
          maxConcurrentRequests: 5
      properties:
        beamo:
          $ref: '#/components/schemas/BeamoLimits'
        content:
          $ref: '#/components/schemas/ContentLimits'
        gateway:
          $ref: '#/components/schemas/GatewayLimits'
      type: object
    GatewayLimits:
      example:
        maxConcurrentRequests: 5
      properties:
        maxConcurrentRequests:
          format: int32
          type: integer
      required:
      - maxConcurrentRequests
      type: object
    NewCustomerRequest:
      example:
        password: password
        hierarchy: true
        alias: alias
        projectName: projectName
        email: email
        customerName: customerName
      properties:
        projectName:
          type: string
        email:
          type: string
        customerName:
          type: string
        hierarchy:
          type: boolean
        alias:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - projectName
      title: New Customer Request
      type: object
    PromoteRealmResponseOld:
      example:
        promotions:
        - name: name
          destination:
            createdAt: 0
            checksum: checksum
          source:
            createdAt: 0
            checksum: checksum
        - name: name
          destination:
            createdAt: 0
            checksum: checksum
          source:
            createdAt: 0
            checksum: checksum
        sourcePid: sourcePid
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            $ref: '#/components/schemas/RealmPromotion'
          type: array
      required:
      - promotions
      - sourcePid
      title: Promote Realm Response Old
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomerView:
      example:
        projects:
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
        name: name
        alias: alias
        cid: 0
      properties:
        cid:
          format: int64
          type: integer
        name:
          type: string
        alias:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectView'
          type: array
      required:
      - cid
      - name
      - projects
      type: object
    GetGameResponse:
      example:
        projects:
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
        - parent: parent
          archived: true
          children:
          - children
          - children
          pid: pid
          secret: secret
          projectName: projectName
          sharded: true
          cid: 0
      properties:
        projects:
          items:
            $ref: '#/components/schemas/ProjectView'
          type: array
      required:
      - projects
      title: Get Game Response
      type: object
      x-konfig-is-used-in-successful-response: true
    PromoteRealmRequest:
      example:
        promotions:
        - promotions
        - promotions
        sourcePid: sourcePid
        contentManifestIds:
        - contentManifestIds
        - contentManifestIds
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            type: string
          type: array
        contentManifestIds:
          items:
            type: string
          type: array
      required:
      - sourcePid
      title: Promote Realm Request
      type: object
    CreateLaunchMessageRequest:
      example:
        name: name
        body: body
      properties:
        name:
          type: string
        body:
          type: string
      required:
      - body
      - name
      title: Create Launch Message Request
      type: object
    RealmConfigSaveRequest:
      example:
        config:
          key: config
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      required:
      - config
      title: Realm Config Save Request
      type: object
    PromotionScope:
      example:
        promotions:
        - destination:
            createdAt: 0
            checksum: checksum
          id: id
          source:
            createdAt: 0
            checksum: checksum
        - destination:
            createdAt: 0
            checksum: checksum
          id: id
          source:
            createdAt: 0
            checksum: checksum
        name: name
      properties:
        name:
          type: string
        promotions:
          items:
            $ref: '#/components/schemas/Promotion'
          type: array
      required:
      - name
      - promotions
      type: object
    ServicePlan:
      example:
        dataDomain:
          mongoSSL: true
          messageBusCommon:
          - messageBusCommon
          - messageBusCommon
          messageBusAnalytics:
          - messageBusAnalytics
          - messageBusAnalytics
          mongoSharded: true
          memcachedHosts:
          - memcachedHosts
          - memcachedHosts
          mongoHosts:
          - mongoHosts
          - mongoHosts
          mongoSSLEnabled: true
          redisShards:
          - masterHost: masterHost
            slaveHosts:
            - slaveHosts
            - slaveHosts
            shardId: 0
          - masterHost: masterHost
            slaveHosts:
            - slaveHosts
            - slaveHosts
            shardId: 0
        created: 5
        name: name
        minCustomerStatusSaved: minCustomerStatusSaved
        limits:
          beamo:
            maxRunningContainersPerService: 6
            maxContainerSize: maxContainerSize
          content:
            maxDistinctContentIds: 1
          gateway:
            maxConcurrentRequests: 5
      properties:
        minCustomerStatusSaved:
          type: string
        name:
          type: string
        dataDomain:
          $ref: '#/components/schemas/DataDomain'
        limits:
          $ref: '#/components/schemas/ServiceLimits'
        created:
          format: int64
          type: integer
      required:
      - dataDomain
      - name
      type: object
    CustomerViewResponse:
      example:
        customer:
          projects:
          - parent: parent
            archived: true
            children:
            - children
            - children
            pid: pid
            secret: secret
            projectName: projectName
            sharded: true
            cid: 0
          - parent: parent
            archived: true
            children:
            - children
            - children
            pid: pid
            secret: secret
            projectName: projectName
            sharded: true
            cid: 0
          name: name
          alias: alias
          cid: 0
      properties:
        customer:
          $ref: '#/components/schemas/CustomerView'
      required:
      - customer
      title: Customer View Response
      type: object
      x-konfig-is-used-in-successful-response: true
    AliasAvailableResponse:
      example:
        available: true
        alias: alias
        cid: 0
      properties:
        alias:
          type: string
        available:
          type: boolean
        cid:
          format: int64
          type: integer
      required:
      - alias
      - available
      - cid
      title: Alias Available Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RealmPromotion:
      example:
        name: name
        destination:
          createdAt: 0
          checksum: checksum
        source:
          createdAt: 0
          checksum: checksum
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/Promotable'
        destination:
          $ref: '#/components/schemas/Promotable'
      required:
      - destination
      - name
      - source
      type: object
    BeamoLimits:
      example:
        maxRunningContainersPerService: 6
        maxContainerSize: maxContainerSize
      properties:
        maxContainerSize:
          type: string
        maxRunningContainersPerService:
          format: int32
          type: integer
      required:
      - maxContainerSize
      - maxRunningContainersPerService
      type: object
    Project:
      example:
        parent: parent
        sigval: true
        displayName: displayName
        created: 1
        secret: secret
        sharded: true
        archived: true
        children:
        - children
        - children
        root: true
        name: name
        customCharts:
          key: customCharts
        config:
          key: config
        plan: plan
        status: status
      properties:
        displayName:
          type: string
        secret:
          type: string
        parent:
          type: string
        children:
          items:
            type: string
          type: array
        name:
          type: string
        customCharts:
          additionalProperties:
            type: string
          type: object
        root:
          type: boolean
        archived:
          type: boolean
        config:
          additionalProperties:
            type: string
          type: object
        status:
          type: string
        sharded:
          type: boolean
        sigval:
          type: boolean
        plan:
          type: string
        created:
          format: int64
          type: integer
      required:
      - archived
      - customCharts
      - name
      - plan
      - root
      - secret
      type: object
    RedisShardRequest:
      example:
        masterHost: masterHost
        slaveHosts: slaveHosts
        shardId: 0
      properties:
        shardId:
          format: int32
          type: integer
        masterHost:
          type: string
        slaveHosts:
          type: string
      required:
      - masterHost
      - shardId
      - slaveHosts
      type: object
    RealmConfigResponse:
      example:
        config:
          key: config
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      required:
      - config
      title: Realm Config Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Customer:
      example:
        image: image
        crm_link: crm_link
        projects:
        - parent: parent
          sigval: true
          displayName: displayName
          created: 1
          secret: secret
          sharded: true
          archived: true
          children:
          - children
          - children
          root: true
          name: name
          customCharts:
            key: customCharts
          config:
            key: config
          plan: plan
          status: status
        - parent: parent
          sigval: true
          displayName: displayName
          created: 1
          secret: secret
          sharded: true
          archived: true
          children:
          - children
          - children
          root: true
          name: name
          customCharts:
            key: customCharts
          config:
            key: config
          plan: plan
          status: status
        created: 5
        contact: contact
        name: name
        alias: alias
        accounts:
        - country: country
          deviceIds:
          - deviceIds
          - deviceIds
          realmId: realmId
          wasMigrated: true
          projects:
          - projects
          - projects
          heartbeat: 5
          created: 2
          roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          language: language
          userName: userName
          privilegedAccount: true
          deviceId: deviceId
          gamerTags:
          - gamerTag: 0
            projectId: projectId
          - gamerTag: 0
            projectId: projectId
          createdTimeMillis: 6
          password: password
          updatedTimeMillis: 5
          thirdParties:
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          id: 1
          user: user
          email: email
        - country: country
          deviceIds:
          - deviceIds
          - deviceIds
          realmId: realmId
          wasMigrated: true
          projects:
          - projects
          - projects
          heartbeat: 5
          created: 2
          roles:
          - role: role
            projectId: projectId
          - role: role
            projectId: projectId
          roleString: roleString
          inFlight:
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          - gamerTag: 0
            path: path
            method: method
            service: service
            shard: shard
            id: id
            body: body
          language: language
          userName: userName
          privilegedAccount: true
          deviceId: deviceId
          gamerTags:
          - gamerTag: 0
            projectId: projectId
          - gamerTag: 0
            projectId: projectId
          createdTimeMillis: 6
          password: password
          updatedTimeMillis: 5
          thirdParties:
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          - userAppId: userAppId
            meta:
              key: ""
            appId: appId
            name: name
            userBusinessId: userBusinessId
            email: email
          id: 1
          user: user
          email: email
        updated: 6
        paymentStatus: paymentStatus
        cid: 0
      properties:
        name:
          type: string
        paymentStatus:
          type: string
        image:
          type: string
        contact:
          type: string
        alias:
          type: string
        cid:
          format: int64
          type: integer
        updated:
          format: int64
          type: integer
        crm_link:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        created:
          format: int64
          type: integer
      required:
      - accounts
      - cid
      - name
      - projects
      type: object
    AliasAvailableRequest:
      properties:
        alias:
          type: string
      required:
      - alias
      title: Alias Available Request
      type: object
    Promotion:
      example:
        destination:
          createdAt: 0
          checksum: checksum
        id: id
        source:
          createdAt: 0
          checksum: checksum
      properties:
        id:
          type: string
        source:
          $ref: '#/components/schemas/Promotable'
        destination:
          $ref: '#/components/schemas/Promotable'
      required:
      - destination
      - id
      - source
      type: object
    GetGameRequest:
      properties:
        rootPID:
          type: string
      required:
      - rootPID
      title: Get Game Request
      type: object
    NewCustomerResponse:
      example:
        name: name
        alias: alias
        pid: pid
        projectName: projectName
        cid: 0
        token:
          access_token: access_token
          refresh_token: refresh_token
          scopes:
          - scopes
          - scopes
          token_type: token_type
          expires_in: 0
      properties:
        name:
          type: string
        projectName:
          type: string
        alias:
          type: string
        cid:
          format: int64
          type: integer
        pid:
          type: string
        token:
          $ref: '#/components/schemas/TokenResponse'
      required:
      - cid
      - name
      - pid
      - projectName
      - token
      title: New Customer Response
      type: object
      x-konfig-is-used-in-successful-response: true
    DataDomain:
      example:
        mongoSSL: true
        messageBusCommon:
        - messageBusCommon
        - messageBusCommon
        messageBusAnalytics:
        - messageBusAnalytics
        - messageBusAnalytics
        mongoSharded: true
        memcachedHosts:
        - memcachedHosts
        - memcachedHosts
        mongoHosts:
        - mongoHosts
        - mongoHosts
        mongoSSLEnabled: true
        redisShards:
        - masterHost: masterHost
          slaveHosts:
          - slaveHosts
          - slaveHosts
          shardId: 0
        - masterHost: masterHost
          slaveHosts:
          - slaveHosts
          - slaveHosts
          shardId: 0
      properties:
        messageBusAnalytics:
          items:
            type: string
          type: array
        memcachedHosts:
          items:
            type: string
          type: array
        mongoSharded:
          type: boolean
        mongoSSL:
          type: boolean
        mongoHosts:
          items:
            type: string
          type: array
        mongoSSLEnabled:
          type: boolean
        messageBusCommon:
          items:
            type: string
          type: array
        redisShards:
          items:
            $ref: '#/components/schemas/RedisShard'
          type: array
      required:
      - memcachedHosts
      - mongoHosts
      - mongoSSLEnabled
      - mongoSharded
      type: object
    ServicePlansResponse:
      example:
        result:
        - dataDomain:
            mongoSSL: true
            messageBusCommon:
            - messageBusCommon
            - messageBusCommon
            messageBusAnalytics:
            - messageBusAnalytics
            - messageBusAnalytics
            mongoSharded: true
            memcachedHosts:
            - memcachedHosts
            - memcachedHosts
            mongoHosts:
            - mongoHosts
            - mongoHosts
            mongoSSLEnabled: true
            redisShards:
            - masterHost: masterHost
              slaveHosts:
              - slaveHosts
              - slaveHosts
              shardId: 0
            - masterHost: masterHost
              slaveHosts:
              - slaveHosts
              - slaveHosts
              shardId: 0
          created: 5
          name: name
          minCustomerStatusSaved: minCustomerStatusSaved
          limits:
            beamo:
              maxRunningContainersPerService: 6
              maxContainerSize: maxContainerSize
            content:
              maxDistinctContentIds: 1
            gateway:
              maxConcurrentRequests: 5
        - dataDomain:
            mongoSSL: true
            messageBusCommon:
            - messageBusCommon
            - messageBusCommon
            messageBusAnalytics:
            - messageBusAnalytics
            - messageBusAnalytics
            mongoSharded: true
            memcachedHosts:
            - memcachedHosts
            - memcachedHosts
            mongoHosts:
            - mongoHosts
            - mongoHosts
            mongoSSLEnabled: true
            redisShards:
            - masterHost: masterHost
              slaveHosts:
              - slaveHosts
              - slaveHosts
              shardId: 0
            - masterHost: masterHost
              slaveHosts:
              - slaveHosts
              - slaveHosts
              shardId: 0
          created: 5
          name: name
          minCustomerStatusSaved: minCustomerStatusSaved
          limits:
            beamo:
              maxRunningContainersPerService: 6
              maxContainerSize: maxContainerSize
            content:
              maxDistinctContentIds: 1
            gateway:
              maxConcurrentRequests: 5
      properties:
        result:
          items:
            $ref: '#/components/schemas/ServicePlan'
          type: array
      required:
      - result
      title: Service Plans Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RenameProjectRequest:
      example:
        newName: newName
        projectId: projectId
      properties:
        projectId:
          type: string
        newName:
          type: string
      required:
      - newName
      - projectId
      title: Rename Project Request
      type: object
    NewGameRequest:
      example:
        gameName: gameName
      properties:
        gameName:
          type: string
      required:
      - gameName
      title: New Game Request
      type: object
    CreateProjectRequest:
      example:
        parent: parent
        name: name
        plan: plan
        sharded: true
      properties:
        name:
          type: string
        plan:
          type: string
        sharded:
          type: boolean
        parent:
          type: string
      required:
      - name
      title: Create Project Request
      type: object
    UnarchiveProjectRequest:
      example:
        projectId: projectId
      properties:
        projectId:
          type: string
      required:
      - projectId
      title: Unarchive Project Request
      type: object
    RedisShard:
      example:
        masterHost: masterHost
        slaveHosts:
        - slaveHosts
        - slaveHosts
        shardId: 0
      properties:
        shardId:
          format: int32
          type: integer
        masterHost:
          type: string
        slaveHosts:
          items:
            type: string
          type: array
      required:
      - masterHost
      - shardId
      - slaveHosts
      type: object
    PromoteRealmResponse:
      example:
        sourcePid: sourcePid
        scopes:
        - promotions:
          - destination:
              createdAt: 0
              checksum: checksum
            id: id
            source:
              createdAt: 0
              checksum: checksum
          - destination:
              createdAt: 0
              checksum: checksum
            id: id
            source:
              createdAt: 0
              checksum: checksum
          name: name
        - promotions:
          - destination:
              createdAt: 0
              checksum: checksum
            id: id
            source:
              createdAt: 0
              checksum: checksum
          - destination:
              createdAt: 0
              checksum: checksum
            id: id
            source:
              createdAt: 0
              checksum: checksum
          name: name
      properties:
        sourcePid:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/PromotionScope'
          type: array
      required:
      - scopes
      - sourcePid
      title: Promote Realm Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RemoveLaunchMessageRequest:
      example:
        file: file
      properties:
        file:
          type: string
      required:
      - file
      title: Remove Launch Message Request
      type: object
    ProjectView:
      example:
        parent: parent
        archived: true
        children:
        - children
        - children
        pid: pid
        secret: secret
        projectName: projectName
        sharded: true
        cid: 0
      properties:
        secret:
          type: string
        parent:
          type: string
        children:
          items:
            type: string
          type: array
        projectName:
          type: string
        archived:
          type: boolean
        cid:
          format: int64
          type: integer
        pid:
          type: string
        sharded:
          type: boolean
      required:
      - pid
      - projectName
      type: object
      x-konfig-is-used-in-successful-response: true
    NotificationRequestData:
      example:
        messageKey: messageKey
        meta:
          key: ""
        channel: channel
        context: context
        messageFull: messageFull
        messageParams:
        - messageParams
        - messageParams
        shard: shard
      properties:
        messageParams:
          items:
            type: string
          type: array
        channel:
          type: string
        messageKey:
          type: string
        context:
          type: string
        shard:
          type: string
        meta:
          additionalProperties: true
          type: object
        messageFull:
          type: string
      type: object
    ServerEvent:
      example:
        toAll: true
        payload: ""
        event: event
      properties:
        event:
          type: string
        payload: {}
        toAll:
          type: boolean
      required:
      - toAll
      title: Server Event
      type: object
    NotificationRequest:
      example:
        customChannelSuffix: customChannelSuffix
        payload:
          messageKey: messageKey
          meta:
            key: ""
          channel: channel
          context: context
          messageFull: messageFull
          messageParams:
          - messageParams
          - messageParams
          shard: shard
        dbids:
        - 6
        - 6
        dbid: 0
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      title: Notification Request
      type: object
    SubscriberDetailsResponse:
      example:
        playerForRealmChannel: playerForRealmChannel
        gameNotificationChannel: gameNotificationChannel
        customChannelPrefix: customChannelPrefix
        authenticationKey: authenticationKey
        gameGlobalNotificationChannel: gameGlobalNotificationChannel
        subscribeKey: subscribeKey
        playerChannel: playerChannel
      properties:
        customChannelPrefix:
          type: string
        playerForRealmChannel:
          type: string
        authenticationKey:
          type: string
        gameGlobalNotificationChannel:
          type: string
        gameNotificationChannel:
          type: string
        subscribeKey:
          type: string
        playerChannel:
          type: string
      title: Subscriber Details Response
      type: object
      x-konfig-is-used-in-successful-response: true
    SessionHistoryRequest:
      properties:
        dbid:
          type: integer
        month:
          type: integer
        year:
          type: integer
      required:
      - dbid
      title: Session History Request
      type: object
    SessionHeartbeat:
      example:
        heartbeat: 6
        gt: 0
      properties:
        gt:
          type: integer
        heartbeat:
          type: integer
      required:
      - gt
      title: Session Heartbeat
      type: object
      x-konfig-is-used-in-successful-response: true
    Era:
      example:
        value: 2
      properties:
        value:
          type: integer
      required:
      - value
      type: object
    OnlineStatusResponses:
      example:
        players:
        - lastSeen: 6
          online: true
          playerId: 0
        - lastSeen: 6
          online: true
          playerId: 0
      properties:
        players:
          items:
            $ref: '#/components/schemas/PlayerOnlineStatusResponse'
          type: array
      title: Online Status Responses
      type: object
      x-konfig-is-used-in-successful-response: true
    SessionHistoryResponse:
      example:
        date:
          dayOfWeek: SATURDAY
          month: DECEMBER
          dayOfYear: 6
          dayOfMonth: 5
          year: 5
          era:
            value: 2
          monthValue: 1
          chronology:
            calendarType: calendarType
            id: id
          leapYear: true
        sessions:
        - sessions
        - sessions
        totalPaid:
        - totalRevenue: 0
          currencyCode: currencyCode
        - totalRevenue: 0
          currencyCode: currencyCode
        installDate: installDate
        daysPlayed: 7
        payments:
        - payments
        - payments
      properties:
        payments:
          items:
            type: string
          type: array
        totalPaid:
          items:
            $ref: '#/components/schemas/PaymentTotal'
          type: array
        sessions:
          items:
            type: string
          type: array
        date:
          $ref: '#/components/schemas/LocalDate'
        installDate:
          type: string
        daysPlayed:
          type: integer
      required:
      - daysPlayed
      title: Session History Response
      type: object
      x-konfig-is-used-in-successful-response: true
    LocalDate:
      example:
        dayOfWeek: SATURDAY
        month: DECEMBER
        dayOfYear: 6
        dayOfMonth: 5
        year: 5
        era:
          value: 2
        monthValue: 1
        chronology:
          calendarType: calendarType
          id: id
        leapYear: true
      properties:
        dayOfYear:
          type: integer
        leapYear:
          type: boolean
        chronology:
          $ref: '#/components/schemas/IsoChronology'
        dayOfWeek:
          enum:
          - SATURDAY
          - MONDAY
          - THURSDAY
          - TUESDAY
          - FRIDAY
          - WEDNESDAY
          - SUNDAY
          type: string
        monthValue:
          type: integer
        dayOfMonth:
          type: integer
        year:
          type: integer
        era:
          $ref: '#/components/schemas/Era'
        month:
          enum:
          - DECEMBER
          - APRIL
          - JULY
          - SEPTEMBER
          - JUNE
          - FEBRUARY
          - OCTOBER
          - AUGUST
          - NOVEMBER
          - MARCH
          - MAY
          - JANUARY
          type: string
      required:
      - dayOfMonth
      - dayOfYear
      - leapYear
      - monthValue
      - year
      type: object
    StartSessionRequest:
      example:
        customParams:
          key: ""
        deviceParams:
          key: ""
        gamer: 6
        language:
          code: code
          ctx: ctx
        source: source
        shard: shard
        time: 0
        locale: locale
        device: device
        platform: platform
      properties:
        source:
          type: string
        customParams:
          additionalProperties: true
          type: object
        shard:
          type: string
        locale:
          type: string
        deviceParams:
          additionalProperties: true
          type: object
        language:
          $ref: '#/components/schemas/SessionLanguageContext'
        time:
          type: integer
        platform:
          type: string
        gamer:
          type: integer
        device:
          type: string
      title: Start Session Request
      type: object
    OnlineStatusRequest:
      properties:
        playerIds:
          type: string
        intervalSecs:
          type: integer
        playerIdsSeq:
          items: {}
          type: array
      required:
      - intervalSecs
      title: Online Status Request
      type: object
    PlayerOnlineStatusResponse:
      example:
        lastSeen: 6
        online: true
        playerId: 0
      properties:
        playerId:
          type: integer
        online:
          type: boolean
        lastSeen:
          type: integer
      required:
      - lastSeen
      - online
      - playerId
      type: object
    GamerTag:
      example:
        trials:
        - cohort: cohort
          trial: trial
        - cohort: cohort
          trial: trial
        added: 6
        alias: alias
        tag: 0
        user:
          gamerTag: 1
          lastName: lastName
          firstName: firstName
          password: password
          heartbeat: 5
          name: name
          id: 5
          lang: lang
          email: email
          username: username
          cid: cid
        platform: platform
      properties:
        tag:
          type: integer
        alias:
          type: string
        added:
          type: integer
        trials:
          items:
            $ref: '#/components/schemas/CohortEntry'
          type: array
        platform:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - tag
      type: object
    User:
      example:
        gamerTag: 1
        lastName: lastName
        firstName: firstName
        password: password
        heartbeat: 5
        name: name
        id: 5
        lang: lang
        email: email
        username: username
        cid: cid
      properties:
        name:
          type: string
        email:
          type: string
        gamerTag:
          type: integer
        username:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        id:
          type: integer
        cid:
          type: string
        lang:
          type: string
        heartbeat:
          type: integer
        password:
          type: string
      required:
      - gamerTag
      - id
      type: object
    SessionLanguageContext:
      example:
        code: code
        ctx: ctx
      properties:
        code:
          type: string
        ctx:
          type: string
      type: object
    IsoChronology:
      example:
        calendarType: calendarType
        id: id
      properties:
        calendarType:
          type: string
        id:
          type: string
      type: object
    PaymentTotal:
      example:
        totalRevenue: 0
        currencyCode: currencyCode
      properties:
        currencyCode:
          type: string
        totalRevenue:
          type: integer
      required:
      - totalRevenue
      type: object
    StartSessionResponse:
      example:
        result: result
        gamer:
          trials:
          - cohort: cohort
            trial: trial
          - cohort: cohort
            trial: trial
          added: 6
          alias: alias
          tag: 0
          user:
            gamerTag: 1
            lastName: lastName
            firstName: firstName
            password: password
            heartbeat: 5
            name: name
            id: 5
            lang: lang
            email: email
            username: username
            cid: cid
          platform: platform
      properties:
        result:
          type: string
        gamer:
          $ref: '#/components/schemas/GamerTag'
      title: Start Session Response
      type: object
      x-konfig-is-used-in-successful-response: true
    StatUpdateRequest:
      example:
        add:
          key: ""
        emitAnalytics: true
        set:
          key: ""
        objectId: objectId
      properties:
        objectId:
          type: string
        set:
          additionalProperties: true
          type: object
        add:
          additionalProperties: true
          type: object
        emitAnalytics:
          type: boolean
      title: Stat Update Request
      type: object
    StatsSubscribeRequest:
      example:
        subscriptions:
        - subscriptions
        - subscriptions
        service: service
      properties:
        service:
          type: string
        subscriptions:
          items:
            type: string
          type: array
      title: Stats Subscribe Request
      type: object
    StatsSearchResponse:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            type: integer
          type: array
      title: Stats Search Response
      type: object
      x-konfig-is-used-in-successful-response: true
    NetworkSerializable:
      example: {}
      properties: {}
      type: object
    BatchReadStatsRequest:
      properties:
        objectIds:
          type: string
        stats:
          type: string
        format:
          type: string
      title: Batch Read Stats Request
      type: object
    BatchSetStatsRequest:
      example:
        updates:
        - add:
            key: ""
          emitAnalytics: true
          set:
            key: ""
          objectId: objectId
        - add:
            key: ""
          emitAnalytics: true
          set:
            key: ""
          objectId: objectId
      properties:
        updates:
          items:
            $ref: '#/components/schemas/StatUpdateRequest'
          type: array
      title: Batch Set Stats Request
      type: object
    StatsSearchRequest:
      example:
        access: access
        criteria:
        - stat: stat
          rel: rel
          value: ""
        - stat: stat
          rel: rel
          value: ""
        domain: domain
        objectType: objectType
      properties:
        domain:
          type: string
        access:
          type: string
        objectType:
          type: string
        criteria:
          items:
            $ref: '#/components/schemas/StatsSearchCriteria'
          type: array
      title: Stats Search Request
      type: object
    StatsSearchCriteria:
      example:
        stat: stat
        rel: rel
        value: ""
      properties:
        stat:
          type: string
        rel:
          type: string
        value: {}
      type: object
    BatchReadStatsResponse:
      example:
        results:
        - {}
        - {}
      properties:
        results:
          items:
            $ref: '#/components/schemas/NetworkSerializable'
          type: array
      title: Batch Read Stats Response
      type: object
      x-konfig-is-used-in-successful-response: true
    StatUpdateRequestStringListFormat:
      example:
        set:
        - v: v
          k: k
        - v: v
          k: k
      properties:
        set:
          items:
            $ref: '#/components/schemas/StatStringListEntry'
          type: array
      title: Stat Update Request String List Format
      type: object
    StatRequest:
      example:
        stats: stats
      properties:
        stats:
          type: string
      title: Stat Request
      type: object
    StatStringListEntry:
      example:
        v: v
        k: k
      properties:
        k:
          type: string
        v:
          type: string
      type: object
    RewardsResponse:
      example:
        rewardCurrencies:
        - symbol: symbol
          amount: 0
        - symbol: symbol
          amount: 0
      properties:
        rewardCurrencies:
          items:
            $ref: '#/components/schemas/TournamentReward'
          type: array
      title: Rewards Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetPlayerStatusRequest:
      properties:
        tournamentId:
          type: string
      title: Get Player Status Request
      type: object
    GetPlayerStatusResponse:
      example:
        statuses:
        - stage: 6
          tier: 1
          tournamentId: tournamentId
          contentId: contentId
          unclaimedRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          lastUpdateCycle: 0
          playerId: 5
        - stage: 6
          tier: 1
          tournamentId: tournamentId
          contentId: contentId
          unclaimedRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          lastUpdateCycle: 0
          playerId: 5
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/PlayerStatus'
          type: array
      title: Get Player Status Response
      type: object
      x-konfig-is-used-in-successful-response: true
    RewardsRequest:
      example:
        tournamentId: tournamentId
      properties:
        tournamentId:
          type: string
      title: Rewards Request
      type: object
    ScoreRequest:
      example:
        score: 0.8008281904610115
        stats:
          key: ""
        tournamentId: tournamentId
        increment: true
        playerId: 6
      properties:
        tournamentId:
          type: string
        stats:
          additionalProperties: true
          type: object
        score:
          type: number
        playerId:
          type: integer
        increment:
          type: boolean
      required:
      - playerId
      - score
      title: Score Request
      type: object
    AdminGetPlayerStatusRequest:
      properties:
        playerId:
          type: integer
        tournamentId:
          type: string
      required:
      - playerId
      title: Admin Get Player Status Request
      type: object
    TournamentReward:
      example:
        symbol: symbol
        amount: 0
      properties:
        symbol:
          type: string
        amount:
          type: integer
      required:
      - amount
      type: object
    GetChampionsResponse:
      example:
        entries:
        - score: 1.4658129805029452
          startTimeMs: 6
          endTimeMs: 0
          cycle: 5
          playerId: 5
        - score: 1.4658129805029452
          startTimeMs: 6
          endTimeMs: 0
          cycle: 5
          playerId: 5
      properties:
        entries:
          items:
            $ref: '#/components/schemas/ChampionScore'
          type: array
      title: Get Champions Response
      type: object
      x-konfig-is-used-in-successful-response: true
    TournamentClientView:
      example:
        tournamentId: tournamentId
        secondsRemaining: 0
        contentId: contentId
      properties:
        tournamentId:
          type: string
        secondsRemaining:
          type: integer
        contentId:
          type: string
      required:
      - secondsRemaining
      title: Tournament Client View
      type: object
      x-konfig-is-used-in-successful-response: true
    GetStandingsRequest:
      properties:
        tournamentId:
          type: string
        max:
          type: integer
        focus:
          type: integer
        cycle:
          type: integer
        from:
          type: integer
      title: Get Standings Request
      type: object
    TournamentEntry:
      example:
        score: 6.027456183070403
        stageChange: 5
        rank: 0
        currencyRewards:
        - symbol: symbol
          amount: 0
        - symbol: symbol
          amount: 0
        playerId: 1
      properties:
        rank:
          type: integer
        score:
          type: number
        currencyRewards:
          items:
            $ref: '#/components/schemas/TournamentReward'
          type: array
        playerId:
          type: integer
        stageChange:
          type: integer
      required:
      - playerId
      - rank
      - score
      - stageChange
      type: object
    PlayerStatusUpdate:
      example:
        score: 5.962133916683182
        tier: 6
        stage: 1
      properties:
        tier:
          type: integer
        stage:
          type: integer
        score:
          type: number
      type: object
    TournamentQueryResponse:
      example:
        tournaments:
        - tournamentId: tournamentId
          secondsRemaining: 0
          contentId: contentId
        - tournamentId: tournamentId
          secondsRemaining: 0
          contentId: contentId
      properties:
        tournaments:
          items:
            $ref: '#/components/schemas/TournamentClientView'
          type: array
      title: Tournament Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    PlayerStatus:
      example:
        stage: 6
        tier: 1
        tournamentId: tournamentId
        contentId: contentId
        unclaimedRewards:
        - symbol: symbol
          amount: 0
        - symbol: symbol
          amount: 0
        lastUpdateCycle: 0
        playerId: 5
      properties:
        lastUpdateCycle:
          type: integer
        tournamentId:
          type: string
        stage:
          type: integer
        unclaimedRewards:
          items:
            $ref: '#/components/schemas/TournamentReward'
          type: array
        tier:
          type: integer
        playerId:
          type: integer
        contentId:
          type: string
      required:
      - lastUpdateCycle
      - playerId
      - stage
      - tier
      type: object
      x-konfig-is-used-in-successful-response: true
    GetStandingsResponse:
      example:
        entries:
        - score: 6.027456183070403
          stageChange: 5
          rank: 0
          currencyRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          playerId: 1
        - score: 6.027456183070403
          stageChange: 5
          rank: 0
          currencyRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          playerId: 1
        me:
          score: 6.027456183070403
          stageChange: 5
          rank: 0
          currencyRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          playerId: 1
      properties:
        entries:
          items:
            $ref: '#/components/schemas/TournamentEntry'
          type: array
        me:
          $ref: '#/components/schemas/TournamentEntry'
      title: Get Standings Response
      type: object
      x-konfig-is-used-in-successful-response: true
    TournamentQueryRequest:
      properties:
        isRunning:
          type: boolean
      title: Tournament Query Request
      type: object
    JoinRequest:
      example:
        tournamentId: tournamentId
      properties:
        tournamentId:
          type: string
      title: Join Request
      type: object
    AdminPlayerStatus:
      example:
        score: 5.962133916683182
        stage: 0
        tier: 6
        tournamentId: tournamentId
        contentId: contentId
        rank: 1
        unclaimedRewards:
        - symbol: symbol
          amount: 0
        - symbol: symbol
          amount: 0
        playerId: 5
        nextCycleStartMs: 2
      properties:
        tournamentId:
          type: string
        stage:
          type: integer
        unclaimedRewards:
          items:
            $ref: '#/components/schemas/TournamentReward'
          type: array
        tier:
          type: integer
        rank:
          type: integer
        score:
          type: number
        playerId:
          type: integer
        contentId:
          type: string
        nextCycleStartMs:
          type: integer
      required:
      - nextCycleStartMs
      - playerId
      - rank
      - score
      - stage
      - tier
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdatePlayerStatusRequest:
      example:
        tournamentId: tournamentId
        update:
          score: 5.962133916683182
          tier: 6
          stage: 1
        playerId: 0
      properties:
        playerId:
          type: integer
        tournamentId:
          type: string
        update:
          $ref: '#/components/schemas/PlayerStatusUpdate'
      required:
      - playerId
      title: Update Player Status Request
      type: object
    ChampionScore:
      example:
        score: 1.4658129805029452
        startTimeMs: 6
        endTimeMs: 0
        cycle: 5
        playerId: 5
      properties:
        endTimeMs:
          type: integer
        startTimeMs:
          type: integer
        score:
          type: number
        cycle:
          type: integer
        playerId:
          type: integer
      required:
      - cycle
      - endTimeMs
      - playerId
      - score
      - startTimeMs
      type: object
    GetChampionsRequest:
      properties:
        tournamentId:
          type: string
        cycles:
          type: integer
      required:
      - cycles
      title: Get Champions Request
      type: object
    AdminGetPlayerStatusResponse:
      example:
        statuses:
        - score: 5.962133916683182
          stage: 0
          tier: 6
          tournamentId: tournamentId
          contentId: contentId
          rank: 1
          unclaimedRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          playerId: 5
          nextCycleStartMs: 2
        - score: 5.962133916683182
          stage: 0
          tier: 6
          tournamentId: tournamentId
          contentId: contentId
          rank: 1
          unclaimedRewards:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          playerId: 5
          nextCycleStartMs: 2
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/AdminPlayerStatus'
          type: array
      title: Admin Get Player Status Response
      type: object
      x-konfig-is-used-in-successful-response: true
    Player:
      example:
        playerId: playerId
      properties:
        playerId:
          type: string
      type: object
    Friend:
      example:
        source: not-available
        playerId: playerId
      properties:
        playerId:
          type: string
        source:
          enum:
          - not-available
          type: string
      type: object
    Social:
      example:
        blocked:
        - playerId: playerId
        - playerId: playerId
        friends:
        - source: not-available
          playerId: playerId
        - source: not-available
          playerId: playerId
        playerId: playerId
      properties:
        playerId:
          type: string
        friends:
          items:
            $ref: '#/components/schemas/Friend'
          type: array
        blocked:
          items:
            $ref: '#/components/schemas/Player'
          type: array
      title: Social
      type: object
      x-konfig-is-used-in-successful-response: true
    PlayerIdRequest:
      example:
        playerId: playerId
      properties:
        playerId:
          type: string
      title: Player Id Request
      type: object
    FriendshipStatus:
      example:
        friendId: friendId
        isBlocked: true
        playerId: playerId
      properties:
        playerId:
          type: string
        friendId:
          type: string
        isBlocked:
          type: boolean
      required:
      - isBlocked
      title: Friendship Status
      type: object
      x-konfig-is-used-in-successful-response: true
    ImportFriendsRequest:
      example:
        source: source
        token: token
      properties:
        source:
          type: string
        token:
          type: string
      title: Import Friends Request
      type: object
    CreateTimerRequest:
      example:
        cronish: cronish
        name: name
      properties:
        name:
          type: string
        cronish:
          type: string
      title: Create Timer Request
      type: object
    Timer:
      example:
        cronish: cronish
        name: name
      properties:
        name:
          type: string
        cronish:
          type: string
      title: Timer
      type: object
      x-konfig-is-used-in-successful-response: true
    ListTimersResponse:
      example:
        result: result
        timers:
        - secsInPeriod: 1
          secsTillFire: 0
          cronish: cronish
          name: name
          nextFire: 6
        - secsInPeriod: 1
          secsTillFire: 0
          cronish: cronish
          name: name
          nextFire: 6
      properties:
        result:
          type: string
        timers:
          items:
            $ref: '#/components/schemas/CookedTimerDef'
          type: array
      title: List Timers Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CookedTimerResponse:
      example:
        result: result
        timers:
        - secsInPeriod: 1
          secsTillFire: 6
          name: name
          nextFire: 0
        - secsInPeriod: 1
          secsTillFire: 6
          name: name
          nextFire: 0
      properties:
        result:
          type: string
        timers:
          items:
            $ref: '#/components/schemas/CookedTimer'
          type: array
      title: Cooked Timer Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CookedTimer:
      example:
        secsInPeriod: 1
        secsTillFire: 6
        name: name
        nextFire: 0
      properties:
        name:
          type: string
        nextFire:
          type: integer
        secsTillFire:
          type: integer
        secsInPeriod:
          type: integer
      required:
      - nextFire
      - secsInPeriod
      - secsTillFire
      type: object
    CookedTimerDef:
      example:
        secsInPeriod: 1
        secsTillFire: 0
        cronish: cronish
        name: name
        nextFire: 6
      properties:
        name:
          type: string
        secsTillFire:
          type: integer
        nextFire:
          type: integer
        cronish:
          type: string
        secsInPeriod:
          type: integer
      required:
      - nextFire
      - secsInPeriod
      - secsTillFire
      type: object
    DeleteTimerRequest:
      example:
        name: name
      properties:
        name:
          type: string
      title: Delete Timer Request
      type: object
    GetCodesRequest:
      properties:
        id:
          type: integer
      required:
      - id
      title: Get Codes Request
      type: object
    CodeClaimRequest:
      example:
        code: code
      properties:
        code:
          type: string
      title: Code Claim Request
      type: object
    CreateRedemptionDef:
      example:
        reward:
          symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        gift:
          callWebhooks:
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          changeCurrencies:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          addCurrencyMap:
            key: ""
          applyVipBonus: true
          description: description
          addItemRequests:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          addItems:
          - symbol: symbol
            properties:
              key: ""
          - symbol: symbol
            properties:
              key: ""
        name: name
        description: description
        whitelist:
        - 1
        - 1
        classification: classification
        timeExpires: 0
        maxPerUser: 6
      properties:
        description:
          type: string
        name:
          type: string
        timeExpires:
          type: integer
        reward:
          $ref: '#/components/schemas/EntitlementGenerator'
        gift:
          $ref: '#/components/schemas/PlayerReward'
        maxPerUser:
          type: integer
        whitelist:
          items:
            type: integer
          type: array
        classification:
          type: string
      required:
      - maxPerUser
      type: object
    CodeRedemptionSummary:
      example:
        redeemed: 9
        definition:
          reward:
            symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          gift:
            callWebhooks:
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            changeCurrencies:
            - symbol: symbol
              amount: 0
            - symbol: symbol
              amount: 0
            addCurrencyMap:
              key: ""
            applyVipBonus: true
            description: description
            addItemRequests:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            addItems:
            - symbol: symbol
              properties:
                key: ""
            - symbol: symbol
              properties:
                key: ""
          creatorGt: 0
          name: name
          description: description
          timeCreated: 1
          id: 5
          whitelist:
          - 2
          - 2
          classification: classification
          timeExpires: 6
          maxPerUser: 5
        capacity: 7
      properties:
        definition:
          $ref: '#/components/schemas/RedemptionDef'
        capacity:
          type: integer
        redeemed:
          type: integer
      required:
      - capacity
      - redeemed
      type: object
    CodeRedemptionResponse:
      example:
        result: result
      properties:
        result:
          type: string
      title: Code Redemption Response
      type: object
      x-konfig-is-used-in-successful-response: true
    CodeCreateRequest:
      example:
        codes: 5
        claimsPerCode: 5
        definition:
          reward:
            symbol: symbol
            claimWindow:
              close: 1
              open: 1
            quantity: 1
            specialization: specialization
            action: action
            params:
              key: ""
          gift:
            callWebhooks:
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            - webHookComet:
                symbol: symbol
                variables:
                  variables:
                  - name: name
                    typeName: typeName
                  - name: name
                    typeName: typeName
                route:
                  endpoint: endpoint
                  service: service
                  serviceTypeStr: serviceTypeStr
                method: method
                description: description
                parameters:
                  payload: payload
                  parameters:
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  - name: name
                    typeName: typeName
                    body: body
                    variableRef:
                      name: name
                  objectId: objectId
              webhookSymbol: webhookSymbol
              strategy:
                invocationType: invocationType
                retryType: retryType
            changeCurrencies:
            - symbol: symbol
              amount: 0
            - symbol: symbol
              amount: 0
            addCurrencyMap:
              key: ""
            applyVipBonus: true
            description: description
            addItemRequests:
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            - contentId: contentId
              properties:
              - name: name
                value: value
              - name: name
                value: value
            addItems:
            - symbol: symbol
              properties:
                key: ""
            - symbol: symbol
              properties:
                key: ""
          name: name
          description: description
          whitelist:
          - 1
          - 1
          classification: classification
          timeExpires: 0
          maxPerUser: 6
      properties:
        definition:
          $ref: '#/components/schemas/CreateRedemptionDef'
        codes:
          type: integer
        claimsPerCode:
          type: integer
      required:
      - claimsPerCode
      - codes
      title: Code Create Request
      type: object
    RedemptionDef:
      example:
        reward:
          symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        gift:
          callWebhooks:
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          - webHookComet:
              symbol: symbol
              variables:
                variables:
                - name: name
                  typeName: typeName
                - name: name
                  typeName: typeName
              route:
                endpoint: endpoint
                service: service
                serviceTypeStr: serviceTypeStr
              method: method
              description: description
              parameters:
                payload: payload
                parameters:
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                - name: name
                  typeName: typeName
                  body: body
                  variableRef:
                    name: name
                objectId: objectId
            webhookSymbol: webhookSymbol
            strategy:
              invocationType: invocationType
              retryType: retryType
          changeCurrencies:
          - symbol: symbol
            amount: 0
          - symbol: symbol
            amount: 0
          addCurrencyMap:
            key: ""
          applyVipBonus: true
          description: description
          addItemRequests:
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          - contentId: contentId
            properties:
            - name: name
              value: value
            - name: name
              value: value
          addItems:
          - symbol: symbol
            properties:
              key: ""
          - symbol: symbol
            properties:
              key: ""
        creatorGt: 0
        name: name
        description: description
        timeCreated: 1
        id: 5
        whitelist:
        - 2
        - 2
        classification: classification
        timeExpires: 6
        maxPerUser: 5
      properties:
        description:
          type: string
        name:
          type: string
        creatorGt:
          type: integer
        timeExpires:
          type: integer
        reward:
          $ref: '#/components/schemas/EntitlementGenerator'
        gift:
          $ref: '#/components/schemas/PlayerReward'
        timeCreated:
          type: integer
        maxPerUser:
          type: integer
        id:
          type: integer
        whitelist:
          items:
            type: integer
          type: array
        classification:
          type: string
      required:
      - creatorGt
      - id
      - maxPerUser
      - timeCreated
      type: object
    GetDefinitionsResponse:
      example:
        summaries:
        - redeemed: 9
          definition:
            reward:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            gift:
              callWebhooks:
              - webHookComet:
                  symbol: symbol
                  variables:
                    variables:
                    - name: name
                      typeName: typeName
                    - name: name
                      typeName: typeName
                  route:
                    endpoint: endpoint
                    service: service
                    serviceTypeStr: serviceTypeStr
                  method: method
                  description: description
                  parameters:
                    payload: payload
                    parameters:
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    objectId: objectId
                webhookSymbol: webhookSymbol
                strategy:
                  invocationType: invocationType
                  retryType: retryType
              - webHookComet:
                  symbol: symbol
                  variables:
                    variables:
                    - name: name
                      typeName: typeName
                    - name: name
                      typeName: typeName
                  route:
                    endpoint: endpoint
                    service: service
                    serviceTypeStr: serviceTypeStr
                  method: method
                  description: description
                  parameters:
                    payload: payload
                    parameters:
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    objectId: objectId
                webhookSymbol: webhookSymbol
                strategy:
                  invocationType: invocationType
                  retryType: retryType
              changeCurrencies:
              - symbol: symbol
                amount: 0
              - symbol: symbol
                amount: 0
              addCurrencyMap:
                key: ""
              applyVipBonus: true
              description: description
              addItemRequests:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              addItems:
              - symbol: symbol
                properties:
                  key: ""
              - symbol: symbol
                properties:
                  key: ""
            creatorGt: 0
            name: name
            description: description
            timeCreated: 1
            id: 5
            whitelist:
            - 2
            - 2
            classification: classification
            timeExpires: 6
            maxPerUser: 5
          capacity: 7
        - redeemed: 9
          definition:
            reward:
              symbol: symbol
              claimWindow:
                close: 1
                open: 1
              quantity: 1
              specialization: specialization
              action: action
              params:
                key: ""
            gift:
              callWebhooks:
              - webHookComet:
                  symbol: symbol
                  variables:
                    variables:
                    - name: name
                      typeName: typeName
                    - name: name
                      typeName: typeName
                  route:
                    endpoint: endpoint
                    service: service
                    serviceTypeStr: serviceTypeStr
                  method: method
                  description: description
                  parameters:
                    payload: payload
                    parameters:
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    objectId: objectId
                webhookSymbol: webhookSymbol
                strategy:
                  invocationType: invocationType
                  retryType: retryType
              - webHookComet:
                  symbol: symbol
                  variables:
                    variables:
                    - name: name
                      typeName: typeName
                    - name: name
                      typeName: typeName
                  route:
                    endpoint: endpoint
                    service: service
                    serviceTypeStr: serviceTypeStr
                  method: method
                  description: description
                  parameters:
                    payload: payload
                    parameters:
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    - name: name
                      typeName: typeName
                      body: body
                      variableRef:
                        name: name
                    objectId: objectId
                webhookSymbol: webhookSymbol
                strategy:
                  invocationType: invocationType
                  retryType: retryType
              changeCurrencies:
              - symbol: symbol
                amount: 0
              - symbol: symbol
                amount: 0
              addCurrencyMap:
                key: ""
              applyVipBonus: true
              description: description
              addItemRequests:
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              - contentId: contentId
                properties:
                - name: name
                  value: value
                - name: name
                  value: value
              addItems:
              - symbol: symbol
                properties:
                  key: ""
              - symbol: symbol
                properties:
                  key: ""
            creatorGt: 0
            name: name
            description: description
            timeCreated: 1
            id: 5
            whitelist:
            - 2
            - 2
            classification: classification
            timeExpires: 6
            maxPerUser: 5
          capacity: 7
      properties:
        summaries:
          items:
            $ref: '#/components/schemas/CodeRedemptionSummary'
          type: array
      title: Get Definitions Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ImportCodesRequest:
      example:
        codes:
        - codes
        - codes
        claimsPerCode: 6
        definitionId: 0
      properties:
        definitionId:
          type: integer
        codes:
          items:
            type: string
          type: array
        claimsPerCode:
          type: integer
      required:
      - claimsPerCode
      - definitionId
      title: Import Codes Request
      type: object
    GetAvailableCodesResponse:
      example:
        codes:
        - codes
        - codes
      properties:
        codes:
          items:
            type: string
          type: array
      title: Get Available Codes Response
      type: object
      x-konfig-is-used-in-successful-response: true
    DeleteEntitlementDefinitionRequest:
      example:
        symbol: symbol
      properties:
        symbol:
          type: string
      title: Delete Entitlement Definition Request
      type: object
    GetPlayerEntitlementsRequest:
      properties:
        state:
          type: string
        skip:
          type: integer
        symbol:
          type: string
        icw:
          type: boolean
        spec:
          type: string
        limit:
          type: integer
        gt:
          type: integer
      required:
      - gt
      title: Get Player Entitlements Request
      type: object
    RevokeEntitlementRequest:
      example:
        uuid: uuid
      properties:
        uuid:
          type: string
      title: Revoke Entitlement Request
      type: object
    ModifyEntitlementDefinitionRequest:
      example:
        symbol: symbol
        request:
          image: image
          claimTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          revokeMode: 1
          parameterized: true
          maxGrants: 0
          replaces: replaces
          transferable: true
          name: name
          description: description
          terminalExpirationSecs: 6
          grantTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          groupSymbols:
          - groupSymbols
          - groupSymbols
      properties:
        symbol:
          type: string
        request:
          $ref: '#/components/schemas/EntitlementDefRequest'
      type: object
    EntitlementGrantMultiRequest:
      example:
        gamerTags:
        - 0
        - 0
        generators:
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
        - symbol: symbol
          claimWindow:
            close: 1
            open: 1
          quantity: 1
          specialization: specialization
          action: action
          params:
            key: ""
      properties:
        gamerTags:
          items:
            type: integer
          type: array
        generators:
          items:
            $ref: '#/components/schemas/EntitlementGenerator'
          type: array
      title: Entitlement Grant Multi Request
      type: object
    EntitlementDefinition:
      example:
        image: image
        symbol: symbol
        claimTrigger:
          subject: subject
          domain: domain
          action: action
          conditions:
          - statvalue: ""
          - statvalue: ""
        maxGrants: 0
        replaces: replaces
        created: 5
        transferable: true
        description: description
        terminalExpirationSecs: 6
        revokeMode: 1
        parameterized: true
        name: name
        grantTrigger:
          subject: subject
          domain: domain
          action: action
          conditions:
          - statvalue: ""
          - statvalue: ""
        groupSymbols:
        - groupSymbols
        - groupSymbols
      properties:
        description:
          type: string
        maxGrants:
          type: integer
        groupSymbols:
          items:
            type: string
          type: array
        transferable:
          type: boolean
        name:
          type: string
        claimTrigger:
          $ref: '#/components/schemas/StateChangeTrigger'
        image:
          type: string
        grantTrigger:
          $ref: '#/components/schemas/StateChangeTrigger'
        terminalExpirationSecs:
          type: integer
        symbol:
          type: string
        revokeMode:
          type: integer
        replaces:
          type: string
        created:
          type: integer
        parameterized:
          type: boolean
      required:
      - created
      - maxGrants
      - revokeMode
      - transferable
      type: object
    EntitlementResponse:
      example:
        state: state
        uuid: uuid
        status: status
      properties:
        status:
          type: string
        uuid:
          type: string
        state:
          type: string
      title: Entitlement Response
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadEntitlementDefinitionRequest:
      example:
        entitlements:
        - symbol: symbol
          request:
            image: image
            claimTrigger:
              subject: subject
              domain: domain
              action: action
              conditions:
              - statvalue: ""
              - statvalue: ""
            revokeMode: 1
            parameterized: true
            maxGrants: 0
            replaces: replaces
            transferable: true
            name: name
            description: description
            terminalExpirationSecs: 6
            grantTrigger:
              subject: subject
              domain: domain
              action: action
              conditions:
              - statvalue: ""
              - statvalue: ""
            groupSymbols:
            - groupSymbols
            - groupSymbols
        - symbol: symbol
          request:
            image: image
            claimTrigger:
              subject: subject
              domain: domain
              action: action
              conditions:
              - statvalue: ""
              - statvalue: ""
            revokeMode: 1
            parameterized: true
            maxGrants: 0
            replaces: replaces
            transferable: true
            name: name
            description: description
            terminalExpirationSecs: 6
            grantTrigger:
              subject: subject
              domain: domain
              action: action
              conditions:
              - statvalue: ""
              - statvalue: ""
            groupSymbols:
            - groupSymbols
            - groupSymbols
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/ModifyEntitlementDefinitionRequest'
          type: array
      title: Upload Entitlement Definition Request
      type: object
    StateChangeCondition:
      example:
        statvalue: ""
      properties:
        statvalue: {}
      type: object
    EntitlementDefRequest:
      example:
        image: image
        claimTrigger:
          subject: subject
          domain: domain
          action: action
          conditions:
          - statvalue: ""
          - statvalue: ""
        revokeMode: 1
        parameterized: true
        maxGrants: 0
        replaces: replaces
        transferable: true
        name: name
        description: description
        terminalExpirationSecs: 6
        grantTrigger:
          subject: subject
          domain: domain
          action: action
          conditions:
          - statvalue: ""
          - statvalue: ""
        groupSymbols:
        - groupSymbols
        - groupSymbols
      properties:
        description:
          type: string
        maxGrants:
          type: integer
        groupSymbols:
          items:
            type: string
          type: array
        transferable:
          type: boolean
        name:
          type: string
        claimTrigger:
          $ref: '#/components/schemas/StateChangeTriggerDef'
        image:
          type: string
        grantTrigger:
          $ref: '#/components/schemas/StateChangeTriggerDef'
        terminalExpirationSecs:
          type: integer
        revokeMode:
          type: integer
        replaces:
          type: string
        parameterized:
          type: boolean
      type: object
    EntitlementListResponse:
      example:
        entitlements:
        - gamerTag: 6
          specialized: specialized
          symbol: symbol
          cwinSecsTillClose: 5
          cwin:
            close: 1
            open: 1
          history:
          - history
          - history
          state: state
          cwinSecsTillOpen: 0
          uuid: uuid
          updated: 1
          ttl: 5
        - gamerTag: 6
          specialized: specialized
          symbol: symbol
          cwinSecsTillClose: 5
          cwin:
            close: 1
            open: 1
          history:
          - history
          - history
          state: state
          cwinSecsTillOpen: 0
          uuid: uuid
          updated: 1
          ttl: 5
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/Entitlement'
          type: array
      title: Entitlement List Response
      type: object
      x-konfig-is-used-in-successful-response: true
    StateChangeTriggerDef:
      example:
        subject: subject
        domain: domain
        action: action
        conditions:
        - statvalue: ""
        - statvalue: ""
      properties:
        domain:
          type: string
        subject:
          type: string
        action:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/StateChangeCondition'
          type: array
      type: object
    GetEntitlementDefinitionsRequest:
      properties:
        symbol:
          type: string
      title: Get Entitlement Definitions Request
      type: object
    StateChangeTrigger:
      example:
        subject: subject
        domain: domain
        action: action
        conditions:
        - statvalue: ""
        - statvalue: ""
      properties:
        domain:
          type: string
        subject:
          type: string
        action:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/StateChangeCondition'
          type: array
      type: object
    EntitlementDefinitions:
      example:
        definitions:
        - image: image
          symbol: symbol
          claimTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          maxGrants: 0
          replaces: replaces
          created: 5
          transferable: true
          description: description
          terminalExpirationSecs: 6
          revokeMode: 1
          parameterized: true
          name: name
          grantTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          groupSymbols:
          - groupSymbols
          - groupSymbols
        - image: image
          symbol: symbol
          claimTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          maxGrants: 0
          replaces: replaces
          created: 5
          transferable: true
          description: description
          terminalExpirationSecs: 6
          revokeMode: 1
          parameterized: true
          name: name
          grantTrigger:
            subject: subject
            domain: domain
            action: action
            conditions:
            - statvalue: ""
            - statvalue: ""
          groupSymbols:
          - groupSymbols
          - groupSymbols
      properties:
        definitions:
          items:
            $ref: '#/components/schemas/EntitlementDefinition'
          type: array
      title: Entitlement Definitions
      type: object
      x-konfig-is-used-in-successful-response: true
    Entitlement:
      example:
        gamerTag: 6
        specialized: specialized
        symbol: symbol
        cwinSecsTillClose: 5
        cwin:
          close: 1
          open: 1
        history:
        - history
        - history
        state: state
        cwinSecsTillOpen: 0
        uuid: uuid
        updated: 1
        ttl: 5
      properties:
        cwinSecsTillOpen:
          type: integer
        history:
          items:
            type: string
          type: array
        state:
          type: string
        gamerTag:
          type: integer
        uuid:
          type: string
        cwin:
          $ref: '#/components/schemas/EntitlementClaimWindow'
        symbol:
          type: string
        specialized:
          type: string
        updated:
          type: integer
        cwinSecsTillClose:
          type: integer
        ttl:
          format: utc-millisec
          type: integer
      required:
      - gamerTag
      - updated
      type: object
    ClaimEntitlementRequest:
      example:
        symbol: symbol
        gt: 0
        uuid: uuid
        spec: spec
      properties:
        gt:
          type: integer
        symbol:
          type: string
        spec:
          type: string
        uuid:
          type: string
      required:
      - gt
      title: Claim Entitlement Request
      type: object
    CreateMessageCampaignRequest:
      example:
        msg: msg
        resend_to_past_recipients: true
        subject: subject
        mb_expiration: mb_expiration
        start: start
        rules:
        - rules
        - rules
        sent: 6
        mb_ent_spec: mb_ent_spec
        mb_ent: mb_ent
        mtype: mtype
        mb_attachments:
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        - symbol: symbol
          quantity: 5
          specialization: specialization
          action: action
          target: 2
        mb_ent_quant: 0
        name: name
        recur: recur
        days: days
        datepoint: datepoint
        mb_store: mb_store
      properties:
        mtype:
          type: string
        mb_store:
          type: string
        mb_expiration:
          type: string
        name:
          type: string
        subject:
          type: string
        mb_ent_spec:
          type: string
        mb_ent_quant:
          type: integer
        resend_to_past_recipients:
          type: boolean
        datepoint:
          type: string
        mb_attachments:
          items:
            $ref: '#/components/schemas/AttachmentRequest'
          type: array
        recur:
          type: string
        sent:
          type: integer
        msg:
          type: string
        rules:
          items:
            type: string
          type: array
        mb_ent:
          type: string
        start:
          type: string
        days:
          type: string
      required:
      - resend_to_past_recipients
      - sent
      title: Create Message Campaign Request
      type: object
    RescheduleMessageCampaignRequest:
      example:
        startDate: startDate
        sid: sid
      properties:
        sid:
          type: string
        startDate:
          type: string
      title: Reschedule Message Campaign Request
      type: object
    GetCloudStorageResponse:
      example:
        data:
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/CloudStorage'
          type: array
      title: Get Cloud Storage Response
      type: object
      x-konfig-is-used-in-successful-response: true
    EjectMessageCampaignRequest:
      example:
        sid: sid
      properties:
        sid:
          type: string
      title: Eject Message Campaign Request
      type: object
    GetCampaignsResponse:
      example:
        campaigns:
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
        - ref: ref
          data: ""
          added: 1
          stype: 5
          retrieved: 6
          expiration: 2
          version: 0
          updated: 5
          gt: 7
          uniqueIdentifier: uniqueIdentifier
          sid: 9
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/CloudStorage'
          type: array
      title: Get Campaigns Response
      type: object
      x-konfig-is-used-in-successful-response: true
    DeleteRequest:
      example:
        id: 0
      properties:
        id:
          type: integer
      required:
      - id
      title: Delete Request
      type: object
    CreateMessageTemplateRequest:
      example:
        msg: msg
        name: name
      properties:
        name:
          type: string
        msg:
          type: string
      title: Create Message Template Request
      type: object
    PvpRewardDefinition:
      example:
        tiers:
        - percentage: 5
          bundleSymbol: bundleSymbol
        - percentage: 5
          bundleSymbol: bundleSymbol
        rewardExpHours: 2
        playerCap: 5
      properties:
        playerCap:
          type: integer
        tiers:
          items:
            $ref: '#/components/schemas/PvpRewardTier'
          type: array
        rewardExpHours:
          type: integer
      type: object
    PvpRewardTier:
      example:
        percentage: 5
        bundleSymbol: bundleSymbol
      properties:
        percentage:
          type: integer
        bundleSymbol:
          type: string
      required:
      - percentage
      type: object
    PvpRequest:
      example:
        lbid: lbid
      properties:
        lbid:
          type: string
      title: Pvp Request
      type: object
    PvpDefinition:
      example:
        nextReward: 0
        cron: cron
        rewardDefinition:
          tiers:
          - percentage: 5
            bundleSymbol: bundleSymbol
          - percentage: 5
            bundleSymbol: bundleSymbol
          rewardExpHours: 2
          playerCap: 5
        lbid: lbid
        protectedRanks: 7
        minPlayers: 9
        description: description
        state: 6
        idleDays: 1
      properties:
        description:
          type: string
        nextReward:
          type: integer
        lbid:
          type: string
        state:
          type: integer
        idleDays:
          type: integer
        cron:
          type: string
        rewardDefinition:
          $ref: '#/components/schemas/PvpRewardDefinition'
        protectedRanks:
          type: integer
        minPlayers:
          type: integer
      required:
      - state
      type: object
    PvpDefinitions:
      example:
        definitions:
        - nextReward: 0
          cron: cron
          rewardDefinition:
            tiers:
            - percentage: 5
              bundleSymbol: bundleSymbol
            - percentage: 5
              bundleSymbol: bundleSymbol
            rewardExpHours: 2
            playerCap: 5
          lbid: lbid
          protectedRanks: 7
          minPlayers: 9
          description: description
          state: 6
          idleDays: 1
        - nextReward: 0
          cron: cron
          rewardDefinition:
            tiers:
            - percentage: 5
              bundleSymbol: bundleSymbol
            - percentage: 5
              bundleSymbol: bundleSymbol
            rewardExpHours: 2
            playerCap: 5
          lbid: lbid
          protectedRanks: 7
          minPlayers: 9
          description: description
          state: 6
          idleDays: 1
      properties:
        definitions:
          items:
            $ref: '#/components/schemas/PvpDefinition'
          type: array
      title: Pvp Definitions
      type: object
      x-konfig-is-used-in-successful-response: true
    ShardDeleteRequest:
      example:
        shardId: shardId
      properties:
        shardId:
          type: string
      title: Shard Delete Request
      type: object
    MetadataUpdate:
      example:
        add:
          key: ""
        set:
          key: ""
      properties:
        set:
          additionalProperties: true
          type: object
        add:
          additionalProperties: true
          type: object
      type: object
    ShardResponse:
      example:
        result: result
        shard:
          metadata:
            key: ""
          shardId: shardId
          uri: uri
      properties:
        result:
          type: string
        shard:
          $ref: '#/components/schemas/ShardDef'
      title: Shard Response
      type: object
      x-konfig-is-used-in-successful-response: true
    ShardDef:
      example:
        metadata:
          key: ""
        shardId: shardId
        uri: uri
      properties:
        shardId:
          type: string
        uri:
          type: string
        metadata:
          additionalProperties: true
          type: object
      type: object
    ShardListResponse:
      example:
        result: result
        shards:
        - metadata:
            key: ""
          shardId: shardId
          uri: uri
        - metadata:
            key: ""
          shardId: shardId
          uri: uri
      properties:
        result:
          type: string
        shards:
          items:
            $ref: '#/components/schemas/ShardDef'
          type: array
      title: Shard List Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetPreferredRequest:
      properties:
        preference:
          type: string
      title: Get Preferred Request
      type: object
    ShardUpdateRequest:
      example:
        metadata:
          add:
            key: ""
          set:
            key: ""
        shardId: shardId
        uri: uri
      properties:
        shardId:
          type: string
        uri:
          type: string
        metadata:
          $ref: '#/components/schemas/MetadataUpdate'
      title: Shard Update Request
      type: object
    GetNamespacesResponse:
      example:
        namespaces:
        - namespaces
        - namespaces
      properties:
        namespaces:
          items:
            type: string
          type: array
      required:
      - namespaces
      title: Get Namespaces Response
      type: object
      x-konfig-is-used-in-successful-response: true
    MicroserviceStateTotals:
      example:
        min: 0
        avg: 1.4658129805029452
        last: 5
        max: 6
      properties:
        min:
          format: int32
          type: integer
        max:
          format: int32
          type: integer
        avg:
          format: double
          type: number
        last:
          format: int32
          type: integer
      required:
      - avg
      - last
      - max
      - min
      type: object
    MicroserviceStateDetail:
      example:
        runninginstances: 5
        servicename: servicename
      properties:
        servicename:
          type: string
        runninginstances:
          format: int32
          type: integer
      required:
      - runninginstances
      - servicename
      type: object
    AccessLogServices:
      example:
        name: name
        requests:
          aggregates:
            min: 6
            avg: 5.962133916683182
            max: 1
            sum: 0
          details:
          - date: 5
            count: 2
          - date: 5
            count: 2
      properties:
        name:
          type: string
        requests:
          $ref: '#/components/schemas/AccessLogServiceDetails'
      required:
      - name
      - requests
      type: object
    MicroserviceStatePoints:
      example:
        services:
        - runninginstances: 5
          servicename: servicename
        - runninginstances: 5
          servicename: servicename
        timestamp: 2
      properties:
        services:
          items:
            $ref: '#/components/schemas/MicroserviceStateDetail'
          type: array
        timestamp:
          format: int64
          type: integer
      required:
      - services
      - timestamp
      type: object
    GetAccessLogRequest:
      properties:
        from:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
        to:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
      required:
      - from
      - to
      title: Get Access Log Request
      type: object
    AccessLogResultView:
      example:
        date: 5
        count: 2
      properties:
        date:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
        count:
          format: int64
          type: integer
      required:
      - count
      - date
      type: object
    AccessLogAggregates:
      example:
        min: 6
        avg: 5.962133916683182
        max: 1
        sum: 0
      properties:
        sum:
          format: int64
          type: integer
        min:
          format: int64
          type: integer
        max:
          format: int64
          type: integer
        avg:
          format: double
          type: number
      required:
      - avg
      - max
      - min
      - sum
      type: object
    QueryRequest:
      example:
        query: query
      properties:
        query:
          type: string
      required:
      - query
      title: Query Request
      type: object
    AdminUserRolesView:
      example:
        roles:
        - name: name
          accounts: 0
        - name: name
          accounts: 0
      properties:
        roles:
          items:
            $ref: '#/components/schemas/RoleCountView'
          type: array
      required:
      - roles
      title: Admin User Roles View
      type: object
      x-konfig-is-used-in-successful-response: true
    RoleCountView:
      example:
        name: name
        accounts: 0
      properties:
        name:
          type: string
        accounts:
          format: int32
          type: integer
      required:
      - accounts
      - name
      type: object
    AccessLogServiceDetails:
      example:
        aggregates:
          min: 6
          avg: 5.962133916683182
          max: 1
          sum: 0
        details:
        - date: 5
          count: 2
        - date: 5
          count: 2
      properties:
        aggregates:
          $ref: '#/components/schemas/AccessLogAggregates'
        details:
          items:
            $ref: '#/components/schemas/AccessLogResultView'
          type: array
      required:
      - aggregates
      - details
      type: object
    GetAccessLogUrlRequest:
      properties:
        from:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
        to:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
        customerScoped:
          type: boolean
      required:
      - from
      - to
      title: Get Access Log Url Request
      type: object
    GetAccessLogResponse:
      example:
        aggregates:
          min: 6
          avg: 5.962133916683182
          max: 1
          sum: 0
        services:
        - name: name
          requests:
            aggregates:
              min: 6
              avg: 5.962133916683182
              max: 1
              sum: 0
            details:
            - date: 5
              count: 2
            - date: 5
              count: 2
        - name: name
          requests:
            aggregates:
              min: 6
              avg: 5.962133916683182
              max: 1
              sum: 0
            details:
            - date: 5
              count: 2
            - date: 5
              count: 2
      properties:
        aggregates:
          $ref: '#/components/schemas/AccessLogAggregates'
        services:
          items:
            $ref: '#/components/schemas/AccessLogServices'
          type: array
      required:
      - aggregates
      - services
      title: Get Access Log Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetMicroservicesResponse:
      example:
        runningInstanceAggregates:
          min: 0
          avg: 1.4658129805029452
          last: 5
          max: 6
        dataPoints:
        - services:
          - runninginstances: 5
            servicename: servicename
          - runninginstances: 5
            servicename: servicename
          timestamp: 2
        - services:
          - runninginstances: 5
            servicename: servicename
          - runninginstances: 5
            servicename: servicename
          timestamp: 2
        serviceAggregates:
          min: 0
          avg: 1.4658129805029452
          last: 5
          max: 6
      properties:
        serviceAggregates:
          $ref: '#/components/schemas/MicroserviceStateTotals'
        runningInstanceAggregates:
          $ref: '#/components/schemas/MicroserviceStateTotals'
        dataPoints:
          items:
            $ref: '#/components/schemas/MicroserviceStatePoints'
          type: array
      title: Get Microservices Response
      type: object
      x-konfig-is-used-in-successful-response: true
    QueryResponse:
      example:
        results:
        - results
        - results
      properties:
        results:
          items:
            type: string
          type: array
      required:
      - results
      title: Query Response
      type: object
      x-konfig-is-used-in-successful-response: true
    QueryUrlResponse:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      title: Query Url Response
      type: object
      x-konfig-is-used-in-successful-response: true
    GetMicroservicesRequest:
      properties:
        from:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
        to:
          description: "Milliseconds since midnight, January 1, 1970 UTC"
          format: int64
          type: integer
          x-beamable-date-format: unix
      required:
      - from
      - to
      title: Get Microservices Request
      type: object
    konfig-generated-schema-single-parameter-schema-get--basic-trials-admin-data:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--basic-trials-data:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-trials-data:
      properties:
        trialName:
          type: string
        cohortName:
          type: string
        dataName:
          type: string
        filePayloadBase64:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-trials-pause:
      properties:
        name:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-trials-schedule:
      properties:
        name:
          type: string
        time:
          type: integer
      required:
      - time
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-trials-admin:
      properties:
        dbid:
          type: integer
      required:
      - dbid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dbid
    konfig-generated-schema-single-parameter-schema-put--basic-trials-start:
      properties:
        name:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-accounts-me-device:
      properties:
        deviceIds:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-me:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-accounts-me:
      properties:
        thirdParty:
          type: string
        hasThirdPartyToken:
          type: boolean
        country:
          type: string
        language:
          type: string
        gamerTagAssoc:
          $ref: '#/components/schemas/GamerTagAssociation'
        token:
          type: string
        deviceId:
          type: string
        userName:
          type: string
      required:
      - hasThirdPartyToken
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-accounts-me-third-party:
      properties:
        thirdParty:
          type: string
        token:
          type: string
      required:
      - thirdParty
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-get-personally-identifiable-information:
      properties:
        query:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-search:
      properties:
        query:
          type: string
        page:
          format: int32
          type: integer
        pagesize:
          format: int32
          type: integer
      required:
      - page
      - pagesize
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - page
      - pagesize
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-email-update-init:
      properties:
        newEmail:
          type: string
        codeType:
          type: string
      required:
      - newEmail
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-email-update-confirm:
      properties:
        code:
          type: string
        password:
          type: string
      required:
      - code
      - password
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-available-third-party:
      properties:
        thirdParty:
          type: string
        token:
          type: string
      required:
      - thirdParty
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - thirdParty
      - token
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-admin-admin-user:
      properties:
        email:
          type: string
        role:
          type: string
      required:
      - email
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-register:
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-admin-me:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-password-update-init:
      properties:
        email:
          type: string
        codeType:
          type: string
      required:
      - email
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-admin-admin-users:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-find:
      properties:
        query:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-available-device-id:
      properties:
        deviceId:
          type: string
      required:
      - deviceId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - deviceId
    konfig-generated-schema-single-parameter-schema-get--basic-accounts-available:
      properties:
        email:
          type: string
      required:
      - email
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - email
    konfig-generated-schema-single-parameter-schema-post--basic-accounts-password-update-confirm:
      properties:
        code:
          type: string
        newPassword:
          type: string
        email:
          type: string
      required:
      - code
      - newPassword
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-email:
      properties:
        objectId:
          type: string
        newEmail:
          type: string
        codeType:
          type: string
      required:
      - newEmail
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-accounts-objectId-available-roles:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-role:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-role:
      properties:
        objectId:
          type: string
        cid:
          type: string
        realm:
          type: string
        role:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-scope:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-scope:
      properties:
        objectId:
          type: string
        cid:
          type: string
        realm:
          type: string
        role:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-third-party:
      properties:
        objectId:
          type: string
        thirdParty:
          type: string
        userAppId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-accounts-objectId-admin-third-party:
      properties:
        objectId:
          type: string
        fromAccountId:
          type: integer
        thirdParty:
          $ref: '#/components/schemas/ThirdPartyAssociation'
      required:
      - fromAccountId
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-accounts-objectId-admin-forget:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-announcements-search:
      properties:
        date:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - date
    konfig-generated-schema-single-parameter-schema-get--basic-announcements-content:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-announcements-list:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--object-announcements-objectId-read:
      properties:
        objectId:
          type: string
        announcement:
          type: string
        announcements:
          items:
            type: string
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-announcements-objectId-claim:
      properties:
        objectId:
          type: string
        announcement:
          type: string
        announcements:
          items:
            type: string
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-announcements-objectId-raw:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-auth-token:
      properties:
        token:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
    konfig-generated-schema-single-parameter-schema-post--basic-auth-token:
      properties:
        username:
          type: string
        scope:
          items:
            type: string
          type: array
        refresh_token:
          type: string
        third_party:
          type: string
        redirect_uri:
          type: string
        client_id:
          type: string
        code:
          type: string
        token:
          type: string
        customerScoped:
          type: boolean
        grant_type:
          type: string
        password:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--object-calendars-objectId-claim:
      properties:
        objectId:
          type: string
        id:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-chatV2-objectId-rooms:
      properties:
        objectId:
          type: string
        roomId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-chatV2-objectId-rooms:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-chatV2-objectId-rooms:
      properties:
        objectId:
          type: string
        roomName:
          type: string
        keepSubscribed:
          type: boolean
        players:
          items:
            type: integer
          type: array
        gameType:
          type: string
        dbids:
          items:
            type: integer
          type: array
      required:
      - keepSubscribed
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-chatV2-objectId-messages:
      properties:
        objectId:
          type: string
        roomId:
          type: string
        content:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-replace:
      properties:
        sourcePlayerId:
          type: integer
        targetPlayerId:
          type: integer
      required:
      - sourcePlayerId
      - targetPlayerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-cloudsaving-data:
      properties:
        request:
          items:
            $ref: '#/components/schemas/ObjectRequest'
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-downloadURL:
      properties:
        request:
          items:
            $ref: '#/components/schemas/ObjectRequest'
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-cloudsaving-data-metadata:
      properties:
        request:
          items:
            description: "WARNING: Missing items property in array schema. Missing\
              \ items property has been filled with this AnyType schema."
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - request
      - playerId
    konfig-generated-schema-single-parameter-schema-put--basic-cloudsaving-data-move:
      properties:
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-uploadURLFromPortal:
      properties:
        request:
          items:
            $ref: '#/components/schemas/UploadRequestFromPortal'
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-cloudsaving-data-commitManifest:
      properties:
        request:
          items:
            $ref: '#/components/schemas/UploadRequest'
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-cloudsaving-data-uploadURL:
      properties:
        request:
          items:
            $ref: '#/components/schemas/UploadRequest'
          type: array
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-commerce-catalog:
      properties:
        version:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - version
    konfig-generated-schema-single-parameter-schema-get--basic-commerce-skus:
      properties:
        version:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - version
    konfig-generated-schema-single-parameter-schema-post--basic-commerce-skus:
      properties:
        definitions:
          items:
            $ref: '#/components/schemas/SKU'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-coupons-count:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-offersAdmin:
      properties:
        language:
          type: string
        time:
          type: string
        stores:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
      - time
      - stores
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-purchase:
      properties:
        objectId:
          type: string
        purchaseId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-commerce-objectId-purchase:
      properties:
        objectId:
          type: string
        listingId:
          type: string
        free:
          type: boolean
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-listings:
      properties:
        listing:
          type: string
        store:
          type: string
        time:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - listing
      - store
      - time
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-commerce-objectId-status:
      properties:
        objectId:
          type: string
        store:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-coupons:
      properties:
        objectId:
          type: string
        listing:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-commerce-objectId-stats-update:
      properties:
        objectId:
          type: string
        statsBefore:
          additionalProperties: true
          type: object
        statsAfter:
          additionalProperties: true
          type: object
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId-offers:
      properties:
        language:
          type: string
        time:
          type: string
        stores:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - language
      - time
      - stores
      - objectId
    konfig-generated-schema-single-parameter-schema-post--basic-content-manifest-pull:
      properties:
        sourceRealmPid:
          type: string
        id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-content-content:
      properties:
        contentId:
          type: string
        version:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contentId
      - version
    konfig-generated-schema-single-parameter-schema-post--basic-content-text:
      properties:
        text:
          items:
            $ref: '#/components/schemas/TextDefinition'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-content-manifest:
      properties:
        id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--basic-content-manifest:
      properties:
        id:
          type: string
        references:
          items:
            $ref: '#/components/schemas/ReferenceSuperset'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-public:
      properties:
        id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-private:
      properties:
        id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--basic-content-manifest-checksum:
      properties:
        id:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--basic-events-content:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-events-calendar:
      properties:
        from:
          type: string
        to:
          type: string
        query:
          type: string
        limit:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
      - query
      - limit
    konfig-generated-schema-single-parameter-schema-post--basic-events-applyContent:
      properties:
        content:
          $ref: '#/components/schemas/Event'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-events-running:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--object-events-objectId-endPhase:
      properties:
        objectId:
          type: string
        time:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-events-objectId-ping:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-events-objectId-content:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-events-objectId-content:
      properties:
        objectId:
          type: string
        event:
          $ref: '#/components/schemas/Event'
        origin:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-events-objectId-refresh:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-event-players-objectId-claim:
      properties:
        objectId:
          type: string
        eventId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-event-players-objectId-score:
      properties:
        objectId:
          type: string
        eventId:
          type: string
        score:
          type: number
        increment:
          type: boolean
        stats:
          additionalProperties: true
          type: object
      required:
      - objectId
      - score
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId-sync:
      properties:
        objectId:
          type: string
        t:
          type: integer
        events:
          items:
            $ref: '#/components/schemas/SimEvent'
          type: array
      required:
      - objectId
      - t
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId-results:
      properties:
        objectId:
          type: string
        results:
          items:
            $ref: '#/components/schemas/PlayerResult'
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId-preview:
      properties:
        objectId:
          type: string
        currencies:
          additionalProperties:
            format: int64
            type: integer
          type: object
        empty:
          type: boolean
        currencyProperties:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CurrencyProperty'
            type: array
          type: object
        currencyContentIds:
          items:
            type: string
          type: array
        applyVipBonus:
          type: boolean
        itemContentIds:
          items:
            type: string
          type: array
        updateItems:
          items:
            $ref: '#/components/schemas/ItemUpdateRequest'
          type: array
        newItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        transaction:
          type: string
        deleteItems:
          items:
            $ref: '#/components/schemas/ItemDeleteRequest'
          type: array
      required:
      - currencyContentIds
      - empty
      - itemContentIds
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-inventory-objectId-multipliers:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-inventory-objectId-transaction:
      properties:
        objectId:
          type: string
        transaction:
          type: string
      required:
      - objectId
      - transaction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId-transfer:
      properties:
        objectId:
          type: string
        transaction:
          type: string
        recipientPlayer:
          format: int64
          type: integer
        currencies:
          additionalProperties:
            format: int64
            type: integer
          type: object
      required:
      - objectId
      - recipientPlayer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-inventory-items:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-inventory-currency:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-list:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - skip
      - limit
    konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-player:
      properties:
        dbid:
          format: int64
          type: integer
      required:
      - dbid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dbid
    konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-assignment:
      properties:
        boardId:
          type: string
        joinBoard:
          type: boolean
      required:
      - boardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - boardId
      - joinBoard
    konfig-generated-schema-single-parameter-schema-get--basic-leaderboards-uid:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-entries:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-membership:
      properties:
        playerId:
          type: integer
        objectId:
          type: string
      required:
      - objectId
      - playerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playerId
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-ranks:
      properties:
        ids:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ids
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-partition:
      properties:
        playerId:
          type: integer
        objectId:
          type: string
      required:
      - objectId
      - playerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playerId
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-matches:
      properties:
        poolSize:
          type: integer
        windows:
          type: integer
        windowSize:
          type: integer
        objectId:
          type: string
      required:
      - objectId
      - poolSize
      - windowSize
      - windows
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - poolSize
      - windows
      - windowSize
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-assignment:
      properties:
        objectId:
          type: string
        playerId:
          type: integer
      required:
      - objectId
      - playerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId-entry:
      properties:
        objectId:
          type: string
        id:
          type: integer
      required:
      - id
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-entry:
      properties:
        objectId:
          type: string
        maxScore:
          type: number
        stats:
          additionalProperties: true
          type: object
        score:
          type: number
        minScore:
          type: number
        id:
          type: integer
        increment:
          type: boolean
      required:
      - id
      - objectId
      - score
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-freeze:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-details:
      properties:
        from:
          type: integer
        max:
          type: integer
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - max
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-leaderboards-objectId-view:
      properties:
        max:
          type: integer
        focus:
          type: integer
        friends:
          type: boolean
        from:
          type: integer
        outlier:
          type: integer
        guild:
          type: boolean
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - max
      - focus
      - friends
      - from
      - outlier
      - guild
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-leaderboards-objectId-swap:
      properties:
        objectId:
          type: string
        winnerId:
          type: integer
        loserId:
          type: integer
        swapBase:
          type: integer
        delta:
          type: integer
      required:
      - delta
      - objectId
      - swapBase
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-groups-search:
      properties:
        name:
          type: string
        scoreMin:
          type: integer
        sortField:
          type: string
        userScore:
          type: integer
        hasSlots:
          type: boolean
        enrollmentTypes:
          type: string
        offset:
          type: integer
        scoreMax:
          type: integer
        subGroup:
          type: boolean
        sortValue:
          type: integer
        type:
          type: string
        limit:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
      - scoreMin
      - sortField
      - userScore
      - hasSlots
      - enrollmentTypes
      - offset
      - scoreMax
      - subGroup
      - sortValue
      - type
      - limit
    konfig-generated-schema-single-parameter-schema-put--object-groups-objectId-role:
      properties:
        objectId:
          type: string
        gamerTag:
          type: integer
        role:
          type: string
        subGroup:
          type: integer
      required:
      - gamerTag
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-kick:
      properties:
        objectId:
          type: string
        gamerTag:
          type: integer
        subGroup:
          type: integer
      required:
      - gamerTag
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-apply:
      properties:
        objectId:
          type: string
        subGroup:
          type: integer
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-donations:
      properties:
        objectId:
          type: string
        currencyId:
          type: string
        amount:
          type: integer
        config:
          type: string
      required:
      - amount
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-groups-objectId-donations:
      properties:
        objectId:
          type: string
        recipientId:
          type: integer
        amount:
          type: integer
      required:
      - amount
      - objectId
      - recipientId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-groups-objectId-member:
      properties:
        objectId:
          type: string
        gamerTag:
          type: integer
        subGroup:
          type: integer
      required:
      - gamerTag
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-invite:
      properties:
        objectId:
          type: string
        gamerTag:
          type: integer
        subGroup:
          type: integer
      required:
      - gamerTag
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-groups-objectId-petition:
      properties:
        objectId:
          type: string
        subGroup:
          type: integer
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-availability:
      properties:
        name:
          type: string
        tag:
          type: string
        type:
          type: string
        subGroup:
          type: boolean
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
      - tag
      - type
      - subGroup
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-recommended:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-group-users-objectId-join:
      properties:
        objectId:
          type: string
        successor:
          type: integer
        score:
          type: integer
        subGroup:
          type: integer
        type:
          enum:
          - not-available
          type: string
        group:
          type: integer
      required:
      - group
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-group-users-objectId-join:
      properties:
        objectId:
          type: string
        successor:
          type: integer
        score:
          type: integer
        subGroup:
          type: integer
        type:
          enum:
          - not-available
          type: string
        group:
          type: integer
      required:
      - group
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-group-users-objectId-group:
      properties:
        objectId:
          type: string
        name:
          type: string
        enrollmentType:
          type: string
        tag:
          type: string
        requirement:
          type: integer
        clientData:
          type: string
        scores:
          items:
            $ref: '#/components/schemas/GroupScoreBinding'
          type: array
        time:
          format: utc-millisec
          type: integer
        type:
          enum:
          - not-available
          type: string
        maxSize:
          type: integer
        group:
          type: integer
      required:
      - maxSize
      - objectId
      - requirement
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId-search:
      properties:
        name:
          type: string
        scoreMin:
          type: integer
        sortField:
          type: string
        userScore:
          type: integer
        hasSlots:
          type: boolean
        enrollmentTypes:
          type: string
        offset:
          type: integer
        scoreMax:
          type: integer
        subGroup:
          type: boolean
        sortValue:
          type: integer
        type:
          type: string
        limit:
          type: integer
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
      - scoreMin
      - sortField
      - userScore
      - hasSlots
      - enrollmentTypes
      - offset
      - scoreMax
      - subGroup
      - sortValue
      - type
      - limit
      - objectId
    konfig-generated-schema-single-parameter-schema-put--basic-mail-attachments:
      properties:
        mailIds:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-mail-template:
      properties:
        templateName:
          type: string
        gamerTag:
          type: integer
      required:
      - gamerTag
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - templateName
      - gamerTag
    konfig-generated-schema-single-parameter-schema-post--basic-mail-bulk:
      properties:
        sendMailRequests:
          items:
            $ref: '#/components/schemas/SendMailRequest'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--object-mail-objectId-detail:
      properties:
        mid:
          type: integer
        objectId:
          type: string
      required:
      - mid
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - mid
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-mail-objectId-categories:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-mail-objectId-search:
      properties:
        objectId:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/MailSearchClause'
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-mail-objectId-bulk:
      properties:
        objectId:
          type: string
        sendMailRequests:
          items:
            $ref: '#/components/schemas/SendMailRequest'
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-mail-objectId-bulk:
      properties:
        objectId:
          type: string
        updateMailRequests:
          items:
            $ref: '#/components/schemas/MyMailUpdate'
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-mail-objectId-accept-many:
      properties:
        objectId:
          type: string
        mailIds:
          items:
            type: integer
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-matchmaking-objectId-tick:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-matchmaking-objectId-match:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-matchmaking-objectId-match:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-matchmaking-objectId-match:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-audits:
      properties:
        providerid:
          type: string
        provider:
          type: string
        state:
          type: string
        txid:
          type: integer
        player:
          type: integer
        start:
          type: integer
        limit:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - providerid
      - provider
      - state
      - txid
      - player
      - start
      - limit
    konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-facebook-update:
      properties:
        hubMode:
          type: string
        hubChallenge:
          type: string
        hubVerifyToken:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - hubMode
      - hubChallenge
      - hubVerifyToken
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-update:
      properties:
        object:
          type: string
        entry:
          items:
            $ref: '#/components/schemas/FacebookUpdatedEntry'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-itunes-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-prices:
      properties:
        steamId:
          type: integer
      required:
      - steamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - steamId
    konfig-generated-schema-single-parameter-schema-post--basic-payments-test-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-facebook-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-order:
      properties:
        orderId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - orderId
    konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-windows-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-facebook-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-googleplay-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-coupon-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-begin:
      properties:
        purchaseId:
          type: string
        language:
          type: string
        time:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-steam-auth:
      properties:
        ticket:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-steam-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-coupon-purchase-complete:
      properties:
        txid:
          type: integer
        receipt:
          type: string
        priceInLocalCurrency:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-googleplay-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-windows-purchase-fail:
      properties:
        txid:
          type: integer
        reason:
          type: string
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-cancel:
      properties:
        txid:
          type: integer
      required:
      - txid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-payments-test-product:
      properties:
        sku:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sku
    konfig-generated-schema-single-parameter-schema-post--basic-payments-itunes-purchase-track:
      properties:
        priceInLocalCurrency:
          type: number
        skuName:
          type: string
        skuProductId:
          type: string
        store:
          type: string
        obtainItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        obtainCurrency:
          items:
            $ref: '#/components/schemas/CurrencyChange'
          type: array
        purchaseId:
          type: string
        isoCurrencySymbol:
          type: string
      required:
      - priceInLocalCurrency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-push-register:
      properties:
        provider:
          type: string
        token:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-push-send:
      properties:
        msgs:
          items:
            $ref: '#/components/schemas/SendMsg'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-realms-project-beamable:
      properties:
        name:
          type: string
        plan:
          type: string
        sharded:
          type: boolean
        parent:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-customer-alias-available:
      properties:
        alias:
          type: string
      required:
      - alias
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - alias
    konfig-generated-schema-single-parameter-schema-delete--basic-realms-project:
      properties:
        pid:
          type: string
      required:
      - pid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-project:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-realms-project:
      properties:
        name:
          type: string
        plan:
          type: string
        sharded:
          type: boolean
        parent:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-realms-project:
      properties:
        projectId:
          type: string
      required:
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-games:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-config:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-realms-config:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      required:
      - config
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-realms-project-rename:
      properties:
        projectId:
          type: string
        newName:
          type: string
      required:
      - newName
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-plans:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-realms-plans:
      properties:
        name:
          type: string
        messageBusAnalytics:
          items:
            type: string
          type: array
        memcachedHosts:
          type: string
        mongoSSL:
          type: boolean
        platformJBDC:
          type: string
        sharded:
          type: boolean
        mongoHosts:
          type: string
        messageBusCommon:
          items:
            type: string
          type: array
        redisShards:
          items:
            $ref: '#/components/schemas/RedisShardRequest'
          type: array
      required:
      - memcachedHosts
      - mongoHosts
      - mongoSSL
      - name
      - platformJBDC
      - redisShards
      - sharded
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-customer:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-realms-customer:
      properties:
        projectName:
          type: string
        email:
          type: string
        customerName:
          type: string
        hierarchy:
          type: boolean
        alias:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - projectName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-realms-launch-message:
      properties:
        file:
          type: string
      required:
      - file
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-launch-message:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-realms-launch-message:
      properties:
        name:
          type: string
        body:
          type: string
      required:
      - body
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-is-customer:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-admin-customer:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-game:
      properties:
        rootPID:
          type: string
      required:
      - rootPID
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - rootPID
    konfig-generated-schema-single-parameter-schema-post--basic-realms-game:
      properties:
        gameName:
          type: string
      required:
      - gameName
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-realms-game:
      properties:
        rootPID:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectView'
          type: array
      required:
      - projects
      - rootPID
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-project-promote:
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            format: blah
            type: string
          type: array
        contentManifestIds:
          items:
            format: blah
            type: string
          type: array
      required:
      - sourcePid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sourcePid
      - promotions
      - contentManifestIds
    konfig-generated-schema-single-parameter-schema-post--basic-realms-project-promote:
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            type: string
          type: array
        contentManifestIds:
          items:
            type: string
          type: array
      required:
      - sourcePid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-customers:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-realms-promotion:
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            format: blah
            type: string
          type: array
        contentManifestIds:
          items:
            format: blah
            type: string
          type: array
      required:
      - sourcePid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sourcePid
      - promotions
      - contentManifestIds
    konfig-generated-schema-single-parameter-schema-post--basic-realms-promotion:
      properties:
        sourcePid:
          type: string
        promotions:
          items:
            type: string
          type: array
        contentManifestIds:
          items:
            type: string
          type: array
      required:
      - sourcePid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-player:
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-global:
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-custom:
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-server:
      properties:
        event:
          type: string
        payload: {}
        toAll:
          type: boolean
      required:
      - toAll
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-generic:
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-notification-game:
      properties:
        payload:
          $ref: '#/components/schemas/NotificationRequestData'
        dbid:
          type: integer
        customChannelSuffix:
          type: string
        dbids:
          items:
            type: integer
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-session-history:
      properties:
        dbid:
          type: integer
        month:
          type: integer
        year:
          type: integer
      required:
      - dbid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dbid
      - month
      - year
    konfig-generated-schema-single-parameter-schema-get--basic-session-status:
      properties:
        playerIds:
          type: string
        intervalSecs:
          type: integer
        playerIdsSeq:
          items:
            description: "WARNING: Missing items property in array schema. Missing\
              \ items property has been filled with this AnyType schema."
          type: array
      required:
      - intervalSecs
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playerIds
      - intervalSecs
      - playerIdsSeq
    konfig-generated-schema-single-parameter-schema-post--basic-session-heartbeat:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-stats-client-batch:
      properties:
        objectIds:
          type: string
        stats:
          type: string
        format:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectIds
      - stats
      - format
    konfig-generated-schema-single-parameter-schema-post--basic-stats-batch:
      properties:
        updates:
          items:
            $ref: '#/components/schemas/StatUpdateRequest'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-stats-search:
      properties:
        domain:
          type: string
        access:
          type: string
        objectType:
          type: string
        criteria:
          items:
            $ref: '#/components/schemas/StatsSearchCriteria'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-stats-subscribe:
      properties:
        service:
          type: string
        subscriptions:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--object-stats-objectId-client-stringlist:
      properties:
        objectId:
          type: string
        set:
          items:
            $ref: '#/components/schemas/StatStringListEntry'
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-stats-objectId-client:
      properties:
        stats:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - stats
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-rewards:
      properties:
        tournamentId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tournamentId
    konfig-generated-schema-single-parameter-schema-post--basic-tournaments-rewards:
      properties:
        tournamentId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-global:
      properties:
        tournamentId:
          type: string
        max:
          type: integer
        focus:
          type: integer
        cycle:
          type: integer
        from:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tournamentId
      - max
      - focus
      - cycle
      - from
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-standings:
      properties:
        tournamentId:
          type: string
        max:
          type: integer
        focus:
          type: integer
        cycle:
          type: integer
        from:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tournamentId
      - max
      - focus
      - cycle
      - from
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-admin-player:
      properties:
        playerId:
          type: integer
        tournamentId:
          type: string
      required:
      - playerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playerId
      - tournamentId
    konfig-generated-schema-single-parameter-schema-put--basic-tournaments-admin-player:
      properties:
        playerId:
          type: integer
        tournamentId:
          type: string
        update:
          $ref: '#/components/schemas/PlayerStatusUpdate'
      required:
      - playerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-me:
      properties:
        tournamentId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tournamentId
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments-champions:
      properties:
        tournamentId:
          type: string
        cycles:
          type: integer
      required:
      - cycles
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tournamentId
      - cycles
    konfig-generated-schema-single-parameter-schema-post--basic-tournaments-score:
      properties:
        tournamentId:
          type: string
        stats:
          additionalProperties: true
          type: object
        score:
          type: number
        playerId:
          type: integer
        increment:
          type: boolean
      required:
      - playerId
      - score
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-social-friends:
      properties:
        playerId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-social-my:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-social-friends-import:
      properties:
        source:
          type: string
        token:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-social-blocked:
      properties:
        playerId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-social-blocked:
      properties:
        playerId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-timers-defs:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-promos-codes:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos-codes:
      properties:
        definitionId:
          type: integer
        codes:
          items:
            type: string
          type: array
        claimsPerCode:
          type: integer
      required:
      - claimsPerCode
      - definitionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos-claim:
      properties:
        code:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs-grant:
      properties:
        gamerTags:
          items:
            type: integer
          type: array
        generators:
          items:
            $ref: '#/components/schemas/EntitlementGenerator'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-entitlement-defs-revoke:
      properties:
        uuid:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs-upload:
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/ModifyEntitlementDefinitionRequest'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-entitlement-defs-player:
      properties:
        state:
          type: string
        skip:
          type: integer
        symbol:
          type: string
        icw:
          type: boolean
        spec:
          type: string
        limit:
          type: integer
        gt:
          type: integer
      required:
      - gt
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - state
      - skip
      - symbol
      - icw
      - spec
      - limit
      - gt
    konfig-generated-schema-single-parameter-schema-put--basic-legacy-entitlement-defs-claim:
      properties:
        gt:
          type: integer
        symbol:
          type: string
        spec:
          type: string
        uuid:
          type: string
      required:
      - gt
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-legacy-cloud-campaigns-schedule:
      properties:
        sid:
          type: string
        startDate:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-cloud-templates:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-cloud-templates:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-cloud-templates:
      properties:
        name:
          type: string
        msg:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-cloud-campaigns:
      properties:
        sid:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-cloud-campaigns:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-cloud-campaigns:
      properties:
        mtype:
          type: string
        mb_store:
          type: string
        mb_expiration:
          type: string
        name:
          type: string
        subject:
          type: string
        mb_ent_spec:
          type: string
        mb_ent_quant:
          type: integer
        resend_to_past_recipients:
          type: boolean
        datepoint:
          type: string
        mb_attachments:
          items:
            $ref: '#/components/schemas/AttachmentRequest'
          type: array
        recur:
          type: string
        sent:
          type: integer
        msg:
          type: string
        rules:
          items:
            type: string
          type: array
        mb_ent:
          type: string
        start:
          type: string
        days:
          type: string
      required:
      - resend_to_past_recipients
      - sent
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-pvp-defs-file:
      properties:
        lbid:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards-accepting:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards-preferred:
      properties:
        preference:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - preference
    konfig-generated-schema-single-parameter-schema-get--basic-history-apiaccess-url:
      properties:
        from:
          format: int64
          type: integer
        to:
          format: int64
          type: integer
        customerScoped:
          type: boolean
      required:
      - from
      - to
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
      - customerScoped
    konfig-generated-schema-single-parameter-schema-post--basic-history-query-url:
      properties:
        query:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-history-query:
      properties:
        query:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-history-microservices:
      properties:
        from:
          format: int64
          type: integer
        to:
          format: int64
          type: integer
      required:
      - from
      - to
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
    konfig-generated-schema-single-parameter-schema-get--basic-history-account-roles:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-history-apiaccess:
      properties:
        from:
          format: int64
          type: integer
        to:
          format: int64
          type: integer
      required:
      - from
      - to
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
    konfig-generated-schema-single-parameter-schema-get--basic-history-events:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-trials:
      properties:
        trialType:
          type: string
        name:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-trials:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-trials:
      properties:
        name:
          type: string
        strat:
          type: string
        cohortType:
          type: string
        cohorts:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-announcements:
      properties:
        symbol:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-announcements:
      properties:
        summary:
          type: string
        title:
          type: string
        body:
          type: string
        channel:
          type: string
        start_date:
          type: string
        gift:
          $ref: '#/components/schemas/PlayerReward'
        mongo_start_date:
          type: integer
        stat_requirements:
          items:
            $ref: '#/components/schemas/PlayerStatRequirement'
          type: array
        mongo_end_date:
          type: integer
        symbol:
          type: string
        clientData:
          additionalProperties: true
          type: object
        validationErrors:
          items:
            type: string
          type: array
        end_date:
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/AnnouncementAttachment'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--object-announcements-objectId:
      properties:
        objectId:
          type: string
        announcement:
          type: string
        announcements:
          items:
            type: string
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-announcements-objectId:
      properties:
        include_deleted:
          type: boolean
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - include_deleted
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-calendars-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-chatV2-objectId:
      properties:
        scope:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - scope
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-cloudsaving:
      properties:
        playerId:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - playerId
    konfig-generated-schema-single-parameter-schema-get--object-commerce-objectId:
      properties:
        scope:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - scope
      - objectId
    konfig-generated-schema-single-parameter-schema-post--basic-content:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ContentDefinition'
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--object-events-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-event-players-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-gamerelay-objectId:
      properties:
        objectId:
          type: string
        roomName:
          type: string
        keepSubscribed:
          type: boolean
        players:
          items:
            type: integer
          type: array
        gameType:
          type: string
        dbids:
          items:
            type: integer
          type: array
      required:
      - keepSubscribed
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-inventory-objectId:
      properties:
        scope:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - scope
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-inventory-objectId:
      properties:
        objectId:
          type: string
        scopes:
          items:
            type: string
          type: array
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-inventory-objectId:
      properties:
        objectId:
          type: string
        currencies:
          additionalProperties:
            format: int64
            type: integer
          type: object
        empty:
          type: boolean
        currencyProperties:
          additionalProperties:
            items:
              $ref: '#/components/schemas/CurrencyProperty'
            type: array
          type: object
        currencyContentIds:
          items:
            type: string
          type: array
        applyVipBonus:
          type: boolean
        itemContentIds:
          items:
            type: string
          type: array
        updateItems:
          items:
            $ref: '#/components/schemas/ItemUpdateRequest'
          type: array
        newItems:
          items:
            $ref: '#/components/schemas/ItemCreateRequest'
          type: array
        transaction:
          type: string
        deleteItems:
          items:
            $ref: '#/components/schemas/ItemDeleteRequest'
          type: array
      required:
      - currencyContentIds
      - empty
      - itemContentIds
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-leaderboards-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-leaderboards-objectId:
      properties:
        objectId:
          type: string
        freezeTime:
          type: integer
        derivatives:
          items:
            type: string
          type: array
        scoreName:
          type: string
        permissions:
          $ref: '#/components/schemas/ClientPermission'
        maxEntries:
          type: integer
        partitioned:
          type: boolean
        sharded:
          type: boolean
        ttl:
          type: integer
      required:
      - objectId
      - sharded
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--object-groups-objectId:
      properties:
        objectId:
          type: string
        subGroup:
          type: integer
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-groups-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-groups-objectId:
      properties:
        objectId:
          type: string
        name:
          type: string
        enrollmentType:
          type: string
        tag:
          type: string
        slogan:
          type: string
        requirement:
          type: integer
        motd:
          type: string
        clientData:
          type: string
        subGroup:
          type: integer
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-group-users-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-mail:
      properties:
        mid:
          type: integer
      required:
      - mid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - mid
    konfig-generated-schema-single-parameter-schema-put--basic-mail:
      properties:
        body:
          type: string
        expires:
          type: string
        subject:
          type: string
        state:
          type: string
        mailId:
          type: integer
        category:
          type: string
        acceptAttachments:
          type: boolean
      required:
      - mailId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--object-mail-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-post--object-mail-objectId:
      properties:
        objectId:
          type: string
        body:
          type: string
        expires:
          type: string
        subject:
          type: string
        rewards:
          $ref: '#/components/schemas/MailRewards'
        id:
          type: integer
        senderGamerTag:
          type: integer
        category:
          type: string
        bodyRef:
          type: integer
        attachments:
          items:
            $ref: '#/components/schemas/AttachmentRequest'
          type: array
      required:
      - objectId
      - senderGamerTag
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-put--object-mail-objectId:
      properties:
        objectId:
          type: string
        body:
          type: string
        expires:
          type: string
        subject:
          type: string
        state:
          type: string
        mailId:
          type: integer
        category:
          type: string
        acceptAttachments:
          type: boolean
      required:
      - mailId
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-payments-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-notification:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-session:
      properties:
        source:
          type: string
        customParams:
          additionalProperties: true
          type: object
        shard:
          type: string
        locale:
          type: string
        deviceParams:
          additionalProperties: true
          type: object
        language:
          $ref: '#/components/schemas/SessionLanguageContext'
        time:
          type: integer
        platform:
          type: string
        gamer:
          type: integer
        device:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--object-stats-objectId:
      properties:
        objectId:
          type: string
        stats:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-get--object-stats-objectId:
      properties:
        stats:
          type: string
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - stats
      - objectId
    konfig-generated-schema-single-parameter-schema-get--basic-tournaments:
      properties:
        isRunning:
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - isRunning
    konfig-generated-schema-single-parameter-schema-post--basic-tournaments:
      properties:
        tournamentId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--object-tournaments-objectId:
      properties:
        objectId:
          type: string
      required:
      - objectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - objectId
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-timers:
      properties:
        name:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-timers:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-timers:
      properties:
        name:
          type: string
        cronish:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-promos:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-promos:
      properties:
        definition:
          $ref: '#/components/schemas/CreateRedemptionDef'
        codes:
          type: integer
        claimsPerCode:
          type: integer
      required:
      - claimsPerCode
      - codes
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-entitlement-defs:
      properties:
        symbol:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-entitlement-defs:
      properties:
        symbol:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - symbol
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-entitlement-defs:
      properties:
        symbol:
          type: string
        request:
          $ref: '#/components/schemas/EntitlementDefRequest'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-legacy-entitlement-defs:
      properties:
        symbol:
          type: string
        request:
          $ref: '#/components/schemas/EntitlementDefRequest'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-pvp-defs:
      properties:
        lbid:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-pvp-defs:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-legacy-pvp-defs:
      properties:
        lbid:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--basic-legacy-shards:
      properties:
        shardId:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--basic-legacy-shards:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--basic-legacy-shards:
      properties:
        shardId:
          type: string
        uri:
          type: string
        metadata:
          additionalProperties: true
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--basic-legacy-shards:
      properties:
        shardId:
          type: string
        uri:
          type: string
        metadata:
          $ref: '#/components/schemas/MetadataUpdate'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
  securitySchemes:
    userRequired:
      description: Gamer Tag of the player.
      in: header
      name: X-DE-GAMERTAG
      type: apiKey
      x-konfig-globally-required-security: true
    scope:
      description: Customer and project scope. This should contain the '<customer-id>.<project-id>'.
      in: header
      name: X-DE-SCOPE
      type: apiKey
      x-konfig-globally-required-security: true
    api:
      description: Signed Request authentication using project secret key.
      in: header
      name: X-DE-SIGNATURE
      type: apiKey
      x-konfig-globally-required-security: true
    user:
      bearerFormat: Bearer <Access Token>
      description: Bearer authentication with an player access token in the Authorization
        header.
      scheme: bearer
      type: http
      x-konfig-globally-required-security: true
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

