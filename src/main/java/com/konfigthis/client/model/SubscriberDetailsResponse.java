/*
 * history basic
 * var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SubscriberDetailsResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SubscriberDetailsResponse {
  public static final String SERIALIZED_NAME_CUSTOM_CHANNEL_PREFIX = "customChannelPrefix";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CHANNEL_PREFIX)
  private String customChannelPrefix;

  public static final String SERIALIZED_NAME_PLAYER_FOR_REALM_CHANNEL = "playerForRealmChannel";
  @SerializedName(SERIALIZED_NAME_PLAYER_FOR_REALM_CHANNEL)
  private String playerForRealmChannel;

  public static final String SERIALIZED_NAME_AUTHENTICATION_KEY = "authenticationKey";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_KEY)
  private String authenticationKey;

  public static final String SERIALIZED_NAME_GAME_GLOBAL_NOTIFICATION_CHANNEL = "gameGlobalNotificationChannel";
  @SerializedName(SERIALIZED_NAME_GAME_GLOBAL_NOTIFICATION_CHANNEL)
  private String gameGlobalNotificationChannel;

  public static final String SERIALIZED_NAME_GAME_NOTIFICATION_CHANNEL = "gameNotificationChannel";
  @SerializedName(SERIALIZED_NAME_GAME_NOTIFICATION_CHANNEL)
  private String gameNotificationChannel;

  public static final String SERIALIZED_NAME_SUBSCRIBE_KEY = "subscribeKey";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_KEY)
  private String subscribeKey;

  public static final String SERIALIZED_NAME_PLAYER_CHANNEL = "playerChannel";
  @SerializedName(SERIALIZED_NAME_PLAYER_CHANNEL)
  private String playerChannel;

  public SubscriberDetailsResponse() {
  }

  public SubscriberDetailsResponse customChannelPrefix(String customChannelPrefix) {
    
    
    
    
    this.customChannelPrefix = customChannelPrefix;
    return this;
  }

   /**
   * Get customChannelPrefix
   * @return customChannelPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomChannelPrefix() {
    return customChannelPrefix;
  }


  public void setCustomChannelPrefix(String customChannelPrefix) {
    
    
    
    this.customChannelPrefix = customChannelPrefix;
  }


  public SubscriberDetailsResponse playerForRealmChannel(String playerForRealmChannel) {
    
    
    
    
    this.playerForRealmChannel = playerForRealmChannel;
    return this;
  }

   /**
   * Get playerForRealmChannel
   * @return playerForRealmChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlayerForRealmChannel() {
    return playerForRealmChannel;
  }


  public void setPlayerForRealmChannel(String playerForRealmChannel) {
    
    
    
    this.playerForRealmChannel = playerForRealmChannel;
  }


  public SubscriberDetailsResponse authenticationKey(String authenticationKey) {
    
    
    
    
    this.authenticationKey = authenticationKey;
    return this;
  }

   /**
   * Get authenticationKey
   * @return authenticationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationKey() {
    return authenticationKey;
  }


  public void setAuthenticationKey(String authenticationKey) {
    
    
    
    this.authenticationKey = authenticationKey;
  }


  public SubscriberDetailsResponse gameGlobalNotificationChannel(String gameGlobalNotificationChannel) {
    
    
    
    
    this.gameGlobalNotificationChannel = gameGlobalNotificationChannel;
    return this;
  }

   /**
   * Get gameGlobalNotificationChannel
   * @return gameGlobalNotificationChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGameGlobalNotificationChannel() {
    return gameGlobalNotificationChannel;
  }


  public void setGameGlobalNotificationChannel(String gameGlobalNotificationChannel) {
    
    
    
    this.gameGlobalNotificationChannel = gameGlobalNotificationChannel;
  }


  public SubscriberDetailsResponse gameNotificationChannel(String gameNotificationChannel) {
    
    
    
    
    this.gameNotificationChannel = gameNotificationChannel;
    return this;
  }

   /**
   * Get gameNotificationChannel
   * @return gameNotificationChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGameNotificationChannel() {
    return gameNotificationChannel;
  }


  public void setGameNotificationChannel(String gameNotificationChannel) {
    
    
    
    this.gameNotificationChannel = gameNotificationChannel;
  }


  public SubscriberDetailsResponse subscribeKey(String subscribeKey) {
    
    
    
    
    this.subscribeKey = subscribeKey;
    return this;
  }

   /**
   * Get subscribeKey
   * @return subscribeKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubscribeKey() {
    return subscribeKey;
  }


  public void setSubscribeKey(String subscribeKey) {
    
    
    
    this.subscribeKey = subscribeKey;
  }


  public SubscriberDetailsResponse playerChannel(String playerChannel) {
    
    
    
    
    this.playerChannel = playerChannel;
    return this;
  }

   /**
   * Get playerChannel
   * @return playerChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlayerChannel() {
    return playerChannel;
  }


  public void setPlayerChannel(String playerChannel) {
    
    
    
    this.playerChannel = playerChannel;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SubscriberDetailsResponse instance itself
   */
  public SubscriberDetailsResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriberDetailsResponse subscriberDetailsResponse = (SubscriberDetailsResponse) o;
    return Objects.equals(this.customChannelPrefix, subscriberDetailsResponse.customChannelPrefix) &&
        Objects.equals(this.playerForRealmChannel, subscriberDetailsResponse.playerForRealmChannel) &&
        Objects.equals(this.authenticationKey, subscriberDetailsResponse.authenticationKey) &&
        Objects.equals(this.gameGlobalNotificationChannel, subscriberDetailsResponse.gameGlobalNotificationChannel) &&
        Objects.equals(this.gameNotificationChannel, subscriberDetailsResponse.gameNotificationChannel) &&
        Objects.equals(this.subscribeKey, subscriberDetailsResponse.subscribeKey) &&
        Objects.equals(this.playerChannel, subscriberDetailsResponse.playerChannel)&&
        Objects.equals(this.additionalProperties, subscriberDetailsResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customChannelPrefix, playerForRealmChannel, authenticationKey, gameGlobalNotificationChannel, gameNotificationChannel, subscribeKey, playerChannel, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriberDetailsResponse {\n");
    sb.append("    customChannelPrefix: ").append(toIndentedString(customChannelPrefix)).append("\n");
    sb.append("    playerForRealmChannel: ").append(toIndentedString(playerForRealmChannel)).append("\n");
    sb.append("    authenticationKey: ").append(toIndentedString(authenticationKey)).append("\n");
    sb.append("    gameGlobalNotificationChannel: ").append(toIndentedString(gameGlobalNotificationChannel)).append("\n");
    sb.append("    gameNotificationChannel: ").append(toIndentedString(gameNotificationChannel)).append("\n");
    sb.append("    subscribeKey: ").append(toIndentedString(subscribeKey)).append("\n");
    sb.append("    playerChannel: ").append(toIndentedString(playerChannel)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customChannelPrefix");
    openapiFields.add("playerForRealmChannel");
    openapiFields.add("authenticationKey");
    openapiFields.add("gameGlobalNotificationChannel");
    openapiFields.add("gameNotificationChannel");
    openapiFields.add("subscribeKey");
    openapiFields.add("playerChannel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubscriberDetailsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SubscriberDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubscriberDetailsResponse is not found in the empty JSON string", SubscriberDetailsResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("customChannelPrefix") != null && !jsonObj.get("customChannelPrefix").isJsonNull()) && !jsonObj.get("customChannelPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customChannelPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customChannelPrefix").toString()));
      }
      if ((jsonObj.get("playerForRealmChannel") != null && !jsonObj.get("playerForRealmChannel").isJsonNull()) && !jsonObj.get("playerForRealmChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerForRealmChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerForRealmChannel").toString()));
      }
      if ((jsonObj.get("authenticationKey") != null && !jsonObj.get("authenticationKey").isJsonNull()) && !jsonObj.get("authenticationKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authenticationKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authenticationKey").toString()));
      }
      if ((jsonObj.get("gameGlobalNotificationChannel") != null && !jsonObj.get("gameGlobalNotificationChannel").isJsonNull()) && !jsonObj.get("gameGlobalNotificationChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gameGlobalNotificationChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gameGlobalNotificationChannel").toString()));
      }
      if ((jsonObj.get("gameNotificationChannel") != null && !jsonObj.get("gameNotificationChannel").isJsonNull()) && !jsonObj.get("gameNotificationChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gameNotificationChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gameNotificationChannel").toString()));
      }
      if ((jsonObj.get("subscribeKey") != null && !jsonObj.get("subscribeKey").isJsonNull()) && !jsonObj.get("subscribeKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscribeKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscribeKey").toString()));
      }
      if ((jsonObj.get("playerChannel") != null && !jsonObj.get("playerChannel").isJsonNull()) && !jsonObj.get("playerChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerChannel").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubscriberDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubscriberDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubscriberDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubscriberDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SubscriberDetailsResponse>() {
           @Override
           public void write(JsonWriter out, SubscriberDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SubscriberDetailsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SubscriberDetailsResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubscriberDetailsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubscriberDetailsResponse
  * @throws IOException if the JSON string is invalid with respect to SubscriberDetailsResponse
  */
  public static SubscriberDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubscriberDetailsResponse.class);
  }

 /**
  * Convert an instance of SubscriberDetailsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

