/*
 * history basic
 * var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CommonResponse;
import com.konfigthis.client.model.NotificationRequest;
import com.konfigthis.client.model.NotificationRequestData;
import com.konfigthis.client.model.ServerEvent;
import com.konfigthis.client.model.SubscriberDetailsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationApi
 */
@Disabled
public class NotificationApiTest {

    private static NotificationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new NotificationApi(apiClient);
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomNotificationTest() throws ApiException {
        NotificationRequestData payload = null;
        Integer dbid = null;
        String customChannelSuffix = null;
        List<Integer> dbids = null;
        CommonResponse response = api.createCustomNotification()
                .payload(payload)
                .dbid(dbid)
                .customChannelSuffix(customChannelSuffix)
                .dbids(dbids)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnreadMessagesTest() throws ApiException {
        SubscriberDetailsResponse response = api.getUnreadMessages()
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendGlobalNotificationTest() throws ApiException {
        NotificationRequestData payload = null;
        Integer dbid = null;
        String customChannelSuffix = null;
        List<Integer> dbids = null;
        CommonResponse response = api.sendGlobalNotification()
                .payload(payload)
                .dbid(dbid)
                .customChannelSuffix(customChannelSuffix)
                .dbids(dbids)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendNotificationTest() throws ApiException {
        NotificationRequestData payload = null;
        Integer dbid = null;
        String customChannelSuffix = null;
        List<Integer> dbids = null;
        CommonResponse response = api.sendNotification()
                .payload(payload)
                .dbid(dbid)
                .customChannelSuffix(customChannelSuffix)
                .dbids(dbids)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendPlayerNotificationTest() throws ApiException {
        NotificationRequestData payload = null;
        Integer dbid = null;
        String customChannelSuffix = null;
        List<Integer> dbids = null;
        CommonResponse response = api.sendPlayerNotification()
                .payload(payload)
                .dbid(dbid)
                .customChannelSuffix(customChannelSuffix)
                .dbids(dbids)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendServerNotificationTest() throws ApiException {
        Boolean toAll = null;
        String event = null;
        Object payload = null;
        CommonResponse response = api.sendServerNotification(toAll)
                .event(event)
                .payload(payload)
                .execute();
        // TODO: test validations
    }

}
