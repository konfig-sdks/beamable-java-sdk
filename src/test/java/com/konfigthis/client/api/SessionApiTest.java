/*
 * history basic
 * var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.OnlineStatusResponses;
import com.konfigthis.client.model.SessionHeartbeat;
import com.konfigthis.client.model.SessionHistoryResponse;
import com.konfigthis.client.model.SessionLanguageContext;
import com.konfigthis.client.model.StartSessionRequest;
import com.konfigthis.client.model.StartSessionResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SessionApi
 */
@Disabled
public class SessionApiTest {

    private static SessionApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SessionApi(apiClient);
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSessionRequestTest() throws ApiException {
        String source = null;
        Map<String, Object> customParams = null;
        String shard = null;
        String locale = null;
        Map<String, Object> deviceParams = null;
        SessionLanguageContext language = null;
        Integer time = null;
        String platform = null;
        Integer gamer = null;
        String device = null;
        StartSessionResponse response = api.createSessionRequest()
                .source(source)
                .customParams(customParams)
                .shard(shard)
                .locale(locale)
                .deviceParams(deviceParams)
                .language(language)
                .time(time)
                .platform(platform)
                .gamer(gamer)
                .device(device)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHistoryTest() throws ApiException {
        Integer dbid = null;
        Integer month = null;
        Integer year = null;
        SessionHistoryResponse response = api.getHistory(dbid)
                .month(month)
                .year(year)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatusTest() throws ApiException {
        Integer intervalSecs = null;
        String playerIds = null;
        List<Object> playerIdsSeq = null;
        OnlineStatusResponses response = api.getStatus(intervalSecs)
                .playerIds(playerIds)
                .playerIdsSeq(playerIdsSeq)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postHeartbeatTest() throws ApiException {
        SessionHeartbeat response = api.postHeartbeat()
                .execute();
        // TODO: test validations
    }

}
