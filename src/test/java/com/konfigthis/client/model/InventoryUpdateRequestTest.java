/*
 * history basic
 * var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CurrencyProperty;
import com.konfigthis.client.model.ItemCreateRequest;
import com.konfigthis.client.model.ItemDeleteRequest;
import com.konfigthis.client.model.ItemUpdateRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for InventoryUpdateRequest
 */
public class InventoryUpdateRequestTest {
    private final InventoryUpdateRequest model = new InventoryUpdateRequest();

    /**
     * Model tests for InventoryUpdateRequest
     */
    @Test
    public void testInventoryUpdateRequest() {
        // TODO: test InventoryUpdateRequest
    }

    /**
     * Test the property 'currencies'
     */
    @Test
    public void currenciesTest() {
        // TODO: test currencies
    }

    /**
     * Test the property 'empty'
     */
    @Test
    public void emptyTest() {
        // TODO: test empty
    }

    /**
     * Test the property 'currencyProperties'
     */
    @Test
    public void currencyPropertiesTest() {
        // TODO: test currencyProperties
    }

    /**
     * Test the property 'currencyContentIds'
     */
    @Test
    public void currencyContentIdsTest() {
        // TODO: test currencyContentIds
    }

    /**
     * Test the property 'applyVipBonus'
     */
    @Test
    public void applyVipBonusTest() {
        // TODO: test applyVipBonus
    }

    /**
     * Test the property 'itemContentIds'
     */
    @Test
    public void itemContentIdsTest() {
        // TODO: test itemContentIds
    }

    /**
     * Test the property 'updateItems'
     */
    @Test
    public void updateItemsTest() {
        // TODO: test updateItems
    }

    /**
     * Test the property 'newItems'
     */
    @Test
    public void newItemsTest() {
        // TODO: test newItems
    }

    /**
     * Test the property 'transaction'
     */
    @Test
    public void transactionTest() {
        // TODO: test transaction
    }

    /**
     * Test the property 'deleteItems'
     */
    @Test
    public void deleteItemsTest() {
        // TODO: test deleteItems
    }

}
