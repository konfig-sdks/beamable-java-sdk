/*
 * history basic
 * var Beamable = BeamContext.Default; - That one line of code is a gateway to everything you need to build custom server logic via microservices along with a world of LiveOps tools and live services to build games that players love.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ClientDataEntry;
import com.konfigthis.client.model.PlayerOfferView;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PlayerListingView
 */
public class PlayerListingViewTest {
    private final PlayerListingView model = new PlayerListingView();

    /**
     * Model tests for PlayerListingView
     */
    @Test
    public void testPlayerListingView() {
        // TODO: test PlayerListingView
    }

    /**
     * Test the property 'clientDataList'
     */
    @Test
    public void clientDataListTest() {
        // TODO: test clientDataList
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

    /**
     * Test the property 'clientData'
     */
    @Test
    public void clientDataTest() {
        // TODO: test clientData
    }

    /**
     * Test the property 'cooldown'
     */
    @Test
    public void cooldownTest() {
        // TODO: test cooldown
    }

    /**
     * Test the property 'secondsActive'
     */
    @Test
    public void secondsActiveTest() {
        // TODO: test secondsActive
    }

    /**
     * Test the property 'offer'
     */
    @Test
    public void offerTest() {
        // TODO: test offer
    }

    /**
     * Test the property 'queryAfterPurchase'
     */
    @Test
    public void queryAfterPurchaseTest() {
        // TODO: test queryAfterPurchase
    }

    /**
     * Test the property 'purchasesRemain'
     */
    @Test
    public void purchasesRemainTest() {
        // TODO: test purchasesRemain
    }

    /**
     * Test the property 'secondsRemain'
     */
    @Test
    public void secondsRemainTest() {
        // TODO: test secondsRemain
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

}
